{"version":3,"sources":["store/Reducer.js","store/Store.js","components/Header/dateComponent.js","shared/constants.js","components/Header/Greenbar/Greenbar.js","components/Header/header.js","components/Landing/Landing.js","components/Location/Map.js","components/Location/LiveLocation.js","components/Location/AutoComplete.js","components/Location/Location.js","shared/ProgressButtonsInner.js","shared/ProgressButtons.js","shared/ProgressBar.js","components/GoalsSelector/GoalsSelector.js","components/Location/SoilConditions.js","components/Location/WeatherConditions.js","components/Location/LocationConfirmation.js","components/CropSelector/CropTable.js","components/MyCoverCropList/MyCoverCropCardsComponent.js","components/MyCoverCropList/MyCoverCropList.js","components/CropSelector/GrowthWindow.js","components/CropSelector/CropCalendarView.js","components/CropSelector/CropSelector.js","App.js","serviceWorker.js","index.js","components/Footer/footer.js","components/About/About.js","components/SeedingRateCalculator/SeedingRateCalculator.js","components/MixMaker/MixMaker.js","components/CoverCropExplorer/CoverCropExplorer.js"],"names":["Reducer","state","action","type","data","progress","markers","address","showAddressChangeBtn","zoneText","zone","addressVerified","snackOpen","snackMessage","allGoals","selectedGoals","cropData","selectedCrops","myCoverCropActivationFlag","speciesSelectorActivationFlag","initialState","zoom","snackVertical","snackHorizontal","modalOpen","modalSize","modalBody","addToCartBtnText","soilData","loam","siltLoam","weatherData","firstFrost","averageRain","Context","createContext","Store","children","useReducer","dispatch","Provider","value","DateComponent","today","Date","month","n","getMonth","date","getDate","getFullYear","this","Component","zoneIcon","w","h","height","width","viewBox","fill","xmlns","d","LightButton","withStyles","root","backgroundColor","borderRadius","color","padding","Button","GreenSwitch","thumb","track","input","Switch","UnderConstructionText","Grid","container","spacing","direction","alignItems","justify","style","minHeight","item","xs","Typography","variant","Greenbar","useContext","React","useState","anchorEl","setAnchorEl","useEffect","console","log","handleClick","event","currentTarget","handleZoneDropdownClose","target","getAttribute","isNaN","parseInt","className","split","substr","getAddress","onClick","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","key","length","currentMonth","toUpperCase","GetMonthString","fontSize","getWeatherData","Header","history","useHistory","collapse","setCollapse","isRoot","setIsRoot","redirectToRoot","isActive","window","location","pathname","to","cursor","size","component","NavLink","exact","activeClassName","push","light","fluid","isOpen","navbar","active","alert","Landing","props","bg","background","backgroundSize","incVal","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapComponent","minzoom","maxzoom","queryGEORevAPI","lat","lon","a","async","url","axios","get","then","response","fullAddress","display_name","setZoneState","postcode","zip","undefined","charAt","Map","center","minZoom","maxZoom","e","pop","latlng","lng","TileLayer","attribution","map","position","idx","Marker","Popup","LiveLocationComponent","name","checkedL","lstate","setState","SetZoneState","isUndefined","val","FormGroup","row","FormControlLabel","control","checked","onChange","navigator","geolocation","getCurrentPosition","coords","latitude","long","longitude","mrkrArr","enableHighAccuracy","maximumAge","timeout","label","useStyles","makeStyles","theme","formControl","margin","minWidth","selectEmpty","marginTop","modal","display","justifyContent","paper","palette","border","boxShadow","shadows","AutoCompleteComponent","classes","setOpen","setAddress","handleOpen","checkAddresses","query","fetch","json","Modal","BackdropProps","BackdropComponent","Backdrop","Fade","in","FormControl","TextField","aria-controls","fullWidth","aria-haspopup","InputProps","endAdornment","InputAdornment","IconButton","Search","LocationComponent","InputLabel","Select","labelId","textAlign","keuy","AutoComplete","LiveLocation","ProgressButtonsInner","isDisabled","disabled","changeProgress","renderProgressButtons","ProgressButtons","setIsDisabled","disableLogic","ProgressBar","GoalsSelector","headers","Headers","fetchGoals","append","records","goal","fields","startsWith","Tooltip","interactive","arrow","title","Chip","goals","indexOf","document","getElementById","classList","add","index","splice","remove","updateSelectedGoals","Skeleton","animation","SoilConditions","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","textField","marginLeft","marginRight","WeatherConditions","Info","aria-describedby","closeAfterTransition","helperText","LocationConfirmation","href","getRating","ratng","rating","CropTableComponent","setModalOpen","modalData","setModalData","handleModalClose","checkCropsAddedToCart","crop","btnId","querySelector","innerHTML","trim","flexDirection","src","alt","flexBasis","cropId","cropName","cropArray","contains","textContent","removeIndex","selectedCropsCopy","addCropToBasket","handleModalOpen","disableBackdropClick","borderTopLeftRadius","borderTopRightRadius","Close","paddingRight","paddingLeft","PhotoLibrary","PictureAsPdf","FormatListBulleted","Print","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpandMore","ExpansionPanelDetails","card","maxWidth","media","MyCoverCropCardsComponent","itemNo","Card","CardActionArea","CardMedia","image","CardContent","CardActions","MyCoverCropList","ListAlt","Add","HTMLTooltip","tooltip","typography","pxToRem","GrowthWindowComponent","cropLegendObj","Early","Mid","class","isCashCropMonth","fullMonth","moment","localeData","months","setMonthVals","cropDataLegendLabel_Early","cropDataLegendLabel_Mid","CropCalendarViewComponent","legendModal","setLegendModal","currentYear","allMonths","monthsShort","handleLegendModal","fetchRecordsIfUnavailable","format","Promise","resolve","reject","colSpan","borderRight","borderBottom","startIcon","AddCircle","GrowthWindow","CloseRounded","FiberManualRecord","CropSelector","showGrowthWindow","setShowGrowthWindow","isListView","setIsListView","expandCoverCropFilter","listItemId","x","querySelectorAll","i","j","toggleListView","CalendarToday","expanded","values","oldIndex","newIndex","newGoalArr","newGoals","arrayMove","renderList","renderItem","flexWrap","Checkbox","labelPlacement","CropTable","CropCalendarView","App","loadProgressBar","logo","Location","loadRelevantRoute","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","hostname","match","WrappedComponent","Footer","rel","Link","tableStyles","td","About","Box","SeedingRateCalculator","MixMaker","CoverCropExplorer","WrapperWithFooter","path","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db8aac90.chunk.js","sourcesContent":["const Reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_PROGRESS\": {\n      if (action.data.type === \"INCREMENT\") {\n        return { ...state, progress: state.progress + 1 };\n      } else if (action.data.type === \"DECREMENT\") {\n        return { ...state, progress: state.progress - 1 };\n      } else {\n      }\n    }\n    case \"CHANGE_ADDRESS_BY_TYPING\": {\n      if (action.data.markers) {\n        return {\n          ...state,\n          address: action.data.address,\n          showAddressChangeBtn: action.data.showAddressChangeBtn,\n          markers: action.data.markers\n        };\n      } else {\n        return {\n          ...state,\n          address: action.data.address,\n          showAddressChangeBtn: action.data.showAddressChangeBtn\n        };\n      }\n    }\n    case \"UPDATE_ZONE_TEXT\": {\n      return {\n        ...state,\n        zoneText: action.data.zoneText,\n        zone: action.data.zone\n      };\n    }\n    case \"CHANGE_ADDRESS\": {\n      return {\n        ...state,\n        address: action.data.address,\n        addressVerified: action.data.addressVerified\n      };\n    }\n    case \"UPDATE_MARKER\": {\n      return {\n        ...state,\n        markers: action.data.markers\n      };\n    }\n    case \"UPDATE_ADDRESS_ON_MAP_CLICK\": {\n      return {\n        ...state,\n        address: action.data.address,\n        addressVerified: action.data.addressVerified,\n        snackOpen: action.data.snackOpen,\n        snackMessage: action.data.snackMessage\n      };\n    }\n    case \"TOGGLE_ADDRESS_CHANGE_BUTTON\": {\n      return {\n        ...state,\n        showAddressChangeBtn: action.data.showAddressChangeBtn\n      };\n    }\n    case \"ADD_GOALS\": {\n      return {\n        ...state,\n        allGoals: action.data\n      };\n    }\n\n    case \"SNACK\": {\n      return {\n        ...state,\n        snackOpen: action.data.snackOpen,\n        snackMessage: action.data.snackMessage\n      };\n    }\n\n    case \"UPDATE_SELECTED_GOALS\": {\n      return {\n        ...state,\n        selectedGoals: action.data\n      };\n    }\n    case \"ADD_SELECTED_GOALS\": {\n      return {\n        ...state,\n        selectedGoals: [...state.selectedGoals, action.data]\n      };\n    }\n\n    case \"DRAG_GOALS\": {\n      return {\n        ...state,\n        selectedGoals: action.data.selectedGoals,\n        snackOpen: action.data.snackOpen,\n        snackMessage: action.data.snackMessage\n      };\n    }\n\n    case \"PULL_CROP_DATA\": {\n      return {\n        ...state,\n        cropData: action.data\n      };\n    }\n\n    case \"SELECTED_CROPS_MODIFIER\": {\n      return {\n        ...state,\n        selectedCrops: action.data.selectedCrops,\n        snackOpen: action.data.snackOpen,\n        snackMessage: action.data.snackMessage\n      };\n    }\n\n    case \"ACTIVATE_MY_COVER_CROP_LIST_TILE\": {\n      return {\n        ...state,\n        myCoverCropActivationFlag: action.data.myCoverCropActivationFlag,\n        speciesSelectorActivationFlag: action.data.speciesSelectorActivationFlag\n      };\n    }\n\n    case \"ACTIVATE_SPECIES_SELECTOR_TILE\": {\n      return {\n        ...state,\n        myCoverCropActivationFlag: action.data.myCoverCropActivationFlag,\n        speciesSelectorActivationFlag: action.data.speciesSelectorActivationFlag\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import React, { createContext, useReducer } from \"react\";\nimport Reducer from \"./Reducer\";\n\n// const StoreContext = createContext();\n\nconst initialState = {\n  progress: 0,\n  // progress: 5,\n  // address: \"\",\n  address: \"Lancaster, PA\",\n  markers: [[40.044437, -76.306229]],\n  // markers: [[35.76422, 78.69976]],\n  showAddressChangeBtn: false,\n  allGoals: [],\n  // allGoals: [\n  //   {\n  //     id: \"rec4LcUaBDq5GCcXL\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Lasting residue\",\n  //       Description:\n  //         \"Rates the effectiveness of the cover crop in providing a long-lasting mulch.\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recJPIQ6aEjfOtTgF\",\n  //         \"recMjAddemfDnNFqI\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"Dry matter - high, C to N ratio - high (3 star)\",\n  //       Notes:\n  //         \"Since this has the same consituent variables as Improve soil organic matter, could they be lumped together some how?\",\n  //       \"Constituent Variables Priorities\": \"C to N Ratio, Dry Matter (lbs/A/y)\"\n  //     },\n  //     createdTime: \"2019-08-19T16:53:43.000Z\"\n  //   },\n  //   {\n  //     id: \"rec7y2ybQxIFdIjbC\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Nitrogen scavenging\",\n  //       Description:\n  //         \"Rates a cover crop’s ability to take up and store excess nitrogen. Bear in mind that the sooner you plant a cover after main crop harvest—or overseed a cover into the standing crop—the more N it will be able to absorb.\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recHtDRj37jAAzNIj\",\n  //         \"recoB4dI7D89Dc7a6\",\n  //         \"receCQBBxMfKbWEyv\",\n  //         \"recMjAddemfDnNFqI\",\n  //         \"recqucMZjRgbifMQN\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"Dry matter - high, early spring growth - high (4-5 stars) , establishes quickly - high (4-5 stars), root depth - deep\",\n  //       Notes:\n  //         \"In areas where precip falls as rain for most of the winter, water will percolate causing N to move more; early planting is key to scavenging in such areas (as opposed to where ground freezes hard or snow cover is mostly present.)\",\n  //       \"Constituent Variables Priorities\":\n  //         \"Early spring growth, Establishes quickly, Root depth, Dry Matter (lbs/A/y), Family Common Name\"\n  //     },\n  //     createdTime: \"2019-08-19T21:18:02.000Z\"\n  //   },\n  //   {\n  //     id: \"rec9qULCT41IBsVUo\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"TBD- Suppress pest (non-weed) & diseases\",\n  //       Description:\n  //         \"Rates how well the cover crop suppresses diseases, insects, slugs, and other non-weed pests.\"\n  //     },\n  //     createdTime: \"2019-08-19T21:18:02.000Z\"\n  //   },\n  //   {\n  //     id: \"recCO2vWyryVqhr6S\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Forage harvest value\",\n  //       Description: \"Suitability as harvested forage (e.g., haylage).\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recH1sx9ffdPlprUq\",\n  //         \"recwPtOlsZzf8eesZ\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"grazing value - high (4-5 stars), harvestability - high (4-5 stars)\",\n  //       \"Constituent Variables Priorities\": \"Harvestability, Grazing value\"\n  //     },\n  //     createdTime: \"2019-08-19T21:18:02.000Z\"\n  //   },\n  //   {\n  //     id: \"recNPzZAnuNCjqdAb\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Pollinator support\",\n  //       Description:\n  //         \"Ability to provide resources needed by beneficials (e.g., shelter, nectar)\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recwPeXH4vksA8RE6\",\n  //         \"recjWdifpop3L0cca\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"pollinator habitat - high (4-5 stars), pollinator food - high (4-5 stars)\",\n  //       \"Constituent Variables Priorities\":\n  //         \"Pollinator food, Pollinator habitat\"\n  //     },\n  //     createdTime: \"2019-08-19T21:18:02.000Z\"\n  //   },\n  //   {\n  //     id: \"recRLXdSv7FLRTceX\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Nitrogen fixation\",\n  //       Description:\n  //         \"Rates cover crops for their relative ability to supply fixed N. Limiting to Legumes.\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recHtDRj37jAAzNIj\",\n  //         \"recMjAddemfDnNFqI\",\n  //         \"rec9PiL8Zj2uMWfHH\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"total N fixed - high (4-5 stars), dry matter - high (4-5 stars), early spring growth - high (4-5 stars)\",\n  //       Notes: \"total N fixed needs to be converted to a rating\",\n  //       \"Constituent Variables Priorities\":\n  //         \"Total N Fixed (lbs/A/y)\\nEarly spring growth\\nDry Matter (lbs/A/y)\"\n  //     },\n  //     createdTime: \"2019-08-19T21:18:02.000Z\"\n  //   },\n  //   {\n  //     id: \"recdSAmLuTKzbcwln\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Good grazing\",\n  //       Description: \"Suitability for grazing.\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recoB4dI7D89Dc7a6\",\n  //         \"recsNm4y8moJnMzw6\",\n  //         \"recwPtOlsZzf8eesZ\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"grazing value - high (4-5 stars), grazing tolerance - high (4-5 stars), establishes quickly - high (4-5 stars)\",\n  //       \"Constituent Variables Priorities\":\n  //         \"Establishes quickly, Grazing tolerance, Grazing value\"\n  //     },\n  //     createdTime: \"2019-08-19T21:18:02.000Z\"\n  //   },\n  //   {\n  //     id: \"recfo3LgGYl8iI4Qp\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Reduces subsurface soil compaction\",\n  //       Description: 'Reduces compaction in the top 0-6\" and/or 6-12\" of soil.',\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recVLbzeOzNMAdLZD\",\n  //         \"receCQBBxMfKbWEyv\",\n  //         \"rec6QUh7mboLxMjHp\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"loosens subsurface soil - high (4-5 stars), root depth - deep, root architecture - tap\",\n  //       Notes:\n  //         \"do cover crops need to be rated high on loosens subsurface and top soil? or just one? or the other? Also, doesnt' that impact which root architecture matters? There seems to be a bit of nuance to this.\",\n  //       \"Constituent Variables Priorities\":\n  //         \"Root architecture, Root depth, Loosens subsurface soil\"\n  //     },\n  //     createdTime: \"2019-08-19T21:18:02.000Z\"\n  //   },\n  //   {\n  //     id: \"recifuund3Kc4UuUt\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"TBD- Hinder crops (anti-goal)\",\n  //       Description:\n  //         \"Rates how likely the CC is to interfere with the cash crop (e.g., through creating a poor seed bed, immobilizing soil N, etc.)\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recJPIQ6aEjfOtTgF\",\n  //         \"recMjAddemfDnNFqI\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"Dry matter - low, C to N ratio - high (5 star)\",\n  //       \"Constituent Variables Priorities\": \"C to N Ratio, Dry Matter (lbs/A/y)\"\n  //     },\n  //     createdTime: \"2019-08-19T21:18:02.000Z\"\n  //   },\n  //   {\n  //     id: \"recjQE8nDL7x25vg6\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Weed suppression\",\n  //       Description:\n  //         \"Rates how well the cover crop out-competes weeds by any means through its life cycle, including killed residue. || opposite description: \\n[Risk that a cover crop could become a weed, either due to hard seed or due to flowering/setting seed that volunteers in later seasons; made worse when herbicide resistance is a known feature of the cover crop species/cultivar]\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recJPIQ6aEjfOtTgF\",\n  //         \"recJ7JmQiCQKcgZD2\",\n  //         \"recoB4dI7D89Dc7a6\",\n  //         \"recMjAddemfDnNFqI\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"Dry matter - high,  C to N - high, establishes quickly - high (4-5 stars), shape and orientation - ?\",\n  //       \"Constituent Variables Priorities\":\n  //         \"C to N Ratio, Shape & Orientation, Establishes quickly, Dry Matter (lbs/A/y)\"\n  //     },\n  //     createdTime: \"2019-08-19T21:18:02.000Z\"\n  //   },\n  //   {\n  //     id: \"recneO0wlTb4t0KdC\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Promote water quality\",\n  //       Description: \"Improve or maintain water quality.\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"receCQBBxMfKbWEyv\",\n  //         \"recVLbzeOzNMAdLZD\",\n  //         \"recyMjvRTKgxpvVoX\",\n  //         \"recJPIQ6aEjfOtTgF\",\n  //         \"rec9vYObq3SiwL1rK\",\n  //         \"recJ7JmQiCQKcgZD2\",\n  //         \"recxcF1h42PcoEyAz\",\n  //         \"recoB4dI7D89Dc7a6\",\n  //         \"recHtDRj37jAAzNIj\",\n  //         \"recMjAddemfDnNFqI\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"Dry matter - high, early spring growth - high (4-5 stars) , establishes quickly - high (4-5 stars), Supports Mycorrhizae - high (4 and 5 stars), [goals: nitrogen scavenging, prevents soil erosion]\",\n  //       \"Constituent Variables Priorities\":\n  //         \"Root depth, Root architecture, Winter Survival, C to N Ratio, Growing window, Shape & Orientation, Supports mycorrhizae, Establishes quickly, Early spring growth, Dry Matter (lbs/A/y)\"\n  //     },\n  //     createdTime: \"2019-08-19T21:18:02.000Z\"\n  //   },\n  //   {\n  //     id: \"recrZZvnT6xhPfTdN\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Prevent soil erosion\",\n  //       Description:\n  //         \"Rates how extensive and how quickly a root system develops, how well it holds soil against sheet and water erosion and the influence the growth habit may have on fighting water erosion.\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recVLbzeOzNMAdLZD\",\n  //         \"recJ7JmQiCQKcgZD2\",\n  //         \"recyMjvRTKgxpvVoX\",\n  //         \"recJPIQ6aEjfOtTgF\",\n  //         \"rec9vYObq3SiwL1rK\",\n  //         \"recMjAddemfDnNFqI\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"Dry matter - high, growing window - long, C to N - high, winter survival - expected, shape and orientation -?, root architecture - fibrous\",\n  //       Notes: \"Don't know how shape and orientation impact this.\",\n  //       \"Constituent Variables Priorities\":\n  //         \"Root architecture, Shape & Orientation, Winter Survival, C to N Ratio, Growing window, Dry Matter (lbs/A/y)\"\n  //     },\n  //     createdTime: \"2019-08-19T21:18:02.000Z\"\n  //   },\n  //   {\n  //     id: \"recsQbgLYFneFwXyr\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Reduces topsoil compaction\",\n  //       Description: 'Reduces compaction in the top 0-6\" and/or 6-12\" of soil.',\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recVLbzeOzNMAdLZD\",\n  //         \"receCQBBxMfKbWEyv\",\n  //         \"recLlVSvSYfmF7PZV\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"loosens topsoil - high (4-5 stars), root depth - deep, root architecture - fibrous\",\n  //       Notes:\n  //         \"do cover crops need to be rated high on loosens subsurface and top soil? or just one? or the other? Also, doesnt' that impact which root architecture matters? There seems to be a bit of nuance to this.\",\n  //       \"Constituent Variables Priorities\":\n  //         \"Root architecture, Root depth, Loosens topsoil\"\n  //     },\n  //     createdTime: \"2019-10-28T19:23:21.000Z\"\n  //   },\n  //   {\n  //     id: \"recvb8xD7c7teakpI\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Improve soil organic matter\",\n  //       Description:\n  //         \"Rates a cover crop’s ability to produce organic matter and improve soil structure. The ratings assume that you plan to use cover crops regularly in your cropping system to provide ongoing additions to soil organic matter. Think quality and quantity.\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recJPIQ6aEjfOtTgF\",\n  //         \"recMjAddemfDnNFqI\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"5 stars: Dry matter = 3, C to N ratio = 2; 4 stars: Dry matter = 3 and C to N ratio = 3, or Dry matter = 2 and C to N ratio = 2; 3 stars: Dry matter = 2 and C to N ratio = 3;  2 stars: Dry matter = 2 and C to N ratio = 1; 1 star: Dry matter = 1 and C to N ratio = 1\",\n  //       Notes:\n  //         \"Convert dry matter to a rating. C to N is currently a 3 star rating.\",\n  //       \"Constituent Variables Priorities\": \"C to N Ratio, Dry Matter (lbs/A/y)\"\n  //     },\n  //     createdTime: \"2019-08-19T16:53:43.000Z\"\n  //   },\n  //   {\n  //     id: \"recwKWXsn8Xg5vdSI\",\n  //     fields: {\n  //       \"Cover Crop Goal\": \"Increase soil aggregation\",\n  //       Description: \"Stability rather high turnover.\",\n  //       \"Constituent Variables (defined in DataDictionary)\": [\n  //         \"recVLbzeOzNMAdLZD\",\n  //         \"recxcF1h42PcoEyAz\"\n  //       ],\n  //       \"Thinking about Rules\":\n  //         \"Supports Mycorrhizae - high (4 and 5 stars), root architecture - fibrous\",\n  //       \"Constituent Variables Priorities\":\n  //         \"Root architecture, Supports mycorrhizae\"\n  //     },\n  //     createdTime: \"2019-08-19T16:53:43.000Z\"\n  //   }\n  // ],\n  cropData: [],\n  selectedCrops: [],\n  // selectedCrops: [\n  //   {\n  //     id: \"rec0fkRSPW2unbR48\",\n  //     cropName: \"Radish, Forage\",\n  //     btnId: \"cartBtn0\",\n  //     data: {\n  //       \"Cover Crop Name\": \"Radish, Forage\",\n  //       \"Scientific Name\": \"Raphanus sativus\",\n  //       \"cv, var, or ssp to specify\": \"Forage (CCS-779)\",\n  //       Origin: \"MCCC Species tool\",\n  //       \"Common Mixes\": [\"recCZSADGMOXfJRKQ\", \"rec4R86SQblxRbtBF\"],\n  //       \"Drought Tolerance\": 2,\n  //       \"Shade Tolerance\": 3,\n  //       \"Flood Tolerance\": 2,\n  //       \"Low Fertility Tolerance\": 2,\n  //       \"Salinity Tolerance\": 1,\n  //       \"Winter Survival\": [\"Seldom\"],\n  //       \"Active Growth Period\": [\"Fall\", \"Spring\"],\n  //       Duration: [\"Annual\"],\n  //       \"Shape & Orientation\": [\"Erect\"],\n  //       \"Broadcast Frost Seeding\": true,\n  //       \"Review Status\": \"Zone Team Start\",\n  //       \"Soil drainage\": [\n  //         \"Poorly drained\",\n  //         \"Somewhat poorly drained\",\n  //         \"Moderately well drained\",\n  //         \"Well drained\",\n  //         \"Well drained muck\"\n  //       ],\n  //       \"Min Germination Temp (F)\": 45,\n  //       \"Seeds per pound\": 20000,\n  //       \"Inoculant type (Legumes only)\": [\"none\"],\n  //       \"Seeding Rate: Broadcast (w/cultivation) (lbs/A)\": \"6-15\",\n  //       \"Seeding Rate: Drilled/Cultipack and Cultivation (lbs/A)\": \"5-12\",\n  //       \"Seeding Rate: Aerial (lbs/A)\": \"7-18\",\n  //       \"Drilled Depth\": \"¼-¾\",\n  //       Harvestability: 2,\n  //       \"Loosens topsoil\": 2,\n  //       \"Frees P & K\": 3,\n  //       \"Growing window\": \"Medium\",\n  //       \"Ease of establishment\": 1,\n  //       \"Family Common Name\": \"Mustard family\",\n  //       \"Family Scientific Name\": \"Brassicaceae\",\n  //       \"Soil textures\": [\"coarse\", \"medium\", \"fine\"],\n  //       \"Minimum tolerant soil pH\": 6,\n  //       \"Maximum tolerant soil pH\": 8,\n  //       \"Soil moisture use\": \"Medium\",\n  //       \"Cover Crop Group\": \"Brassica\",\n  //       \"Heat Tolerance\": 3,\n  //       \"Seed price per pound\": 2,\n  //       \"Can Aerial Seed or broadcast w/no cultivation?\": true,\n  //       \"USDA Symbol\": \"RASA2\",\n  //       \"Zone Decision\": \"Include\",\n  //       \"State Use\": \"Common\",\n  //       \"Flooding/Ponding Tolerance\": \"Poor\",\n  //       \"Total N Fixed (lbs/A/y)\": \"0\",\n  //       \"Dry Matter (lbs/A/y)\": \"1200-3000\",\n  //       \"C to N Ratio\": 1,\n  //       \"Notes: Termination [Goal: Method: Timing]\":\n  //         \"More likely to survive if frost occurs prior to formation of storage root.\",\n  //       \"Loosens subsurface soil\": 5,\n  //       \"Supports mycorrhizae\": 1,\n  //       \"Early spring growth\": 1,\n  //       \"Flowering trigger\": [\"Long day (>14 hours)\"],\n  //       \"Establishes quickly\": 4,\n  //       \"Root architecture\": \"Tap\",\n  //       \"Root depth\": \"Deep\",\n  //       \"Notes: Growth, Roots, and Nutrients\":\n  //         \"Minimum Germination Temp. ~ 45˚F\",\n  //       \"Tillage Termination at Vegetative\": 3,\n  //       \"Pollinator Habitat\": 2,\n  //       \"Grazing Value\": 4,\n  //       \"Pollinator Food\": 2,\n  //       \"Grazing Tolerance\": 4,\n  //       \"Notes: Grazers & Pollinators\":\n  //         \"Winter kills at 25°F; Attracts earthworms\",\n  //       \"Tillage Termination at Flowering\": 3,\n  //       \"Freezing Termination at Vegetative\": 4,\n  //       \"Freezing Termination at Flowering\": 5,\n  //       \"Chemical Termination at Flowering\": 5,\n  //       \"Mow Termination at Flowering\": 5,\n  //       \"Chemical Termination at Vegetative\": 4,\n  //       \"Mow Termination at Vegetative\": 5,\n  //       \"Roller Crimp Termination at Flowering\": 1,\n  //       \"Roller Crimp Tolerance at Vegetative\": 1,\n  //       \"Seed price per acre: Drilled/Cultipack and Cultivation\": 1,\n  //       \"Seed price per acre: Aerial\": 1,\n  //       \"Seed price per acre: Broadcast (w/cultivation)\": 1,\n  //       \"Dry Matter Rating\": 2,\n  //       \"March, Mid\": [\"Reliable establishment/growth\"],\n  //       \"March, Early\": [\"Reliable establishment/growth\"],\n  //       \"June, Mid\": [\"Can interseed\"],\n  //       \"June, Early\": [\"Can interseed\"],\n  //       \"May, Mid\": [\"Reliable establishment/growth\"],\n  //       \"May, Early\": [\"Reliable establishment/growth\"],\n  //       \"April, Mid\": [\"Reliable establishment/growth\"],\n  //       \"April, Early\": [\"Reliable establishment/growth\"],\n  //       \"September, Mid\": [\"Reliable establishment/growth\"],\n  //       \"September, Early\": [\n  //         \"Reliable establishment/growth\",\n  //         \"Late seeding rate\"\n  //       ],\n  //       \"August, Mid\": [\n  //         \"Reliable establishment/growth\",\n  //         \"Standard seeding rate\"\n  //       ],\n  //       \"August, Early\": [\n  //         \"Reliable establishment/growth\",\n  //         \"Early seeding rate\"\n  //       ],\n  //       \"July, Mid\": [\"Early seeding rate\"],\n  //       \"July, Early\": [\"Can interseed\"],\n  //       \"October, Early\": [\"Temperature/moisture risk to establishment/growth\"],\n  //       \"Seeding Rate Calculator\": [\"recEHWardn0xNZ2bI\"],\n  //       \"Base Seeding Rate Min (lbs/A)\": 5,\n  //       \"Base Seeding Rate Max (lbs/A)\": 12,\n  //       \"Seed Price Calculator\": [\"recwqPQb3QmzxiCYv\"],\n  //       \"Base Seed Price Per Acre Min\": 1,\n  //       \"Base Seed Price Per Acre Max\": 1,\n  //       \"Improve soil aggregation\": 1,\n  //       \"Improve soil organic matter\": 2,\n  //       \"Lasting residue\": 2,\n  //       \"Prevent soil erosion\": 1,\n  //       \"Promote water quality\": 3,\n  //       \"Reduces subsurface compaction\": 5,\n  //       \"Nitrogen fixation\": 2,\n  //       \"Nitrogen scavenging\": 4,\n  //       \"Good grazing\": 5,\n  //       \"Forest harvest value\": 4,\n  //       \"Pollinator support\": 3,\n  //       \"Weed suppression\": 3,\n  //       \"Reduces topsoil compaction\": 1,\n  //       \"v Base Seed Price Per Acre Min\": 10,\n  //       \"Base Seed Price Per Acre\": 10,\n  //       \"f Base Seed Price Per Acre Min\": 1,\n  //       \"Average Seeding Rate Min\": [27.57894736842105],\n  //       \"Average Seeding Rate Max\": [56.026315789473685],\n  //       \"f Base Seed Price Per Acre Max\": 1\n  //     }\n  //   }\n  // ],\n  // selectedGoals: [\n  //   \"Lasting residue\",\n  //   \"Nitrogen scavenging\",\n  //   \"Prevent soil erosion\"\n  // ],\n  selectedGoals: [],\n  zoom: 13,\n  addressVerified: false,\n  snackOpen: false,\n  snackVertical: \"bottom\",\n  snackHorizontal: \"right\",\n  snackMessage: \"\",\n  modalOpen: false,\n  modalSize: \"lg\", //sm,md,lg,fluid\n  modalBody: {},\n  addToCartBtnText: \"add to list\",\n  zoneText: \"Zone 7\",\n  zone: 7,\n  soilData: [\n    {\n      loam: 54,\n      siltLoam: 38\n    }\n  ],\n  weatherData: [\n    {\n      firstFrost: \"Oct 13\",\n      averageRain: 3.46\n    }\n  ],\n  myCoverCropActivationFlag: false,\n  speciesSelectorActivationFlag: true\n};\n\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return (\n    <Context.Provider value={[state, dispatch]}>{children}</Context.Provider>\n  );\n};\nexport const Context = createContext(initialState);\nexport default Store;\n","import { Component } from \"react\";\n\nexport class DateComponent extends Component {\n  constructor() {\n    super();\n\n    var today = new Date();\n\n    var month = [];\n    month[0] = \"January\";\n    month[1] = \"February\";\n    month[2] = \"March\";\n    month[3] = \"April\";\n    month[4] = \"May\";\n    month[5] = \"June\";\n    month[6] = \"July\";\n    month[7] = \"August\";\n    month[8] = \"September\";\n    month[9] = \"October\";\n    month[10] = \"November\";\n    month[11] = \"December\";\n    var n = month[today.getMonth()];\n\n    this.state = {\n      date: `${n} ${today.getDate()}, ${today.getFullYear()}`\n    };\n  }\n\n  render() {\n    return this.state.date;\n  }\n}\n","import React from \"react\";\nimport {\n  withStyles,\n  Button,\n  Switch,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\n\nexport const locationIcon = (w, h) => {\n  return (\n    <svg\n      width={w}\n      height={h}\n      viewBox=\"0 0 14 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M7 0C3.13 0 0 3.13 0 7C0 12.25 7 20 7 20C7 20 14 12.25 14 7C14 3.13 10.87 0 7 0ZM7 9.5C5.62 9.5 4.5 8.38 4.5 7C4.5 5.62 5.62 4.5 7 4.5C8.38 4.5 9.5 5.62 9.5 7C9.5 8.38 8.38 9.5 7 9.5Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\nexport const zoneIcon = (w, h) => {\n  return (\n    <svg\n      height={h}\n      width={w}\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM6 15.5C4.62 15.5 3.5 14.38 3.5 13C3.5 11.62 4.62 10.5 6 10.5C7.38 10.5 8.5 11.62 8.5 13C8.5 14.38 7.38 15.5 6 15.5ZM7.5 6C7.5 4.62 8.62 3.5 10 3.5C11.38 3.5 12.5 4.62 12.5 6C12.5 7.38 11.38 8.5 10 8.5C8.62 8.5 7.5 7.38 7.5 6ZM14 15.5C12.62 15.5 11.5 14.38 11.5 13C11.5 11.62 12.62 10.5 14 10.5C15.38 10.5 16.5 11.62 16.5 13C16.5 14.38 15.38 15.5 14 15.5Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport const cloudIcon = (w, h) => {\n  return (\n    <svg\n      width={w}\n      height={h}\n      viewBox=\"0 0 24 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19.35 6.04C18.67 2.59 15.64 0 12 0C9.11 0 6.6 1.64 5.35 4.04C2.34 4.36 0 6.91 0 10C0 13.31 2.69 16 6 16H19C21.76 16 24 13.76 24 11C24 8.36 21.95 6.22 19.35 6.04Z\"\n        fill=\"black\"\n      />\n    </svg>\n  );\n};\n\nexport const LightButton = withStyles({\n  root: {\n    backgroundColor: \"#e3f2f4\",\n    borderRadius: \"20px\",\n    color: \"#000\",\n    padding: \"10px 20px 10px 20px\",\n    \"&:hover\": {\n      backgroundColor: \"#48a8ab\",\n      color: \"#fff\"\n    }\n  }\n})(Button);\n\nexport const GreenSwitch = withStyles({\n  thumb: {\n    backgroundColor: \"rgb(138, 188, 98, 1)\"\n  },\n  track: {\n    backgroundColor: \"rgb(138, 188, 98, 0.5)\"\n  },\n  input: {\n    \"&:checked\": {\n      color: \"rgb(240, 247, 235)\"\n    }\n  },\n  \"&:checked\": {\n    color: \"rgb(240, 247, 235)\"\n  }\n})(Switch);\n\nexport const GetMonthString = month => {\n  let months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ];\n\n  return months[month].toUpperCase();\n};\n\nexport const UnderConstructionText = () => {\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Grid item xs={3}>\n        <Typography variant=\"h3\">Under Construction</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useContext, Fragment } from \"react\";\nimport { Context } from \"../../../store/Store\";\nimport \"../../../styles/header.scss\";\nimport {\n  locationIcon,\n  zoneIcon,\n  GetMonthString\n} from \"../../../shared/constants\";\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\nimport FilterHdrIcon from \"@material-ui/icons/FilterHdr\";\nimport CloudIcon from \"@material-ui/icons/Cloud\";\n\nconst Greenbar = () => {\n  const [state, dispatch] = useContext(Context);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  useEffect(() => {\n    console.log(\"---Greeenbar.js mounted---\");\n  }, []);\n  const getAddress = () => {\n    if (state.address === \"\") {\n      return \"\";\n    } else {\n      let address = state.address.split(\",\");\n      // address = address.split(\" \");\n      //console.log(\"address: \" + address[1]);\n      address = `${address[0]}${address[1]}`;\n\n      address = address.substr(0, 20);\n\n      return (\n        <Button>\n          {locationIcon(14, 20)}\n          &nbsp; {address}\n        </Button>\n      );\n    }\n  };\n\n  const getZone = () => {\n    if (state.zoneText === \"\" || parseInt(state.zoneText) === 0) {\n      return \"\";\n    } else\n      return state.address === \"\" ? (\n        \"\"\n      ) : (\n        <Fragment>\n          <Button onClick={handleClick}>\n            {zoneIcon(20, 14)}\n            &nbsp;\n            {state.zone !== 2 ? `Zone ${state.zone}` : `Zone ${state.zone} & 3`}\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleZoneDropdownClose}\n          >\n            <MenuItem onClick={handleZoneDropdownClose} value={2} key={2}>\n              Zone 2 and 3\n            </MenuItem>\n            <MenuItem onClick={handleZoneDropdownClose} value={4} key={4}>\n              Zone 4\n            </MenuItem>\n            <MenuItem onClick={handleZoneDropdownClose} value={5} key={5}>\n              Zone 5\n            </MenuItem>\n            <MenuItem onClick={handleZoneDropdownClose} value={6} key={6}>\n              Zone 6\n            </MenuItem>\n            <MenuItem onClick={handleZoneDropdownClose} value={7} key={7}>\n              Zone 7\n            </MenuItem>\n          </Menu>\n        </Fragment>\n      );\n  };\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const getSoil = () => {\n    if (state.soilData.length === 0) {\n      return \"\";\n    } else\n      return (\n        <Button>\n          {<FilterHdrIcon />}\n          &nbsp;{\" \"}\n          {`Soils: Loam (${state.soilData[0].loam}%), Silt Loam: (${state.soilData[0].siltLoam}%)`}\n        </Button>\n      );\n  };\n\n  const handleZoneDropdownClose = event => {\n    setAnchorEl(null);\n    let zoneText = \"\";\n    console.log(event.target.getAttribute(\"value\"));\n    let value = event.target.getAttribute(\"value\");\n\n    if (!isNaN(parseInt(value))) {\n      switch (parseInt(value)) {\n        case 2: {\n          zoneText = `Zone ${value} &amp; ${value + 1}`;\n          dispatch({\n            type: \"UPDATE_ZONE_TEXT\",\n            data: {\n              zoneText: zoneText,\n              zone: value\n            }\n          });\n          break;\n        }\n        case 4: {\n          zoneText = `Zone ${value}`;\n          dispatch({\n            type: \"UPDATE_ZONE_TEXT\",\n            data: {\n              zoneText: zoneText,\n              zone: value\n            }\n          });\n          break;\n        }\n        case 5: {\n          zoneText = `Zone ${value}`;\n          dispatch({\n            type: \"UPDATE_ZONE_TEXT\",\n            data: {\n              zoneText: zoneText,\n              zone: value\n            }\n          });\n          break;\n        }\n        case 6: {\n          zoneText = `Zone ${value}`;\n          dispatch({\n            type: \"UPDATE_ZONE_TEXT\",\n            data: {\n              zoneText: zoneText,\n              zone: value\n            }\n          });\n          break;\n        }\n        case 7: {\n          zoneText = `Zone ${value}`;\n          dispatch({\n            type: \"UPDATE_ZONE_TEXT\",\n            data: {\n              zoneText: zoneText,\n              zone: value\n            }\n          });\n          break;\n        }\n        default: {\n        }\n      }\n    }\n  };\n\n  const getWeatherData = () => {\n    let date = new Date();\n    let month = date.getMonth();\n    // TODO: convert month to string, currently returning int\n    let currentMonth = GetMonthString(month);\n    // frost free days :-\n    // http://128.192.142.200:3000/hourly?location=raleigh%20nc&start=2015-01-01&end=2019-12-31&stats=count(date)/24/5&where=air_temperature%3E0&output=json\n    if (state.weatherData.length === 0) return \"\";\n    else\n      return (\n        <Button>\n          {<CloudIcon fontSize=\"small\" />}\n          &nbsp;{\" \"}\n          {`Average First Frost: ${state.weatherData[0].firstFrost} | Average Rain(${currentMonth}): ${state.weatherData[0].averageRain} in`}\n        </Button>\n      );\n  };\n  return (\n    <div className=\"greenBarWrapper\">\n      <div className=\"addressBar\">{state.progress > 0 ? getAddress() : \"\"}</div>\n\n      <div className=\"zoneBar\">{state.progress > 0 ? getZone() : \"\"}</div>\n      <div className=\"soilBar\">{state.progress > 1 ? getSoil() : \"\"}</div>\n      <div className=\"weatherBar\">\n        {state.progress > 1 ? getWeatherData() : \"\"}\n      </div>\n    </div>\n  );\n};\n\nexport default Greenbar;\n","import React, { useEffect, useContext } from \"react\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/header.scss\";\nimport { DateComponent } from \"./dateComponent\";\nimport Greenbar from \"./Greenbar/Greenbar\";\nimport { cloudIcon } from \"../../shared/constants\";\nimport {\n  MDBNavbar,\n  MDBContainer,\n  MDBHamburgerToggler,\n  MDBCollapse,\n  MDBNavbarNav,\n  MDBNavItem\n} from \"mdbreact\";\nimport { Button } from \"@material-ui/core\";\nimport { Redirect, Link, useHistory, NavLink } from \"react-router-dom\";\n// import { Link, Button } from \"@material-ui/core\";\nconst Header = () => {\n  let history = useHistory();\n  const [state, dispatch] = useContext(Context);\n  const [collapse, setCollapse] = React.useState(false);\n  const [isRoot, setIsRoot] = React.useState(false);\n  const [redirectToRoot, setRedirectToRoot] = React.useState(false);\n  let isActive = {};\n\n  useEffect(() => {\n    console.log(\"---Header.js started---\");\n\n    // check if isRoot\n\n    if (window.location.pathname === \"/\") {\n      setIsRoot(true);\n      // setRedirectToRoot(true);\n    } else {\n      setIsRoot(false);\n    }\n    // check value of progress state\n\n    switch (state.progress) {\n      case 0:\n        isActive[\"val\"] = 0;\n    }\n\n    // document.getElementsByClassName('.nav-toggle')[0].addEventListener\n  }, [state.progress]);\n  const toggleClass = (el, className) => el.classList.toggle(className);\n\n  const burgurClick = () => {\n    toggleClass(document.querySelector(\"body\"), \"nav-open\");\n  };\n\n  const toggleSingleCollapse = () => {\n    setCollapse(!collapse);\n  };\n  const setmyCoverCropActivationFlag = () => {\n    if (window.location.pathname === \"/\") {\n      if (state.progress > 4) {\n        dispatch({\n          type: \"ACTIVATE_MY_COVER_CROP_LIST_TILE\",\n          data: {\n            myCoverCropActivationFlag: true,\n            speciesSelectorActivationFlag: false\n          }\n        });\n      }\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const setSpeciesSelectorActivationFlag = () => {\n    // if (state.progress) {\n    if (window.location.pathname === \"/\") {\n      console.log(\"pathname\", \"/\");\n      dispatch({\n        type: \"ACTIVATE_SPECIES_SELECTOR_TILE\",\n        data: {\n          speciesSelectorActivationFlag: true,\n          myCoverCropActivationFlag: false\n        }\n      });\n    } else {\n      // console.log(\"pathname\", window.location.pathname);\n      history.push(\"/\");\n      // return <Redirect to=\"/\" />;\n    }\n\n    // console.log(window.location.pathname);\n    // if (window.location.pathname !== \"/\") {\n    //   setIsRoot(false);\n    //   setRedirectToRoot(true);\n    //   // return <Redirect to=\"/\" />;\n    // } else {\n    //   setIsRoot(true);\n    //   setRedirectToRoot(false);\n    // }\n    // }\n  };\n\n  return redirectToRoot ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <header>\n      <div className=\"topHeader\">\n        <Link to=\"/about\" style={{ color: \"black\" }}>\n          {\" \"}\n          <div>ABOUT</div>\n        </Link>\n        <div onClick={() => window.open(\"http://northeastcovercrops.com\")}>\n          NECCC\n        </div>\n        <div\n          onClick={() =>\n            window.open(\n              \"http://www.nrcs.usda.gov/wps/portal/nrcs/site/national/home/\"\n            )\n          }\n        >\n          USDA NRCS\n        </div>\n        <div onClick={() => window.open(\"http://www.northeastsare.org/\")}>\n          NE SARE\n        </div>\n        <div>HELP</div>\n        <div>FEEDBACK</div>\n      </div>\n      <div className=\"midHeader\">\n        <div\n          className=\"logoContainer\"\n          onClick={() => window.open(\"http://northeastcovercrops.com\")}\n          style={{ cursor: \"pointer\" }}\n        />\n        <div className=\"dataComponents\">\n          <span>\n            <DateComponent />\n          </span>\n          <span>\n            Forecast: {cloudIcon(14, 20)} 58 | 31 F\n            <i className=\"fas fa-cloud-rain pl-2\"></i> 0.25in\n          </span>\n        </div>\n      </div>\n      <div className=\"bottomHeader\">\n        <Button\n          size=\"large\"\n          component={NavLink}\n          exact\n          to={\"/cover-crop-explorer\"}\n          activeClassName=\"active\"\n        >\n          COVER CROP EXPLORER\n        </Button>\n        <Button\n          // className={state.speciesSelectorActivationFlag ? \"active\" : \"\"}\n          className={\n            isRoot ? (state.speciesSelectorActivationFlag ? \"active\" : \"\") : \"\"\n          }\n          onClick={setSpeciesSelectorActivationFlag}\n          size=\"large\"\n        >\n          SPECIES SELECTOR\n        </Button>\n        <Button\n          size=\"large\"\n          exact\n          component={NavLink}\n          to={\"/mix-maker\"}\n          activeClassName=\"active\"\n        >\n          MIX MAKER\n        </Button>\n        {/* <Button className={state.progress === 3 ? \"active\" : \"\"}> */}\n        <Button\n          size=\"large\"\n          exact\n          component={NavLink}\n          to={\"/seeding-rate-calculator\"}\n          activeClassName=\"active\"\n        >\n          SEEDING RATE CALCULATOR\n        </Button>\n        <Button\n          size=\"large\"\n          className={state.myCoverCropActivationFlag ? \"active\" : \"\"}\n          onClick={setmyCoverCropActivationFlag}\n        >\n          MY COVER CROP LIST\n        </Button>\n      </div>\n      {/* <div className=\"ham-wrapper\">\n        <div className=\"nav-toggle\" onClick={() => burgurClick()}>\n          <div className=\"ham-icon\"></div>\n        </div>\n        <div className={state.progress === 0 ? \"active\" : \"\"}>\n          COVER CROP EXPLORER\n        </div>\n        <div className={state.progress === 1 ? \"active\" : \"\"}>\n          SPECIES SELECTOR\n        </div>\n        <div className={state.progress === 2 ? \"active\" : \"\"}>MIX MAKER</div>\n        <div className={state.progress === 3 ? \"active\" : \"\"}>\n          SEED RATE CALCULATOR\n        </div>\n        <div className={state.progress === 4 ? \"active\" : \"\"}>\n          MY COVER CROP LIST\n        </div>\n      </div> */}\n      {/* <MDBContainer fluid> */}\n      <MDBNavbar light className=\"ham-navWrapper\">\n        <MDBContainer fluid>\n          <MDBHamburgerToggler\n            color=\"#598443\"\n            id=\"hamburger1\"\n            onClick={() => toggleSingleCollapse()}\n          />\n          <MDBCollapse isOpen={collapse} navbar>\n            <MDBNavbarNav className=\"ham-nav\">\n              <MDBNavItem active={state.progress === 0 ? true : false}>\n                COVER CROP EXPLORER\n              </MDBNavItem>\n              <MDBNavItem active={state.progress === 1 ? true : false}>\n                SPECIES SELECTOR\n              </MDBNavItem>\n              <MDBNavItem active={state.progress === 2 ? true : false}>\n                MIX MAKER\n              </MDBNavItem>\n              <MDBNavItem active={state.progress === 3 ? true : false}>\n                SEED RATE CALCULATOR\n              </MDBNavItem>\n              <MDBNavItem\n                onClick={() => alert(\"hey\")}\n                active={state.progress === 4 ? true : false}\n                className={state.myCoverCropActivationFlag ? \"active\" : \"\"}\n              >\n                MY COVER CROP LIST\n              </MDBNavItem>\n            </MDBNavbarNav>\n          </MDBCollapse>\n        </MDBContainer>\n      </MDBNavbar>\n      {/* </MDBContainer> */}\n      <Greenbar />\n\n      {window.location.pathname === \"/\" ? (\n        state.progress === 0 ? (\n          <div className=\"topBar\"></div>\n        ) : (\n          <div className=\"topBarMuted\"></div>\n        )\n      ) : (\n        <div className=\"topBar\"></div>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from \"react\";\nimport \"../../styles/landing.scss\";\nimport { Context } from \"../../store/Store\";\n// import { Typography, Button } from \"@material-ui/core\";\nimport { LightButton } from \"../../shared/constants\";\n\nconst setWrapperStyle = bg => {\n  return {\n    background: `url(${bg})`,\n    backgroundSize: \"cover\"\n  };\n};\n\nconst Landing = props => {\n  const [state, dispatch] = useContext(Context);\n\n  const incrementProgress = incVal => {\n    incVal = parseInt(incVal);\n    if (incVal === 1) {\n      if (state.progress === 0) {\n        dispatch({\n          type: \"UPDATE_PROGRESS\",\n          data: {\n            type: \"INCREMENT\"\n          }\n        });\n      }\n    }\n  };\n  return (\n    <aside className=\"landingWrapper\" style={setWrapperStyle(props.bg)}>\n      <div className=\"boxWrapper\">\n        <aside className=\"text-left\">\n          <h2>Welcome to the NECCC Cover Crop Decision Support Tools</h2>\n          <p>\n            You are currently interacting with a Beta version of the Cover Crop\n            DSTs. The purpose of this interaction is so that we may gather\n            feedback about the usability and usefulness of these tools. The\n            cover crop data you will see originated in the Midwest Cover Crops\n            Council (MCCC) species selector tool, the USDA Plants database, and\n            a seeding rate calculator developed by NY NRCS. It has been reviewed\n            by cover crop experts in the Northeast in each USDA plant hardiness\n            zone.{\" \"}\n          </p>\n          <p>\n            Please note: these data are still being finalized and are shown here\n            as a preview. Thank you for your time and consideration. We look\n            forward to your feedback and hope to build a pleasant cover crop\n            tool experience that helps you to effectively select and manage your\n            cover crops.\n          </p>\n\n          <p className=\"mt-4\">\n            {\" \"}\n            Thank you for your time and consideration. We look forward to your\n            feedback and hope to build a pleasant cover crop tool experience\n            that helps you to effectively select and manage your cover crops.\n          </p>\n        </aside>\n        <div className=\"nextButton pt-4\">\n          {/* <button onClick={() => incrementProgress(1)}>NEXT</button> */}\n          <LightButton onClick={() => incrementProgress(1)}>NEXT</LightButton>\n        </div>\n      </div>\n    </aside>\n  );\n};\n\nexport default Landing;\n","import React, { useEffect, useContext } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { Context } from \"../../store/Store\";\nimport axios from \"axios\";\n\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\n\nconst MapComponent = ({ width, height, minzoom, maxzoom }) => {\n  const [state, dispatch] = useContext(Context);\n  useEffect(() => {\n    console.log(\"---Map.js---\");\n  });\n\n  const addMarker = e => {\n    const { markers } = state;\n    markers.pop();\n    markers.push(e.latlng);\n    // console.log(e.latlng);\n    dispatch({\n      type: \"UPDATE_MARKER\",\n      data: {\n        markers: markers\n      }\n    });\n    // this.setState({ markers });\n    // console.log(markers[0]);\n    let lon = markers[0].lng;\n    let lat = markers[0].lat;\n    queryGEORevAPI(lat, lon);\n  };\n  const queryGEORevAPI = async (lat, lon) => {\n    const url = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lon}&format=json`;\n    await axios\n      .get(url)\n      .then(response => {\n        let data = response.data;\n        let fullAddress = data.display_name;\n        console.log(data);\n        // console.log(data2);\n        // console.log(data.address.postcode);\n        // check https://phzmapi.org/[zip].json to map zone with zip probably also restricting the zips?\n        setZoneState(data.address.postcode);\n        return fullAddress;\n      })\n      .then(fullAddress => {\n        dispatch({\n          type: \"CHANGE_ADDRESS\",\n          data: { address: `${fullAddress}`, addressVerified: true }\n        });\n      });\n  };\n\n  const setZoneState = async zip => {\n    // console.log(zip);\n    await axios\n      .get(`https://phzmapi.org/${zip}.json`)\n      .then(response => {\n        let data = response.data;\n        let zone = 0;\n        if (data !== null && data !== undefined) {\n          if (data.zone.length > 1) {\n            //  strip everything except the first char and covert it to int\n            zone = data.zone.charAt(0);\n            // alert(zone);\n          } else zone = data.zone;\n          return (zone = parseInt(zone));\n        } else {\n          return 7;\n        }\n      })\n      .then(zone => {\n        // check if zone is in the NECCC range else set a default\n        if (zone <= 7 && zone > 1) {\n          if (zone === 2 || zone === 3) {\n            dispatch({\n              type: \"UPDATE_ZONE_TEXT\",\n              data: {\n                zoneText: \"Zone 2 & 3\",\n                zone: 2\n              }\n            });\n          } else {\n            dispatch({\n              type: \"UPDATE_ZONE_TEXT\",\n              data: {\n                zoneText: `Zone ${zone}`,\n                zone: parseInt(zone)\n              }\n            });\n          }\n        } else {\n          dispatch({\n            type: \"UPDATE_ZONE_TEXT\",\n            data: {\n              zoneText: \"Zone 7\",\n              zone: 7\n            }\n          });\n        }\n      });\n  };\n  return (\n    <Map\n      style={{ height: height, width: width }}\n      center={state.markers[0]}\n      zoom={state.zoom}\n      minZoom={minzoom}\n      maxZoom={maxzoom}\n      onClick={addMarker}\n      // ref={myMap}\n    >\n      <TileLayer\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?\"\n      />\n      {state.markers.map((position, idx) => (\n        <Marker key={`marker-${idx}`} position={position}>\n          <Popup>\n            <span>{state.address}</span>\n          </Popup>\n        </Marker>\n      ))}\n    </Map>\n  );\n};\n\nexport default MapComponent;\n","import React, { useContext } from \"react\";\nimport { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport { Context } from \"../../store/Store\";\nimport axios from \"axios\";\n// import MapComponent from \"./Map\";\n// import { UpdateLatLong } from \"../../shared/Functions\";\nimport { GreenSwitch } from \"../../shared/constants\";\n\nconst LiveLocationComponent = () => {\n  const [state, dispatch] = useContext(Context);\n  const [lstate, setState] = React.useState({\n    checkedL: false\n  });\n\n  const handleLocationToggle = name => event => {\n    if (event.target.checked) {\n      let options = {\n        enableHighAccuracy: true,\n        maximumAge: 60000,\n        timeout: 45000\n      };\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          function(position) {\n            let lat = position.coords.latitude;\n            let long = position.coords.longitude;\n            if (isUndefined(lat) || isUndefined(long)) return false;\n            else {\n              const url = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${long}&format=json`;\n              axios\n                .get(url)\n                .then(response => {\n                  let data = response.data;\n                  let fullAddress = data.display_name;\n                  // console.log(data);\n                  // const { markers } = state;\n                  // markers.pop();\n                  let mrkrArr = [];\n                  mrkrArr[0] = lat;\n                  mrkrArr[1] = long;\n                  // alert(mrkrArr);\n                  // console.log(\"mrkrArr: \" + mrkrArr.lat);\n                  // markers.push(mrkrArr);\n                  // console.log(e.latlng);\n                  dispatch({\n                    type: \"UPDATE_MARKER\",\n                    data: {\n                      markers: [mrkrArr]\n                    }\n                  });\n                  // check https://phzmapi.org/[zip].json to map zone with zip probably also restricting the zips?\n                  if (data.address.postcode !== undefined) {\n                    SetZoneState(data.address.postcode);\n                  }\n\n                  console.log(\"live location zip: \", data);\n                  return fullAddress;\n                })\n                .then(fullAddress => {\n                  dispatch({\n                    type: \"CHANGE_ADDRESS\",\n                    data: { address: `${fullAddress}`, addressVerified: true }\n                  });\n\n                  // markers.push(mrkrArr);\n                  // console.log(e.latlng);\n                  // dispatch({\n                  //   type: \"UPDATE_MARKER\",\n                  //   data: {\n                  //     markers: markers\n                  //   }\n                  // });\n                })\n                .then(() => {});\n            }\n          },\n          function() {\n            alert(\"Oops! An error occurred.\");\n          },\n          options\n        );\n      }\n    }\n\n    setState({ [name]: event.target.checked });\n  };\n\n  const SetZoneState = async zip => {\n    await axios\n      .get(`https://phzmapi.org/${zip}.json`)\n      .then(response => {\n        let data = response.data;\n        let zone = 0;\n        if (data !== null && data !== undefined) {\n          if (data.zone.length > 1) {\n            //  strip everything except the first char and covert it to int\n            zone = data.zone.charAt(0);\n            // alert(zone);\n          } else zone = data.zone;\n          return (zone = parseInt(zone));\n        } else {\n          return 7;\n        }\n      })\n      .then(zone => {\n        // check if zone is in the NECCC range else set a default\n        if (zone <= 7 && zone > 1) {\n          if (zone === 2 || zone === 3) {\n            dispatch({\n              type: \"UPDATE_ZONE_TEXT\",\n              data: {\n                zoneText: \"Zone 2 & 3\",\n                zone: 2\n              }\n            });\n          } else {\n            dispatch({\n              type: \"UPDATE_ZONE_TEXT\",\n              data: {\n                zoneText: `Zone ${zone}`,\n                zone: parseInt(zone)\n              }\n            });\n          }\n        } else {\n          dispatch({\n            type: \"UPDATE_ZONE_TEXT\",\n            data: {\n              zoneText: \"Zone 7\",\n              zone: 7\n            }\n          });\n        }\n      });\n  };\n\n  const isUndefined = val => {\n    if (val === undefined || val === \"\" || val === null) return true;\n    else return false;\n  };\n\n  return (\n    <div>\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <GreenSwitch\n              checked={state.checkedL}\n              onChange={handleLocationToggle(\"checkedL\")}\n              value=\"checkedL\"\n            />\n          }\n          label={lstate.checkedL ? \"Yes\" : \"No\"}\n        />\n      </FormGroup>\n      <small>Use Current Location</small>\n    </div>\n  );\n};\n\nexport default LiveLocationComponent;\n","// TODO: Autocomplete feature is not yet implemented\n// WHY: https://operations.osmfoundation.org/policies/nominatim/ Doesn't allow the API usage for building auto-complete\n// Lancaster, Pennsylvania as default for PASA\n\nimport React, {\n  useState,\n  useEffect,\n  useContext,\n  useRef,\n  Fragment\n} from \"react\";\n\nimport {\n  TextField,\n  InputAdornment,\n  IconButton,\n  FormControl,\n  makeStyles,\n  Modal,\n  Backdrop,\n  Fade\n} from \"@material-ui/core\";\nimport { Context } from \"../../store/Store\";\nimport { Search } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nconst AutoCompleteComponent = () => {\n  const classes = useStyles();\n  const [state, dispatch] = useContext(Context);\n  const [open, setOpen] = useState(false);\n  const [address, setAddress] = useState(\"\");\n\n  const handleToggle = () => {\n    handleOpen();\n    checkAddresses(address).then(data => {\n      console.log(data);\n    });\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleChange = event => {\n    setAddress(event.target.value);\n  };\n\n  const checkAddresses = async query => {\n    let url = `https://nominatim.openstreetmap.org/search?q=${query}&country=United%20States&format=json`;\n    let response = await fetch(url);\n    response = response.json();\n    return response;\n  };\n\n  return (\n    <Fragment>\n      <Modal\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        BackdropProps={{\n          timeout: 500\n        }}\n        BackdropComponent={Backdrop}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Suggested Locations</h2>\n            <div>\n              <ul>\n                <li>Address 1</li>\n                <li>Address 2</li>\n                <li>Address 3</li>\n              </ul>\n              <em>\n                If you don't find your location here, try typing a bit more\n              </em>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n      <FormControl\n        variant=\"filled\"\n        style={{ width: \"100%\" }}\n        className={classes.formControl}\n      >\n        <TextField\n          aria-controls={open ? \"menu-list-grow\" : undefined}\n          label=\"LOCATION\"\n          value={state.address !== \"\" ? state.address : address}\n          onChange={handleChange}\n          fullWidth\n          aria-haspopup=\"true\"\n          variant=\"filled\"\n          InputProps={\n            address.length > 5\n              ? {\n                  endAdornment: (\n                    <InputAdornment>\n                      <IconButton onClick={handleToggle}>\n                        <Search />\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }\n              : \"\"\n          }\n        ></TextField>\n      </FormControl>\n    </Fragment>\n  );\n};\n\nexport default AutoCompleteComponent;\n","import React, { useEffect, useContext } from \"react\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/location.scss\";\n\n// import { cloudIcon } from \"../../shared/constants\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  makeStyles\n  // TextField,\n  // withStyles,\n  // Button\n} from \"@material-ui/core\";\n// import Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport axios from \"axios\";\nimport MapComponent from \"./Map\";\nimport LiveLocation from \"./LiveLocation\";\nimport AutoComplete from \"./AutoComplete\";\n// import { Link, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst LocationComponent = () => {\n  const classes = useStyles();\n  const [state, dispatch] = useContext(Context);\n\n  useEffect(() => {\n    console.log(\"---Location.js started---\");\n  });\n\n  const handleAddressChangeByText = event => {\n    console.log(event.target.value);\n    dispatch({\n      type: \"CHANGE_ADDRESS_BY_TYPING\",\n      data: {\n        address: event.target.value,\n        showAddressChangeBtn: true\n      }\n    });\n  };\n\n  const updateAddressOnClick = async () => {\n    // update the new text address from state to map with a new marker!\n\n    // get currect address from state\n    var q = state.address;\n    // https://nominatim.openstreetmap.org/search/?q=1139%20crab%20orchard%20drive&format=json\n    await axios\n      .get(`https://nominatim.openstreetmap.org/search/?q=${q}&format=json`)\n      .then(response => {\n        let data = response.data;\n        // console.log(data);\n        if (data.length === 1) {\n          dispatch({\n            action: \"UPDATE_ADDRESS_ON_MAP_CLICK\",\n            data: {\n              markers: [[data[0].lat, data[0].lon]],\n              zoom: 15,\n              addressVerified: true,\n              address: data[0].display_name,\n              snackOpen: true,\n              snackMessage: \"Address Updated\"\n            }\n          });\n          // th;\n          //   this.setState({\n          //     markers: [[data[0].lat, data[0].lon]],\n          //     zoom: 15,\n          //     addressVerified: true,\n          //     address: data[0].display_name\n          //   });\n        } else {\n          dispatch({\n            action: \"UPDATE_ADDRESS_ON_MAP_CLICK\",\n            data: {\n              address: \"\",\n              addressVerified: false,\n              snackOpen: true,\n              snackMessage: \"Please complete the address\"\n            }\n          });\n        }\n\n        // let latlng = data.display_name;\n        // this.setState({\n        //   address: latlng\n        // });\n        // let latlng = data.results.map((latlng) => {\n\n        // })\n      })\n      .then(() => {\n        dispatch({\n          action: \"TOGGLE_ADDRESS_CHANGE_BUTTON\",\n          data: {\n            showAddressChangeBtn: false\n          }\n        });\n      });\n  };\n\n  return (\n    <div\n      className=\"container-fluid mt-5\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <div className=\"row boxContainerRow\" style={{}}>\n        <div className=\"col-lg-6 col-sm-12\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <h1>Where is your field located?</h1>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <p style={{ fontSize: \"18px\" }}>\n                  Select plant hardiness zone for least site specific results.\n                  Enter address or zip code for county-level specificity. For\n                  more specific results, mark out your field boundary in the\n                  map.\n                </p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 col-sm-12\">\n                <FormControl\n                  variant=\"filled\"\n                  style={{ width: \"100%\" }}\n                  className={classes.formControl}\n                >\n                  <InputLabel>PLANT HARDINESS ZONE</InputLabel>\n                  <Select\n                    variant=\"filled\"\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    style={{\n                      textAlign: \"left\"\n                    }}\n                    onChange={event => {\n                      //   console.log(\"evvt\" + event.target.);\n                      if (event.target.value === 2) {\n                        dispatch({\n                          type: \"UPDATE_ZONE_TEXT\",\n                          data: {\n                            zoneText: \"Zone 2 & 3\",\n                            zone: parseInt(event.target.value)\n                          }\n                        });\n                      } else if (event.target.value === 4) {\n                        dispatch({\n                          type: \"UPDATE_ZONE_TEXT\",\n                          data: {\n                            zoneText: \"Zone 4\",\n                            zone: parseInt(event.target.value)\n                          }\n                        });\n                      } else if (event.target.value === 5) {\n                        dispatch({\n                          type: \"UPDATE_ZONE_TEXT\",\n                          data: {\n                            zoneText: \"Zone 5\",\n                            zone: parseInt(event.target.value)\n                          }\n                        });\n                      } else if (event.target.value === 6) {\n                        dispatch({\n                          type: \"UPDATE_ZONE_TEXT\",\n                          data: {\n                            zoneText: \"Zone 6\",\n                            zone: parseInt(event.target.value)\n                          }\n                        });\n                      } else {\n                        dispatch({\n                          type: \"UPDATE_ZONE_TEXT\",\n                          data: {\n                            zoneText: \"Zone 7\",\n                            zone: parseInt(event.target.value)\n                          }\n                        });\n                      }\n                    }}\n                    value={state.zone}\n                  >\n                    <MenuItem value={0}>\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={2} key={2}>\n                      Zone 2 and 3\n                    </MenuItem>\n                    <MenuItem value={4} key={4}>\n                      Zone 4\n                    </MenuItem>\n                    <MenuItem value={5} key={5}>\n                      Zone 5\n                    </MenuItem>\n                    <MenuItem value={6} keuy={6}>\n                      Zone 6\n                    </MenuItem>\n                    <MenuItem value={7} key={7}>\n                      Zone 7\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </div>\n              <div className=\"col-md-6 col-sm-12\">\n                <AutoComplete />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div\n                className=\"col-md-6 offset-md-6 col-sm-12\"\n                style={{ textAlign: \"left\" }}\n              >\n                <LiveLocation />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 offset-md-6 col-sm-12\"></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-6 col-sm-12\">\n          <MapComponent width=\"100%\" height=\"100%\" minzoom={4} maxzoom={20} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LocationComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Context } from \"../store/Store\";\nimport { LightButton } from \"./constants\";\n\nconst ProgressButtonsInner = props => {\n  let isDisabled = props.disabled;\n\n  const [state, dispatch] = useContext(Context);\n\n  const changeProgress = type => {\n    if (type === \"increment\") {\n      // if progress = 1 (location stage), check if textfield has a value? then set state address to that value\n      // if(state.progress === 1) {\n      //   if(document.getElementById('google-map-autocompletebar').)\n      // }\n      dispatch({\n        type: \"UPDATE_PROGRESS\",\n        data: {\n          type: \"INCREMENT\"\n        }\n      });\n    }\n\n    if (type === \"decrement\") {\n      dispatch({\n        type: \"UPDATE_PROGRESS\",\n        data: {\n          type: \"DECREMENT\"\n        }\n      });\n    }\n  };\n\n  return (\n    <Fragment>\n      <LightButton onClick={() => changeProgress(\"decrement\")}>\n        {\" \"}\n        back\n      </LightButton>\n      <LightButton\n        onClick={() => changeProgress(\"increment\")}\n        disabled={isDisabled}\n        className=\"ml-3\"\n      >\n        next\n      </LightButton>\n    </Fragment>\n  );\n};\n\nexport default ProgressButtonsInner;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { LightButton } from \"./constants\";\nimport { Context } from \"../store/Store\";\nimport ProgressButtonsInner from \"./ProgressButtonsInner\";\n\nconst ProgressButtons = () => {\n  const [state, dispatch] = useContext(Context);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  useEffect(() => {\n    disableLogic();\n  }, [state]);\n  const disableLogic = () => {\n    switch (state.progress) {\n      case 1: {\n        // location selection state\n        if (state.zone === 0 || isNaN(state.zone) || state.address === \"\") {\n          setIsDisabled(true);\n        } else {\n          setIsDisabled(false);\n        }\n        break;\n      }\n      case 4: {\n        // goals selection state\n        if (state.selectedGoals.length > 3) {\n          setIsDisabled(true);\n        } else {\n          setIsDisabled(false);\n        }\n      }\n    }\n  };\n\n  return renderProgressButtons(state.progress, isDisabled);\n};\n\nconst renderProgressButtons = (progress, isDisabled) => {\n  if (progress === 0) return \"\";\n  else {\n    return (\n      <div>\n        <ProgressButtonsInner disabled={isDisabled} />\n      </div>\n    );\n  }\n};\n\nexport default ProgressButtons;\n","import React from \"react\";\n// import { LightButton } from \"./constants\";\nimport { Context } from \"../store/Store\";\nimport \"../styles/progressIndicator.scss\";\n\nconst ProgressBar = () => {\n  const [state, dispatch] = React.useContext(Context);\n  return (\n    <div className=\"gprogress\">\n      <div className=\"progress-track\">Question {state.progress} of 4</div>\n      <div className=\"progress-diagram\">\n        <div\n          id=\"step1\"\n          className={\n            state.progress !== 1 ? `progress-step` : `progress-step active`\n          }\n        ></div>\n\n        <div\n          id=\"step2\"\n          className={\n            state.progress !== 2 ? `progress-step` : `progress-step active`\n          }\n        ></div>\n\n        <div\n          id=\"step3\"\n          className={\n            state.progress !== 3 ? `progress-step` : `progress-step active`\n          }\n        ></div>\n\n        <div\n          id=\"step4\"\n          className={\n            state.progress !== 4 ? `progress-step` : `progress-step active`\n          }\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","// TODO: Goal tags are not responsive!\nimport React, { useContext, useEffect } from \"react\";\nimport { Context } from \"../../store/Store\";\n\nimport \"../../styles/goalsSelector.scss\";\nimport { Tooltip, Chip } from \"@material-ui/core\";\n\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst GoalsSelector = () => {\n  const [state, dispatch] = useContext(Context);\n  const goalsURL =\n    \"https://api.airtable.com/v0/appC47111lCOTaMYe/Cover%20Crop%20Goals?maxRecords=300\";\n  const headers = new Headers();\n\n  useEffect(() => {\n    fetchGoals();\n  }, []);\n\n  const updateSelectedGoals = (item, key) => {\n    const goals = [...state.selectedGoals];\n\n    if (goals.indexOf(item.fields[\"Cover Crop Goal\"]) === -1) {\n      // does not exist, dispatch to state\n\n      document.getElementById(`chip${key}`).classList.add(\"active\");\n      dispatch({\n        type: \"ADD_SELECTED_GOALS\",\n        data: item.fields[\"Cover Crop Goal\"]\n      });\n    } else {\n      // exists, remove it from the state and update the state\n      let index = goals.indexOf(item.fields[\"Cover Crop Goal\"]);\n      goals.splice(index, 1);\n\n      // make it lighter on the ui\n\n      document.getElementById(`chip${key}`).classList.remove(\"active\");\n\n      dispatch({\n        type: \"UPDATE_SELECTED_GOALS\",\n        data: goals\n      });\n    }\n  };\n\n  const fetchGoals = async () => {\n    headers.append(\"Authorization\", \"Bearer ***REMOVED***\");\n    await fetch(goalsURL, { headers: headers })\n      .then(response => {\n        // console.log(response);\n        return response.json();\n      })\n      .then(response => {\n        // console.log(response);\n        // console.log(response.records);\n        dispatch({\n          type: \"ADD_GOALS\",\n          data: response.records\n        });\n      });\n  };\n\n  return (\n    <div className=\"goalsContainer mt-5\">\n      <div className=\"row boxContainerRow goalsBoxContainer\">\n        <div className=\"col-lg-12\">\n          <h1>What are your cover cropping goals</h1>\n        </div>\n        <div className=\"col-lg-12\">\n          <p>Select upto three. Hover for more information</p>\n        </div>\n        <div className=\"goals col-lg-12\">\n          {state.allGoals.length > 0 ? (\n            state.allGoals.map((goal, key) =>\n              !goal.fields[\"Cover Crop Goal\"].startsWith(\"TBD\") ? (\n                <Tooltip\n                  interactive\n                  arrow\n                  title={\n                    <div className=\"tooltipTextContainer\">\n                      <p>{goal.fields[\"Description\"]}</p>\n                    </div>\n                  }\n                  key={`tooltip${key}`}\n                >\n                  <Chip\n                    label={goal.fields[\"Cover Crop Goal\"].toUpperCase()}\n                    onClick={() => updateSelectedGoals(goal, key)}\n                    key={`chip${key}`}\n                    id={`chip${key}`}\n                    size=\"medium\"\n                    variant=\"outlined\"\n                    className=\"goal\"\n                  />\n                </Tooltip>\n              ) : (\n                \"\"\n              )\n            )\n          ) : (\n            <Skeleton\n              animation=\"pulse\"\n              height=\"100\"\n              width=\"100\"\n              variant=\"rect\"\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GoalsSelector;\n","import React from \"react\";\nimport TerrainIcon from \"@material-ui/icons/Terrain\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst SoilConditions = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-12\">\n        <h1>Soil Conditions?</h1>\n      </div>\n      <div className=\"col-lg-12 mt-2\">\n        <h6 className=\"font-weight-bold text-uppercase\">\n          <TerrainIcon /> SOILS COMPOSITION\n        </h6>\n        <p className=\"offset-lg-1 col-lg-6\">Loam (54%), Silt Loam (38%)</p>\n      </div>\n      <div className=\"col-lg-12 mt-2\">\n        <h6 className=\"font-weight-bold text-uppercase\">\n          <TerrainIcon style={{ color: \"transparent\" }} />\n          DRAINAGE CLASS\n        </h6>\n        <div className=\"drainageSlider col-lg-6 offset-lg-1\">\n          <Slider\n            defaultValue={50}\n            // getAriaValueText={}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            step={25}\n            marks\n            min={0}\n            max={100}\n          />\n          <p className=\"text-center text-uppercase\">WELL DRAINED</p>\n        </div>\n      </div>\n      <div className=\"col-lg-12 mt-2\">\n        <h6 className=\"font-weight-bold text-uppercase\">\n          <TerrainIcon style={{ color: \"transparent\" }} />\n          FLOODING OR PONDING\n        </h6>\n        <div className=\"floodingSlider col-lg-6 offset-lg-1\">\n          <Slider\n            defaultValue={0}\n            // getAriaValueText={}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            step={8}\n            marks\n            min={10}\n            max={110}\n          />\n          <p className=\"text-center text-uppercase\">NONE</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SoilConditions;\n","import React, { useContext, useState } from \"react\";\nimport { LightButton } from \"../../shared/constants\";\n// import Slider from \"@material-ui/core/Slider\";\nimport { Cloud, Info } from \"@material-ui/icons\";\nimport {\n  Button,\n  Modal,\n  makeStyles,\n  Fade,\n  Backdrop,\n  FormGroup,\n  TextField,\n  //   FormControlLabel,\n  Typography\n} from \"@material-ui/core\";\n\nimport { Context } from \"../../store/Store\";\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nconst WeatherConditions = () => {\n  //   const [state, dispatch] = useContext(Context);\n  const classes = useStyles();\n  //   const [selectedDate, setSelectedDate] = useState(\n  //     new Date(\"2014-08-18T21:11:54\")\n  //   );\n  const [open, setOpen] = React.useState(false);\n\n  const handleModalOpen = () => {\n    setOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setOpen(false);\n  };\n\n  const getPickerValue = value => {\n    console.log(value);\n  };\n  //   const renderModalEditContent = () => {\n  //     return (\n\n  //     );\n  //   };\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-12\">\n        <h1>Weather Conditions?</h1>\n      </div>\n      <div className=\"col-lg-9 mt-2\">\n        <h6 className=\"font-weight-bold text-uppercase\">\n          <Cloud /> HISTORICAL WEATHER\n        </h6>\n        <div className=\"offset-lg-1 col-lg-11\">\n          Average Frost Dates\n          <div className=\"offset-lg-1\">\n            First Frost Date: <b>Oct 13</b>\n          </div>\n          <div className=\"offset-lg-1\">\n            {\" \"}\n            Last Frost Date: <b>May 2</b>\n          </div>\n          <div className=\"text-right font-size-small\">\n            (source: NOAA <Info className=\"font-size-small\" /> )\n          </div>\n        </div>\n        <div className=\"offset-lg-1 col-lg-11\">\n          Average Precipitation\n          <div className=\"offset-lg-1\">\n            NOVEMBER: <b>3.6 inches</b>\n          </div>\n          <div className=\"offset-lg-1\">\n            Annual: <b>43 inches</b>\n          </div>\n          <div className=\"text-right font-size-small\">\n            (source: NOAA <Info className=\"font-size-small\" /> )\n          </div>\n        </div>\n        <div className=\"offset-lg-1 col-lg-11\">\n          Frost Free Days: <b>173</b>\n          <div className=\"text-right font-size-small\">\n            (source: SSURGO <Info className=\"font-size-small\" /> )\n          </div>\n        </div>\n      </div>\n      <div className=\"col-lg-3 mt-2\">\n        <Button onClick={handleModalOpen}>CLICK TO EDIT</Button>\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"ransition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={open}>\n          <div className={`modalContainer ${classes.paper}`}>\n            <h2 id=\"transition-modal-title\">Edit Weather Data</h2>\n            <div id=\"transition-modal-description\">\n              <div className=\"container-fluid\">\n                <FormGroup>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-12\">\n                      <Typography variant=\"h6\">First Frost Data</Typography>\n                    </div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-6\">\n                      <TextField\n                        label=\"First Frost Month\"\n                        id=\"margin-none\"\n                        defaultValue=\"Oct\"\n                        className={classes.textField}\n                        helperText=\"\"\n                      />\n                    </div>\n                    <div className=\"col-6\">\n                      <TextField\n                        label=\"First Frost Day\"\n                        id=\"margin-none\"\n                        defaultValue=\"13\"\n                        className={classes.textField}\n                        helperText=\"\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-12\">\n                      <Typography variant=\"h6\">\n                        Average Precipitation\n                      </Typography>\n                    </div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-6\">\n                      <TextField\n                        label=\"November\"\n                        id=\"margin-none\"\n                        defaultValue=\"3.6 inches\"\n                        className={classes.textField}\n                        helperText=\"\"\n                      />\n                    </div>\n                    <div className=\"col-6\">\n                      <TextField\n                        label=\"Annual\"\n                        id=\"margin-none\"\n                        defaultValue=\"43 inches\"\n                        className={classes.textField}\n                        helperText=\"\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-12\">\n                      <Typography variant=\"h6\">Frost Free Days</Typography>\n                    </div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-6\">\n                      <TextField\n                        label=\"Frost Free Days\"\n                        id=\"margin-none\"\n                        defaultValue=\"173\"\n                        className={classes.textField}\n                        helperText=\"\"\n                      />\n                    </div>\n                    <div className=\"col-6\"></div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-6\">\n                      <LightButton>update</LightButton>\n                    </div>\n                  </div>\n                </FormGroup>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default WeatherConditions;\n","import React, { useContext } from \"react\";\nimport MapComponent from \"./Map\";\nimport { Context } from \"../../store/Store\";\nimport AutoCompleteComponent from \"./AutoComplete\";\nimport SoilConditions from \"./SoilConditions\";\nimport WeatherConditions from \"./WeatherConditions\";\n\nconst LocationConfirmation = () => {\n  const [state, dispatch] = useContext(Context);\n  return (\n    <div\n      className=\"container-fluid mt-5\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <div className=\"row boxContainerRow\" style={{ textAlign: \"left\" }}>\n        <div className=\"col-lg-6\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <MapComponent\n                  width=\"100%\"\n                  height=\"100%\"\n                  minzoom={4}\n                  maxzoom={20}\n                />\n              </div>\n              <div className=\"col-lg-6\">\n                <h1>Location Details</h1>\n                <p>\n                  Your cover crop recommendations will come from the Plant\n                  Hardiness Zone {state.zone} NECCC dataset.\n                </p>\n              </div>\n            </div>\n            <div className=\"row mt-3\">\n              <div className=\"col-lg-12\">\n                <AutoCompleteComponent />\n              </div>\n            </div>\n            <div className=\"row mt-3\">\n              <div className=\"col-lg-12\">\n                <p>\n                  Disclaimer: Cover crop recommendations are based on expert\n                  opinions. Your cover crop performance will vary based on\n                  location, management, cultivars, and many other variables.\n                  Consult an{\" \"}\n                  <a href=\"/\" title=\"click to consult an nrcs extension expert\">\n                    NRCS Extension Expert\n                  </a>{\" \"}\n                  for detailed guidance\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-5 offset-lg-1\">\n          <div className=\"container-fluid\">\n            {state.progress === 2 ? <SoilConditions /> : \"\"}\n            {state.progress === 3 ? <WeatherConditions /> : \"\"}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LocationConfirmation;\n","/* TODO: RENDER CROPS BY: \n    1. Zone decision === include\n    2. ...\n\n*/\nimport React, { useContext, Fragment, useEffect, useState } from \"react\";\nimport { Context } from \"../../store/Store\";\nimport { LightButton, zoneIcon } from \"../../shared/constants\";\nimport {\n  Button,\n  Typography,\n  Modal,\n  Fade,\n  Backdrop,\n  makeStyles,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\n\nimport \"../../styles/cropTable.scss\";\nimport {\n  PhotoLibrary,\n  PictureAsPdf,\n  FormatListBulleted,\n  Print,\n  Info,\n  Close,\n  ExpandMore\n} from \"@material-ui/icons\";\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: \"0px\"\n    // padding: theme.spacing(2, 4, 3)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nconst CropTableComponent = () => {\n  const classes = useStyles();\n  const [state, dispatch] = useContext(Context);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalData, setModalData] = useState({});\n  const handleModalOpen = crop => {\n    setModalOpen(true);\n    // put data inside modal\n    setModalData(crop);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n  const url =\n    \"https://api.airtable.com/v0/appC47111lCOTaMYe/Cover%20Crops%20Data?maxRecords=300&timeZone=America_NewYork&filterByFormula=NOT(SWITCH({Cover Crop Name},'__Open Discussion Row','Ok hopefully he answers me soon.'))\";\n  useEffect(() => {\n    const headers = new Headers();\n    headers.append(\"Authorization\", \"Bearer ***REMOVED***\");\n    fetch(url, {\n      headers: headers\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        dispatch({\n          type: \"PULL_CROP_DATA\",\n          data: data.records\n        });\n        checkCropsAddedToCart();\n      });\n  }, [state.cropData]);\n\n  const checkCropsAddedToCart = () => {\n    if (state.selectedCrops.length !== 0) {\n      try {\n        state.selectedCrops.map((crop, index) => {\n          let btnId = crop.btnId;\n          let container = document.getElementById(btnId);\n          container.querySelector(\".MuiButton-label\").innerHTML = \"ADDED\";\n          container.classList.add(\"activeCartBtn\");\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n  const addCropToBasket = (cropId, cropName, btnId, cropData) => {\n    let container = document.getElementById(btnId);\n    let selectedCrops = {};\n    let toAdd = false;\n    var cropArray = [];\n    selectedCrops[\"id\"] = cropId;\n    selectedCrops[\"cropName\"] = cropName;\n    selectedCrops[\"btnId\"] = btnId;\n    selectedCrops[\"data\"] = cropData;\n    cropArray = selectedCrops;\n    // change the UI\n    if (container.classList.contains(\"activeCartBtn\")) {\n      // change text back to 'add to list' and remove element from state\n\n      if (document.getElementById(btnId).textContent === \"ADDED\") {\n        container.querySelector(\".MuiButton-label\").innerHTML = \"ADD TO LIST\";\n        container.classList.remove(\"activeCartBtn\");\n        toAdd = false;\n      } else toAdd = true;\n\n      // this.state.selectedCrops.splice(x, 1);\n      // get index of the element\n    } else {\n      // change text to 'added' and add element to state\n      console.log(document.getElementById(btnId).textContent);\n      if (container.textContent === \"ADD TO LIST\") {\n        container.querySelector(\".MuiButton-label\").innerHTML = \"ADDED\";\n        container.classList.add(\"activeCartBtn\");\n        toAdd = true;\n      } else toAdd = false;\n    }\n\n    // // check if crop id exists inside state, if yes then remove it\n\n    if (state.selectedCrops.length > 0) {\n      // DONE: Remove crop from basket\n      var removeIndex = state.selectedCrops\n        .map(function(item) {\n          return item.btnId;\n        })\n        .indexOf(`${btnId}`);\n      if (removeIndex === -1) {\n        // element not in array\n        dispatch({\n          type: \"SELECTED_CROPS_MODIFIER\",\n          data: {\n            selectedCrops: [...state.selectedCrops, selectedCrops],\n            snackOpen: true,\n            snackMessage: `${cropName} Added`\n          }\n        });\n      } else {\n        // alert(removeIndex);\n        let selectedCropsCopy = state.selectedCrops;\n\n        selectedCropsCopy.splice(removeIndex, 1);\n        // console.log(selectedCropsCopy);\n        dispatch({\n          type: \"SELECTED_CROPS_MODIFIER\",\n          data: {\n            selectedCrops: selectedCropsCopy,\n            snackOpen: true,\n            snackMessage: `${cropName} Removed`\n          }\n        });\n\n        // this.state.selectedCrops.splice(removeIndex, 1);\n      }\n    } else {\n      // DONE: add the selected crop to state and change the state, show snackbar\n\n      dispatch({\n        type: \"SELECTED_CROPS_MODIFIER\",\n        data: {\n          selectedCrops: [cropArray],\n          snackOpen: true,\n          snackMessage: `${cropName} Added`\n        }\n      });\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"table-responsive\">\n        <table className=\"table table-borderless table-sm\">\n          <thead className=\"tableHeadWrapper\">\n            <tr>\n              <th>\n                <Typography variant=\"body1\">COVER CROPS</Typography>\n              </th>\n              {state.selectedGoals.length !== 0\n                ? state.selectedGoals.map((goal, index) => (\n                    <th key={index}>\n                      <Typography variant=\"body1\">\n                        {goal.toUpperCase()}\n                      </Typography>\n                    </th>\n                  ))\n                : \"\"}\n              <th>\n                <Typography variant=\"body1\">GROWTH WINDOW</Typography>\n              </th>\n              <th>\n                <Typography variant=\"body1\">MY LIST</Typography>\n                <Typography variant=\"subtitle1\">\n                  {/* <br /> */}\n                  {`[${state.selectedCrops.length} CROPS]`}\n                </Typography>\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"tableBodyWrapper\">\n            {state.cropData.map((crop, index) => {\n              if (\n                !crop.fields[\"Cover Crop Name\"].trim() !==\n                \"Ok hopefully he answers me soon.\".trim()\n              ) {\n                if (crop.fields[\"Zone Decision\"] === \"Include\")\n                  return (\n                    <tr key={`croprow${index}`}>\n                      <td\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"row\"\n                        }}\n                      >\n                        {/* {this.getCropImageFromAPI(\n                          crop.fields[\"Cover Crop Name\"]\n                        )} */}\n                        <img\n                          src=\"//placehold.it/100x100\"\n                          alt=\"placeholder\"\n                          style={{\n                            flexBasis: \"20%\"\n                          }}\n                        />\n                        <div className=\"cropDetailsText\" style={{}}>\n                          <div className=\"part1_ut\">\n                            <span className=\"cropCategory text-uppercase\">\n                              {crop.fields[\"Cover Crop Group\"]}\n                            </span>\n                            <span className=\"cropName font-weight-lighter\">\n                              {crop.fields[\"Cover Crop Name\"]}\n                            </span>\n                            <span className=\"cropScientificName\">\n                              {crop.fields[\"Scientific Name\"]}\n                            </span>\n                          </div>\n                          <div className=\"part2_lt\">\n                            <span className=\"cropDuration text-uppercase font-weight-bold\">\n                              {crop.fields[\"Duration\"]}\n                            </span>\n                          </div>\n                        </div>\n                      </td>\n                      {state.selectedGoals.length !== 0\n                        ? state.selectedGoals.map((goal, index) => (\n                            <td key={`rating${index}`}>\n                              {getRating(crop.fields[goal])}\n                            </td>\n                          ))\n                        : \"\"}\n                      <td>GROWTH WINDOW</td>\n                      <td style={{}}>\n                        <div className=\"button1\">\n                          <LightButton\n                            id={`cartBtn${index}`}\n                            style={{\n                              borderRadius: \"0px\",\n                              width: \"130px\"\n                            }}\n                            onClick={() => {\n                              addCropToBasket(\n                                crop.id,\n                                crop.fields[\"Cover Crop Name\"],\n                                `cartBtn${index}`,\n                                crop.fields\n                              );\n                            }}\n                          >\n                            ADD TO LIST\n                          </LightButton>\n                        </div>\n                        <br />\n                        <div className=\"button2\">\n                          <Button\n                            size=\"small\"\n                            onClick={() => handleModalOpen(crop)}\n                          >\n                            View Crop Details\n                          </Button>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n              } else return \"\";\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"cropGoals\"></div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"ransition-modal-description\"\n        className={classes.modal}\n        open={modalOpen}\n        onClose={handleModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n        disableBackdropClick={true}\n      >\n        <Fade in={modalOpen}>\n          {modalData.fields ? (\n            <div className={`cropTableModal modalContainer ${classes.paper}`}>\n              <div className=\"container-fluid\">\n                <div className=\"row\">\n                  <div\n                    className=\"col-12\"\n                    style={{\n                      background: \"#2D7B7B\",\n                      color: \"white\",\n                      height: \"auto\",\n                      borderTopLeftRadius: \"5px\",\n                      borderTopRightRadius: \"5px\"\n                    }}\n                  >\n                    <div className=\"row\">\n                      <div className=\"col-2 offset-10 text-right\">\n                        {\" \"}\n                        <Button\n                          style={{ color: \"white\" }}\n                          onClick={handleModalClose}\n                        >\n                          <Close />\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <div className=\"row\">\n                      <div className=\"col mt-2\">\n                        <div>{modalData.fields[\"Cover Crop Group\"]}</div>\n                        <div className=\"font-weight-bold\">\n                          {modalData.fields[\"Cover Crop Name\"]}\n                        </div>\n                        <div>{modalData.fields[\"Scientific Name\"]}</div>\n                      </div>\n                      <div\n                        className=\"col\"\n                        style={{\n                          textAlign: \"right\",\n                          paddingRight: \"0px\",\n                          paddingLeft: \"0px\"\n                        }}\n                      >\n                        <img src=\"//placehold.it/100x100\" />\n                        <img src=\"//placehold.it/100x100\" />\n                        <img src=\"//placehold.it/100x100\" />\n                        <img src=\"//placehold.it/100x100\" />\n                        <img src=\"//placehold.it/100x100\" />\n                        <img src=\"//placehold.it/100x100\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div\n                    className=\"col-12\"\n                    style={{ background: \"#2D7B7B\", color: \"white\" }}\n                  >\n                    <div className=\"row\">\n                      <div className=\"col-4\">\n                        <Button style={{ color: \"white\" }}>\n                          {zoneIcon(20, 20)}\n                          <span className=\"pl-2\">\n                            Plant Hardiness Zone {state.zone} Dataset\n                          </span>\n                        </Button>\n                      </div>\n                      <div className=\"col-2\">\n                        <Button style={{ color: \"white\" }}>\n                          <PhotoLibrary />{\" \"}\n                          <span className=\"pl-2\">View Photos</span>\n                        </Button>\n                      </div>\n                      <div className=\"col-4\">\n                        <Button style={{ color: \"white\" }}>Download :</Button>\n                        <Button style={{ color: \"white\" }}>\n                          <PictureAsPdf />\n                          <span className=\"pl-2\">PDF</span>\n                        </Button>\n                        <Button style={{ color: \"white\" }}>\n                          <FormatListBulleted />\n                          <span className=\"pl-2\">SPREADSHEET</span>\n                        </Button>\n                      </div>\n                      <div className=\"col-2 text-right\">\n                        <Button style={{ color: \"white\" }}>\n                          <Print /> <span className=\"pl-2\">PRINT</span>\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row mt-4\">\n                  <div className=\"col-8\">\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        <Typography variant=\"h6\">Cover Crop Uses</Typography>\n                      </div>\n                      <div className=\"col-6 text-right\">\n                        <small>\n                          (Source: NRCS Plant Guide{\" \"}\n                          <Info style={{ fontSize: \"10pt\" }} /> )\n                        </small>\n                      </div>\n\n                      <div className=\"col-12 mt-2\">\n                        <p>\n                          Lorem ipsum dolor sit amet, consectetur adipiscing\n                          elit. Duis eu interdum elit, nec convallis ex. Sed in\n                          posuere ipsum. Vivamus eget scelerisque urna, at\n                          maximus mauris. Suspendisse potenti. Nullam eget\n                          vulputate nulla. Morbi eget suscipit libero. Phasellus\n                          eleifend velit vitae leo efficitur luctus. Donec\n                          euismod odio et urna elementum elementum. Curabitur\n                          quam nisi, blandit eu libero at, efficitur dignissim\n                          dui. Aenean viverra consectetur odio ac sodales. Nunc\n                          elit sem, tincidunt et ligula ac, volutpat venenatis\n                          ex. Sed feugiat suscipit lorem vitae efficitur. Morbi\n                          malesuada elit a urna ornare faucibus. Curabitur id\n                          varius enim. Praesent dui erat, faucibus quis\n                          consequat quis, condimentum eget diam. Phasellus\n                          efficitur sapien ac ex suscipit pretium. Quisque ut\n                          nisi fringilla, scelerisque purus sit amet, fermentum\n                          justo. Maecenas dignissim ornare lectus, eget congue\n                          elit vulputate vel. Quisque pellentesque quam eget\n                          ante commodo, a porta dolor interdum. Donec ut nisi\n                          ligula. Aenean eget cursus lectus, vel mattis enim.\n                          Nunc rutrum pulvinar imperdiet. In finibus nunc eu\n                          mattis semper. Nunc pharetra dui velit, eget\n                          pellentesque nulla molestie in. Ut gravida ac leo sit\n                          amet blandit. Duis sapien ipsum, volutpat quis nisl\n                          quis, ornare laoreet diam. Nunc sit amet eros vel ante\n                          rutrum ullamcorper a scelerisque magna. Etiam semper\n                          orci eget lorem dictum, in varius est laoreet.\n                          Curabitur enim velit, pharetra ut ullamcorper in,\n                          volutpat nec lacus. Cras sed nunc iaculis, dignissim\n                          enim id, elementum lectus. Fusce auctor turpis\n                        </p>{\" \"}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-4\">\n                    <ExpansionPanel\n                      className=\"modalSideBar\"\n                      defaultExpanded={false}\n                    >\n                      <ExpansionPanelSummary\n                        expandIcon={<ExpandMore />}\n                        aria-controls=\"modal-side-panel-content\"\n                      >\n                        <Typography variant=\"body1\">Agronomic</Typography>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails>\n                        <div></div>\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel\n                      className=\"modalSideBar\"\n                      defaultExpanded={false}\n                    >\n                      <ExpansionPanelSummary\n                        expandIcon={<ExpandMore />}\n                        aria-controls=\"modal-side-panel-content\"\n                      >\n                        <Typography variant=\"body1\">\n                          Environmental Tolerance\n                        </Typography>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails>\n                        <div></div>\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel\n                      className=\"modalSideBar\"\n                      defaultExpanded={false}\n                    >\n                      <ExpansionPanelSummary\n                        expandIcon={<ExpandMore />}\n                        aria-controls=\"modal-side-panel-content\"\n                      >\n                        <Typography variant=\"body1\">Soil Conditions</Typography>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails>\n                        <div></div>\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel\n                      className=\"modalSideBar\"\n                      defaultExpanded={false}\n                    >\n                      <ExpansionPanelSummary\n                        expandIcon={<ExpandMore />}\n                        aria-controls=\"modal-side-panel-content\"\n                      >\n                        <Typography variant=\"body1\">Growth</Typography>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails>\n                        <div></div>\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel\n                      className=\"modalSideBar\"\n                      defaultExpanded={false}\n                    >\n                      <ExpansionPanelSummary\n                        expandIcon={<ExpandMore />}\n                        aria-controls=\"modal-side-panel-content\"\n                      >\n                        <Typography variant=\"body1\">\n                          Planting &amp; Termination\n                        </Typography>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails>\n                        <div></div>\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel\n                      className=\"modalSideBar\"\n                      defaultExpanded={false}\n                    >\n                      <ExpansionPanelSummary\n                        expandIcon={<ExpandMore />}\n                        aria-controls=\"modal-side-panel-content\"\n                      >\n                        <Typography variant=\"body1\">\n                          Grazers &amp; Pollinators\n                        </Typography>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails>\n                        <div></div>\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel\n                      className=\"modalSideBar\"\n                      defaultExpanded={false}\n                    >\n                      <ExpansionPanelSummary\n                        expandIcon={<ExpandMore />}\n                        aria-controls=\"modal-side-panel-content\"\n                      >\n                        <Typography variant=\"body1\">\n                          Pests &amp; Disease\n                        </Typography>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails>\n                        <div></div>\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </Fade>\n      </Modal>\n    </Fragment>\n  );\n};\n\nconst getRating = ratng => {\n  let rating = parseInt(ratng);\n  if (rating === 0) {\n    return (\n      <div className=\"rating-0\">\n        <span></span>\n      </div>\n    );\n  } else if (rating === 1) {\n    return (\n      <div className=\"rating-1\">\n        <span></span>\n      </div>\n    );\n  } else if (rating === 2) {\n    return (\n      <div className=\"rating-2\">\n        <span></span>\n      </div>\n    );\n  } else if (rating === 3) {\n    return (\n      <div className=\"rating-3\">\n        <span></span>\n      </div>\n    );\n  } else if (rating === 4) {\n    return (\n      <div className=\"rating-4\">\n        <span></span>\n      </div>\n    );\n  } else if (rating === 5) {\n    return (\n      <div className=\"rating\">\n        <span></span>\n      </div>\n    );\n  }\n};\n\nexport default CropTableComponent;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Context } from \"../../store/Store\";\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 345,\n    width: 230\n  },\n  media: {\n    height: 140\n  }\n});\n\nconst MyCoverCropCardsComponent = props => {\n  const [state, dispatch] = useContext(Context);\n  const data = props.data;\n  const btnId = props.btnId;\n  const classes = useStyles();\n\n  const removeCrop = () => {\n    var removeIndex = state.selectedCrops\n      .map(function(item) {\n        return item.btnId;\n      })\n      .indexOf(`${btnId}`);\n\n    if (removeIndex === -1) {\n      // element not in array\n      // not possible ?\n    } else {\n      // alert(removeIndex);\n      let selectedCropsCopy = state.selectedCrops;\n\n      selectedCropsCopy.splice(removeIndex, 1);\n      // console.log(selectedCropsCopy);\n      dispatch({\n        type: \"SELECTED_CROPS_MODIFIER\",\n        data: {\n          selectedCrops: selectedCropsCopy,\n          snackOpen: true,\n          snackMessage: `Removed`\n        }\n      });\n\n      // this.state.selectedCrops.splice(removeIndex, 1);\n    }\n  };\n  return (\n    //   {state.selectedCrops.length === 1 ? \"<div>\" : \"<div className='pl-5'>\"}\n    <div className={props.itemNo > 0 ? \"pl-5\" : \"\"}>\n      <Card className={classes.card}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image=\"https://placehold.it/230x140\"\n            title={data[\"Cover Crop Name\"]}\n          />\n          <CardContent>\n            <div\n              className=\"font-weight-bold text-muted text-uppercase\"\n              style={{ fontSize: \"10pt\" }}\n            >\n              {data[\"Family Common Name\"]}\n            </div>\n            <div className=\"font-weight-bold \" style={{ fontSize: \"16pt\" }}>\n              {data[\"Cover Crop Name\"]}\n            </div>\n            <small className=\"font-italic text-muted\">\n              {data[\"Scientific Name\"]}\n            </small>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            View Crop Details\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={removeCrop}>\n            Remove\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n};\n\nexport default MyCoverCropCardsComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Context } from \"../../store/Store\";\nimport MyCoverCropCardsComponent from \"./MyCoverCropCardsComponent\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { PictureAsPdf, ListAlt, Add } from \"@material-ui/icons\";\n\nconst MyCoverCropList = () => {\n  const [state, dispatch] = useContext(Context);\n\n  const redirectToSpeciesSelector = () => {\n    dispatch({\n      type: \"ACTIVATE_SPECIES_SELECTOR_TILE\",\n      data: {\n        speciesSelectorActivationFlag: true,\n        myCoverCropActivationFlag: false\n      }\n    });\n  };\n  return (\n    <div className=\"container-fluid\">\n      {state.selectedCrops.length === 0 ? (\n        <Typography variant=\"body1\">\n          Your list is empty. Use the Species Selector to add plants.\n        </Typography>\n      ) : (\n        <Fragment>\n          <div className=\"row\">\n            <div\n              className=\"col-12 myCoverCropsBlueBar\"\n              style={{\n                backgroundColor: \"#35999b\",\n                height: \"40px\",\n                borderTopLeftRadius: \"5px\",\n                borderTopRightRadius: \"5px\"\n              }}\n            >\n              <div className=\"row\">\n                <div className=\"col-8\">\n                  <Button style={{ color: \"white\" }}>Download:</Button>\n                  <Button style={{ color: \"white\" }}>\n                    <PictureAsPdf /> <span className=\"pl-2\">PDF</span>\n                  </Button>\n                  <Button style={{ color: \"white\" }}>\n                    <ListAlt /> <span className=\"pl-2\">SPREADSHEET</span>\n                  </Button>\n                  <Button\n                    style={{ color: \"white\" }}\n                    onClick={redirectToSpeciesSelector}\n                  >\n                    <Add /> <span className=\"pl-2\">ADD A CROP</span>\n                  </Button>\n                </div>\n                <div className=\"col-6\"></div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-2\">\n            {state.selectedCrops.map((crop, index) => (\n              <MyCoverCropCardsComponent\n                key={index}\n                data={crop.data}\n                btnId={crop.btnId}\n                itemNo={index}\n              />\n            ))}\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default MyCoverCropList;\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport moment from \"moment\";\nimport { Tooltip, withStyles, Typography } from \"@material-ui/core\";\n\nconst HTMLTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\"\n  }\n}))(Tooltip);\n\nconst GrowthWindowComponent = props => {\n  //   const [isCashCropMonth, setIsCashCropMonth] = useState(false);\n  let isCashCropMonth = false;\n\n  let cropData = props.data;\n  let month = props.month;\n  let id = props.id;\n  let cropLegendObj = {\n    Early: \"\",\n    Mid: \"\",\n    class: \"\",\n    isCashCropMonth: false\n  };\n\n  var fullMonth = moment()\n    .localeData()\n    .months();\n\n  const setMonthVals = id => {\n    let cropDataLegendLabel_Early = cropData[`${fullMonth[id]}, Early`];\n    let cropDataLegendLabel_Mid = cropData[`${fullMonth[id]}, Mid`];\n\n    if (id + 1 >= 4 || id + 1 <= 8) {\n      cropLegendObj.isCashCropMonth = true;\n    } else {\n      cropLegendObj.isCashCropMonth = false;\n    }\n\n    if (cropDataLegendLabel_Early || cropDataLegendLabel_Mid) {\n      if (cropDataLegendLabel_Early) {\n        cropLegendObj.Early = cropDataLegendLabel_Early;\n      } else {\n        cropLegendObj.Early = \"\";\n      }\n      if (cropDataLegendLabel_Mid) {\n        cropLegendObj.Mid = cropDataLegendLabel_Mid;\n      } else {\n        cropLegendObj.Mid = \"\";\n      }\n    } else {\n      cropLegendObj.Early = \"\";\n      cropLegendObj.Mid = \"\";\n    }\n\n    // console.log(\"Month\", id);\n  };\n\n  const sanitizeLabels = () => {\n    // IF: check if cropLegendObj values are same ? or different.\n    // Reliable establishment/growth : className = \"reliableEstablishment\"\n    // Temperature/moisture risk to establishment/growth: \"t_mRiskToEstablishment\"\n    // Frost Seeding: \"frostSeeding\"\n\n    if (cropLegendObj.Early === cropLegendObj.Mid) {\n      // good to go\n    } else {\n    }\n  };\n\n  switch (month) {\n    case 0: {\n      setMonthVals(0);\n\n      break;\n    }\n    case 1: {\n      setMonthVals(1);\n      break;\n    }\n    case 2: {\n      setMonthVals(2);\n      break;\n    }\n    case 3: {\n      setMonthVals(3);\n      break;\n    }\n    case 4: {\n      setMonthVals(4);\n      break;\n    }\n    case 5: {\n      setMonthVals(5);\n      break;\n    }\n    case 6: {\n      setMonthVals(6);\n      break;\n    }\n    case 7: {\n      setMonthVals(7);\n      break;\n    }\n    case 8: {\n      setMonthVals(8);\n    }\n    case 9: {\n      setMonthVals(9);\n      break;\n    }\n    case 10: {\n      setMonthVals(10);\n      break;\n    }\n    case 11: {\n      setMonthVals(11);\n      break;\n    }\n    default: {\n      setMonthVals(0);\n      break;\n    }\n  }\n\n  useEffect(() => {\n    console.log(`isCashCropMonth ? `, cropLegendObj.isCashCropMonth);\n  }, []);\n\n  return (\n    <td className={`growthWindowCell ${id}`}>\n      {/* {month} */}\n      <div\n        className={\n          month >= 4\n            ? month <= 8\n              ? `legendContainer cashCropLegendContainer legendColor d-flex flex-direction-row `\n              : \"legendContainer legendColor d-flex flex-direction-row \"\n            : \"legendContainer legendColor d-flex flex-direction-row \"\n        }\n      >\n        <HTMLTooltip\n          arrow\n          title={\n            <Fragment>\n              <Typography color=\"primary\">\n                {fullMonth[month].toUpperCase()}, EARLY\n              </Typography>\n              <em>\n                <Typography variant=\"body1\">{cropLegendObj.Early}</Typography>\n              </em>\n            </Fragment>\n          }\n        >\n          <div\n            className={`earlyPart ${cropLegendObj.Early}`}\n            style={{ height: \"30px\", width: \"50%\" }}\n          ></div>\n        </HTMLTooltip>\n        <HTMLTooltip\n          arrow\n          title={\n            <Fragment>\n              <Typography color=\"primary\">\n                {fullMonth[month].toUpperCase()}, MID\n              </Typography>\n              <em>\n                <Typography variant=\"body1\">{cropLegendObj.Mid}</Typography>\n              </em>\n            </Fragment>\n          }\n        >\n          <div\n            className={`midPart ${cropLegendObj.Mid}`}\n            style={{ height: \"30px\", width: \"50%\" }}\n          ></div>\n        </HTMLTooltip>\n      </div>\n    </td>\n  );\n};\n\nexport default GrowthWindowComponent;\n","import React, { useContext, Fragment, useEffect, useState } from \"react\";\nimport { Context } from \"../../store/Store\";\nimport moment from \"moment\";\nimport {\n  Typography,\n  Button,\n  makeStyles,\n  Modal,\n  Backdrop,\n  Fade\n} from \"@material-ui/core\";\nimport { LightButton } from \"../../shared/constants\";\nimport \"../../styles/cropCalendarViewComponent.scss\";\nimport GrowthWindowComponent from \"./GrowthWindow\";\nimport { AddCircle, FiberManualRecord, CloseRounded } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: \"1em\",\n    width: \"30%\"\n    // padding: theme.spacing(2, 4, 3)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nconst CropCalendarViewComponent = () => {\n  const classes = useStyles();\n  const [state, dispatch] = useContext(Context);\n  const [goalRatings, setGoalRatings] = useState([]);\n  const [legendModal, setLegendModal] = useState(false);\n\n  // DONE: Check year logic ? currently Juliet wants to return current year if month is before november\n  // ref. useeffect();\n  let currentYear = new Date().getFullYear();\n  const addCropToBasket = (cropId, cropName, btnId, cropData) => {\n    let container = document.getElementById(btnId);\n    let selectedCrops = {};\n    let toAdd = false;\n    var cropArray = [];\n    selectedCrops[\"id\"] = cropId;\n    selectedCrops[\"cropName\"] = cropName;\n    selectedCrops[\"btnId\"] = btnId;\n    selectedCrops[\"data\"] = cropData;\n    cropArray = selectedCrops;\n    // change the UI\n    if (container.classList.contains(\"activeCartBtn\")) {\n      // change text back to 'add to list' and remove element from state\n\n      if (document.getElementById(btnId).textContent === \"ADDED\") {\n        container.querySelector(\".MuiButton-label\").innerHTML = \"ADD TO LIST\";\n        container.classList.remove(\"activeCartBtn\");\n        toAdd = false;\n      } else toAdd = true;\n\n      // this.state.selectedCrops.splice(x, 1);\n      // get index of the element\n    } else {\n      // change text to 'added' and add element to state\n      console.log(document.getElementById(btnId).textContent);\n      if (container.textContent === \"ADD TO LIST\") {\n        container.querySelector(\".MuiButton-label\").innerHTML = \"ADDED\";\n        container.classList.add(\"activeCartBtn\");\n        toAdd = true;\n      } else toAdd = false;\n    }\n\n    // // check if crop id exists inside state, if yes then remove it\n\n    if (state.selectedCrops.length > 0) {\n      // DONE: Remove crop from basket\n      var removeIndex = state.selectedCrops\n        .map(function(item) {\n          return item.btnId;\n        })\n        .indexOf(`${btnId}`);\n      if (removeIndex === -1) {\n        // element not in array\n        dispatch({\n          type: \"SELECTED_CROPS_MODIFIER\",\n          data: {\n            selectedCrops: [...state.selectedCrops, selectedCrops],\n            snackOpen: true,\n            snackMessage: `${cropName} Added`\n          }\n        });\n      } else {\n        // alert(removeIndex);\n        let selectedCropsCopy = state.selectedCrops;\n\n        selectedCropsCopy.splice(removeIndex, 1);\n        // console.log(selectedCropsCopy);\n        dispatch({\n          type: \"SELECTED_CROPS_MODIFIER\",\n          data: {\n            selectedCrops: selectedCropsCopy,\n            snackOpen: true,\n            snackMessage: `${cropName} Removed`\n          }\n        });\n\n        // this.state.selectedCrops.splice(removeIndex, 1);\n      }\n    } else {\n      // DONE: add the selected crop to state and change the state, show snackbar\n\n      dispatch({\n        type: \"SELECTED_CROPS_MODIFIER\",\n        data: {\n          selectedCrops: [cropArray],\n          snackOpen: true,\n          snackMessage: `${cropName} Added`\n        }\n      });\n    }\n  };\n\n  var allMonths = moment()\n    .localeData()\n    .monthsShort();\n  const cropDataURL =\n    \"https://api.airtable.com/v0/appC47111lCOTaMYe/Cover%20Crops%20Data?maxRecords=300&timeZone=America_NewYork&filterByFormula=NOT(SWITCH({Cover Crop Name},'__Open Discussion Row','Ok hopefully he answers me soon.'))\";\n\n  // const cropDataURL =\n  // \"https://api.airtable.com/v0/appC47111lCOTaMYe/Cover%20Crops%20Data?maxRecords=300&timeZone=America_NewYork&filterByFormula=NOT(SWITCH({Zone Decision},'Exclude',''))\";\n\n  const allGoalsURL =\n    \"https://api.airtable.com/v0/appC47111lCOTaMYe/Cover%20Crop%20Goals?maxRecords=300\";\n  const headers = new Headers();\n  headers.append(\"Authorization\", \"Bearer ***REMOVED***\");\n\n  const handleLegendModal = () => {\n    setLegendModal(!legendModal);\n  };\n  useEffect(() => {\n    let initialized = fetchRecordsIfUnavailable();\n    initialized.then(() => {\n      let currentMonth = moment().format(\"MMM\");\n      // console.log(currentMonth);\n      if (currentMonth === \"Nov\" || currentMonth === \"Dec\") {\n        currentYear = currentYear + 1;\n      }\n      console.log(\"goal values set\");\n\n      // putGoalValues();\n    });\n  }, []);\n\n  const putGoalValues = () => {\n    console.log(state.allGoals.length);\n    state.allGoals.map((goal, index) => {\n      let goalName = goal.fields[\"Cover Crop Goal\"];\n      state.cropData.map((crop, index2) => {\n        // let cropId =\n\n        console.log(\n          goalName + \" for \" + crop.fields[\"Cover Crop Name\"],\n          crop.fields[goalName]\n        );\n      });\n    });\n  };\n  const fetchRecordsIfUnavailable = () => {\n    // get crop data if unavailable\n    let _promise = new Promise(async function(resolve, reject) {\n      if (state.cropData.length === 0) {\n        // get crop data\n        let records = await fetch(cropDataURL, { headers: headers });\n        let json = records.json();\n\n        json\n          .then(val => {\n            // console.log(val);\n            dispatch({\n              type: \"PULL_CROP_DATA\",\n              data: val.records\n            });\n          })\n          .then(async () => {\n            if (state.allGoals.length === 0) {\n              // get all goals\n              let records = await fetch(allGoalsURL, { headers: headers });\n              // console.log(records.json());\n              let json = records.json();\n              json\n                .then(val => {\n                  dispatch({\n                    type: \"ADD_GOALS\",\n                    data: val.records\n                  });\n                })\n                .then(() => {\n                  resolve(\"worked\");\n                });\n            } else resolve(\"worked\");\n          });\n      } else resolve(\"worked\");\n    });\n    // let isResolved = false;\n\n    return _promise;\n  };\n\n  return (\n    <Fragment>\n      <div className=\"table-responsive\">\n        <table className=\"table calendarViewTable table-sm table-borderless\">\n          <thead className=\"tableHeadWrapper\">\n            <tr>\n              <td\n                colSpan=\"2\"\n                style={{ width: \"30%\", backgroundColor: \"white\" }}\n              ></td>\n              <td\n                colSpan=\"12\"\n                style={{\n                  width: \"60%\",\n                  borderRight: \"0px\",\n                  borderBottom: \"5px solid white\",\n                  borderTopLeftRadius: \"10px\",\n                  borderTopRightRadius: \"10px\"\n                }}\n              >\n                <Typography\n                  variant=\"body1\"\n                  style={{\n                    width: \"50%\",\n                    display: \"inline-block\",\n                    textAlign: \"right\"\n                  }}\n                >\n                  {currentYear} COVER CROP GROWTH WINDOW\n                </Typography>\n                <Typography\n                  variant=\"body1\"\n                  style={{ width: \"50%\", display: \"inline-block\" }}\n                >\n                  <Button startIcon={<AddCircle />} onClick={handleLegendModal}>\n                    {\" \"}\n                    <Typography variant=\"body1\">Legend</Typography>\n                  </Button>\n                </Typography>\n              </td>\n              <td style={{ width: \"10%\", backgroundColor: \"white\" }}></td>\n            </tr>\n            <tr>\n              <td style={{ width: \"20%\" }}>\n                <Typography variant=\"body1\">COVER CROPS</Typography>\n              </td>\n              {/* {state.selectedGoals.length !== 0\n              ? state.selectedGoals.map((goal, index) => (\n                  <th key={index}>\n                    <Typography variant=\"body1\">\n                      {goal.toUpperCase()}\n                    </Typography>\n                  </th>\n                ))\n              : \"\"} */}\n              <td style={{ width: \"10%\" }}>\n                <Typography variant=\"body1\">AVERAGE GOAL RATING</Typography>\n              </td>\n\n              {allMonths.map((month, index) => (\n                <td key={`monthskey${index}`} style={{ width: \"5%\" }}>\n                  <Typography variant=\"body1\">{month}</Typography>\n                </td>\n              ))}\n\n              <td style={{ width: \"10%\" }}>\n                <Typography variant=\"body1\">MY LIST</Typography>\n                <Typography variant=\"subtitle1\">\n                  {/* <br /> */}\n                  {`[${state.selectedCrops.length} CROPS]`}\n                </Typography>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {state.cropData\n              ? state.cropData.map((crop, index) => {\n                  if (crop.fields[\"Zone Decision\"] === \"Include\")\n                    return (\n                      <tr key={`cropRow${index}`}>\n                        <td className=\"calendarTableCell\">\n                          <div className=\"tdContainer d-flex justify-content-between flex-wrap\">\n                            <img src=\"//placehold.it/50x50\" alt=\"Placeholder\" />\n                            <Button style={{ borderRadius: \"0px\" }}>\n                              {crop.fields[\"Cover Crop Name\"]}\n                            </Button>\n                          </div>\n                        </td>\n                        <td>{/*average goal rating */}</td>\n\n                        {allMonths.map((month, index) => (\n                          <GrowthWindowComponent\n                            data={crop.fields}\n                            key={index}\n                            id={`growthCell${index}`}\n                            month={index}\n                          />\n                        ))}\n\n                        <td>\n                          {\" \"}\n                          <LightButton\n                            id={`cartBtn${index}`}\n                            style={{\n                              borderRadius: \"0px\",\n                              width: \"130px\"\n                            }}\n                            onClick={() => {\n                              addCropToBasket(\n                                crop.id,\n                                crop.fields[\"Cover Crop Name\"],\n                                `cartBtn${index}`,\n                                crop.fields\n                              );\n                            }}\n                          >\n                            ADD TO LIST\n                          </LightButton>\n                        </td>\n                      </tr>\n                    );\n                })\n              : \"\"}\n          </tbody>\n        </table>\n      </div>\n      <Modal\n        open={legendModal}\n        onClose={handleLegendModal}\n        BackdropComponent={Backdrop}\n        disableBackdropClick={false}\n        className={classes.modal}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={legendModal}>\n          <div className={`modalLegendPaper ${classes.paper}`}>\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <Typography variant=\"h4\">LEGEND</Typography>\n                </div>\n                <div className=\"col-6 text-right\">\n                  <Button onClick={handleLegendModal}>\n                    <CloseRounded />\n                  </Button>\n                </div>\n              </div>\n              <div className=\"row mt-5\">\n                <div className=\"col-12 legendModalRow\">\n                  <Typography variant=\"body1\">\n                    <FiberManualRecord className=\"reliable\" />\n                    RELIABLE ESTABLISHMENT\n                  </Typography>\n                </div>\n                <div className=\"col-12 legendModalRow\">\n                  <Typography variant=\"body1\">\n                    <FiberManualRecord className=\"temperatureRisk\" />\n                    TEMPERATURE RISK TO ESTABLISHMENT\n                  </Typography>\n                </div>\n                <div className=\"col-12 legendModalRow\">\n                  <Typography variant=\"body1\">\n                    <FiberManualRecord className=\"frostPossible\" />\n                    FROST SEEDING POSSIBLE\n                  </Typography>\n                </div>\n                <div className=\"col-12 legendModalRow\">\n                  <Typography variant=\"body1\">\n                    <FiberManualRecord className=\"cashCrop\" />\n                    CASH CROP GROWTH WINDOW\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default CropCalendarViewComponent;\n","import React, { useContext, useState, Fragment } from \"react\";\nimport { Context } from \"../../store/Store\";\nimport {\n  Typography,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  FormGroup,\n  FormControl,\n  FormControlLabel,\n  Checkbox,\n  // Button,\n  IconButton\n} from \"@material-ui/core\";\nimport { List, arrayMove } from \"react-movable\";\n\nimport { ExpandMore, CalendarToday } from \"@material-ui/icons\";\n\nimport \"../../styles/cropSelector.scss\";\nimport CropTableComponent from \"./CropTable\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport MyCoverCropList from \"../MyCoverCropList/MyCoverCropList\";\nimport CropCalendarViewComponent from \"./CropCalendarView\";\n\nconst CropSelector = () => {\n  const [state, dispatch] = useContext(Context);\n  // let [isExpansionExpanded, setIsExpansionExpanded] = useState(true);\n  let [showGrowthWindow, setShowGrowthWindow] = useState(true);\n\n  // let [isListView, setIsListView] = useState(true);\n\n  // TODO: set list view as default. Calendar component is activated currently\n  let [isListView, setIsListView] = useState(false);\n\n  // useEffect(() => {\n  //   if (state.speciesSelectorActivationFlag) {\n  //     setIsExpansionExpanded(false);\n  //   } else {\n  //     setIsExpansionExpanded(true);\n  //   }\n  //   // return isExpansionExpanded;\n  // }, [isExpansionExpanded]);\n  const updateSelectedGoals = (newGoalArr, oldIndex, newIndex) => {\n    let newGoals = arrayMove(newGoalArr, oldIndex, newIndex);\n\n    dispatch({\n      type: \"DRAG_GOALS\",\n      data: {\n        selectedGoals: newGoals,\n        snackOpen: true,\n        snackMessage: \"Goal Priority Changed\"\n      }\n    });\n  };\n\n  const expandCoverCropFilter = id => {\n    let listItemId = `cropFilterList${id}`;\n    let x = document.querySelectorAll(`#${listItemId} div`);\n    if (document.getElementById(listItemId).classList.contains(\"active\")) {\n      document.getElementById(listItemId).classList.remove(\"active\");\n      // hide dropdown\n      // document.querySelectorAll(`#${listItemId} div`).classList.remove(\"show\");\n      for (var i = 0; i < x.length; i++) {\n        x[i].classList.remove(\"show\");\n      }\n    } else {\n      document.getElementById(listItemId).classList.add(\"active\");\n      // show dropdown\n\n      for (var j = 0; j < x.length; j++) {\n        if (!x[j].classList.contains(\"show\")) {\n          x[j].classList.add(\"show\");\n        }\n      }\n    }\n  };\n\n  const toggleListView = () => {\n    setIsListView(!isListView);\n  };\n  // const renderRelevantComponent = () => {\n  //   if (isListView) {\n\n  //   }\n  // };\n  return (\n    <div className=\"container-fluid mt-2\">\n      <div className=\"row toggleComparisonRow\">\n        <div className=\"col-lg-12\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-sm-12 pl-5\">\n              <div className=\"iconsWrapper\">\n                {state.myCoverCropActivationFlag ? (\n                  <Fragment>\n                    <div className=\"iconToggle\">\n                      <IconButton\n                        className={isListView ? `iconActive` : \"\"}\n                        onClick={toggleListView}\n                      >\n                        <ListIcon style={{ fontSize: \"larger\" }} />\n                      </IconButton>\n                    </div>\n                    <div className=\"iconToggle\">\n                      <IconButton\n                        className={isListView ? `` : `iconActive`}\n                        onClick={toggleListView}\n                      >\n                        <CalendarToday style={{ fontSize: \"larger\" }} />\n                      </IconButton>\n                    </div>\n                    <small>LIST VIEW</small>\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    <div className=\"iconToggle\">\n                      <IconButton\n                        className={isListView ? `iconActive` : \"\"}\n                        onClick={toggleListView}\n                      >\n                        <ListIcon style={{ fontSize: \"larger\" }} />\n                      </IconButton>\n                    </div>\n                    <div className=\"iconToggle\">\n                      <IconButton\n                        className={isListView ? `` : `iconActive`}\n                        onClick={toggleListView}\n                      >\n                        <CalendarToday style={{ fontSize: \"larger\" }} />\n                      </IconButton>\n                    </div>\n                    <small className=\"mt-2\">\n                      {isListView ? \"LIST VIEW\" : \"CALENDAR VIEW\"}\n                    </small>\n                  </Fragment>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row cropSelectorRow mt-2\">\n        <div className=\"col-lg-2\">\n          <div className=\"sidebarTitle\">\n            <Typography variant=\"body1\">FILTER</Typography>\n          </div>\n          <div className=\"sidebarContents\">\n            <ExpansionPanel\n              className=\"sideBar\"\n              expanded={state.myCoverCropActivationFlag ? false : true}\n              // onTouchEnd={() => {\n              //   setIsExpansionExpanded(!isExpansionExpanded);\n              // }}\n            >\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMore />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography\n                  className=\"sidePanelCollapsibleHeading\"\n                  variant=\"subtitle1\"\n                >\n                  COVER CROP GOALS\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <div>\n                  <Typography variant=\"subtitle1\" className=\"mb-2\">\n                    {state.selectedGoals.length === 0\n                      ? \"\"\n                      : \"Goal Priority Order\"}\n                  </Typography>\n                  <List\n                    values={state.selectedGoals}\n                    onChange={({ oldIndex, newIndex }) =>\n                      updateSelectedGoals(\n                        state.selectedGoals,\n                        oldIndex,\n                        newIndex\n                      )\n                    }\n                    renderList={({ children, props }) => (\n                      <ol className=\"goalsListFilter\" {...props}>\n                        {children}\n                      </ol>\n                    )}\n                    renderItem={({ value, props }) => (\n                      <li {...props}>{value.toUpperCase()}</li>\n                    )}\n                  />\n                  <Typography variant=\"subtitle1\" className=\"mt-2\">\n                    {state.selectedGoals.length === 0\n                      ? \"No goals selected\"\n                      : \"Drag to reorder, click to edit\"}\n                  </Typography>\n\n                  {/* ))} */}\n                  {/* </ul> */}\n                </div>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel className=\"sideBar\">\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMore />}\n                aria-controls=\"panel1b-content\"\n                id=\"panel1b-header\"\n              >\n                <Typography className=\"sidePanelCollapsibleHeading\">\n                  CASH CROP\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flexWrap: \"wrap\"\n                }}\n              >\n                <p>Details for Cash Crops</p>\n                <div>\n                  <FormControl>\n                    <FormGroup>\n                      <FormControlLabel\n                        value=\"yes\"\n                        control={\n                          <Checkbox\n                            checked={showGrowthWindow}\n                            color=\"primary\"\n                            onClick={() =>\n                              setShowGrowthWindow(!showGrowthWindow)\n                            }\n                          />\n                        }\n                        label=\"Show growth window\"\n                        labelPlacement=\"end\"\n                      />\n                    </FormGroup>\n                  </FormControl>\n                </div>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel\n              className=\"sideBar\"\n              expanded={state.myCoverCropActivationFlag ? true : false}\n            >\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMore />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n              >\n                <Typography className=\"sidePanelCollapsibleHeading\">\n                  COVER CROP FILTERS\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className=\"coverCropFiltersWrapper\">\n                <ul>\n                  <li\n                    onClick={() => expandCoverCropFilter(0)}\n                    id=\"cropFilterList0\"\n                  >\n                    Agronomic\n                  </li>\n                  <li\n                    id=\"cropFilterList1\"\n                    onClick={() => expandCoverCropFilter(1)}\n                    className=\"active\"\n                  >\n                    Environmental Tolerance\n                    <div className=\"show\">\n                      <FormControlLabel\n                        control={<Checkbox value=\"checkedC\" />}\n                        label={<small>HEAT</small>}\n                      />\n                    </div>\n                    <div className=\"show\">\n                      <FormControlLabel\n                        control={<Checkbox value=\"checkedC\" />}\n                        label={<small>Drought</small>}\n                      />\n                    </div>\n                    <div className=\"show\">\n                      <FormControlLabel\n                        control={<Checkbox value=\"checkedC\" />}\n                        label={<small>Shade</small>}\n                      />\n                    </div>\n                    <div className=\"show\">\n                      <FormControlLabel\n                        control={<Checkbox value=\"checkedC\" />}\n                        label={<small>Flood</small>}\n                      />\n                    </div>\n                    <div className=\"show\">\n                      <FormControlLabel\n                        control={<Checkbox value=\"checkedC\" />}\n                        label={<small>Low Fertility</small>}\n                      />\n                    </div>\n                    <div className=\"show\">\n                      <FormControlLabel\n                        control={<Checkbox value=\"checkedC\" />}\n                        label={<small>Salinity</small>}\n                      />\n                    </div>\n                    <div className=\"show\">\n                      <FormControlLabel\n                        control={<Checkbox value=\"checkedC\" />}\n                        label={<small>Winter Survival</small>}\n                      />\n                    </div>\n                  </li>\n                  <li\n                    id=\"cropFilterList2\"\n                    onClick={() => expandCoverCropFilter(2)}\n                  >\n                    Soil Conditions\n                  </li>\n                  <li\n                    id=\"cropFilterList3\"\n                    onClick={() => expandCoverCropFilter(3)}\n                  >\n                    Growth\n                  </li>\n                  <li\n                    id=\"cropFilterList4\"\n                    onClick={() => expandCoverCropFilter(4)}\n                  >\n                    Planting &amp; Termination\n                  </li>\n                  <li\n                    id=\"cropFilterList5\"\n                    onClick={() => expandCoverCropFilter(5)}\n                  >\n                    Grazers &amp; Pollinators\n                  </li>\n                  <li\n                    id=\"cropFilterList6\"\n                    onClick={() => expandCoverCropFilter(6)}\n                  >\n                    Pests &amp; Disease\n                  </li>\n                </ul>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </div>\n        </div>\n        <div className=\"col-lg-10\">\n          {state.speciesSelectorActivationFlag ? (\n            isListView ? (\n              <CropTableComponent />\n            ) : (\n              <CropCalendarViewComponent />\n            )\n          ) : (\n            <MyCoverCropList />\n          )}\n          {/* {renderRelevantComponent} */}\n          {/* {isListView ? (\n            state.myCoverCropActivationFlag ? (\n              <MyCoverCropList />\n            ) : (\n              <CropTableComponent />\n            )\n          ) : (\n            <CropCalendarViewComponent />\n          )} */}\n          {/* {state.myCoverCropActivationFlag ? (\n            <MyCoverCropList />\n          ) : (\n            <CropTableComponent />\n          )} */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CropSelector;\n","import React, { useContext, useEffect } from \"react\";\n\nimport \"./App.scss\";\n// import Header from \"./components/Header/header\";\n// import Body from \"./components/body\";\nimport { Box, Snackbar } from \"@material-ui/core\";\n// import Navigation from \"./components/navigation\";\n// import Footer from \"./components/Footer/footer\";\nimport Header from \"./components/Header/header\";\n\nimport Landing from \"./components/Landing/Landing\";\n\nimport { Context } from \"./store/Store\";\nimport LocationComponent from \"./components/Location/Location\";\nimport { loadProgressBar } from \"axios-progress-bar\";\nimport ProgressButtons from \"./shared/ProgressButtons\";\nimport ProgressBar from \"./shared/ProgressBar\";\nimport GoalsSelector from \"./components/GoalsSelector/GoalsSelector\";\nimport LocationConfirmation from \"./components/Location/LocationConfirmation\";\nimport CropSelector from \"./components/CropSelector/CropSelector\";\nimport { Switch, Route } from \"react-router-dom\";\n// import { GreenBarComponent } from \"./components/GreenBar/greenBarComponent\";\n// import BodyComponent from \"./components/body\";\n\nconst logoPath = \"/images/neccc_wide_logo_color_web.jpg\";\n\nconst loadRelevantRoute = progress => {\n  // TODO: Handle case 3 as cropselector vs soil sample selector\n  switch (progress) {\n    case 0:\n      return <Landing bg=\"/images/cover-crop-field.png\" />;\n    case 1:\n      return <LocationComponent />;\n    case 2:\n      return <LocationConfirmation />;\n    case 3:\n      return <LocationConfirmation />;\n    case 4:\n      return <GoalsSelector />;\n    case 5:\n      return <CropSelector />;\n\n    default:\n      return \"Non handled case\";\n  }\n};\n\nconst App = () => {\n  useEffect(() => {\n    document.title = \"Cover Crop Decision Support Tool\";\n    loadProgressBar();\n  });\n\n  const [state, dispatch] = useContext(Context);\n  // const isRootRoute = this.props.path == \"/\" ? true : false;\n  const handleSnackClose = () => {\n    dispatch({\n      type: \"SNACK\",\n      data: {\n        snackOpen: false,\n        snackMessage: \"\"\n      }\n    });\n  };\n\n  return (\n    <div className=\"contentWrapper\">\n      <Header logo=\"neccc_wide_logo_color_web.jpg\" />\n\n      {loadRelevantRoute(state.progress)}\n\n      {state.progress !== 0 && state.progress < 5 ? (\n        <div className=\"row progressIndicatorWrapper mt-4\">\n          <div\n            className=\"col-lg-12\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            <div\n              className=\"row\"\n              style={{\n                width: \"90%\"\n              }}\n            >\n              <div className=\"col-lg-4\">\n                <ProgressButtons />\n              </div>\n              <div\n                className=\"col-lg-4 offset-lg-4\"\n                style={{\n                  textAlign: \"right\"\n                }}\n              >\n                <ProgressBar />\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: state.snackVertical,\n            horizontal: state.snackHorizontal\n          }}\n          key={{\n            vertical: state.snackVertical,\n            horizontal: state.snackHorizontal\n          }}\n          autoHideDuration={5000}\n          open={state.snackOpen}\n          onClose={handleSnackClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={state.snackMessage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Store, { Context } from \"./store/Store\";\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./styles/progressBar.css\";\nimport Footer from \"./components/Footer/footer\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport About from \"./components/About/About\";\nimport SeedingRateCalculator from \"./components/SeedingRateCalculator/SeedingRateCalculator\";\nimport MixMaker from \"./components/MixMaker/MixMaker\";\nimport CoverCropExplorer from \"./components/CoverCropExplorer/CoverCropExplorer\";\n\nconst withFooter = WrappedComponent => () => [\n  <WrappedComponent key=\"1\" />,\n  <Footer key=\"2\" />\n];\n\nconst Wrapper = () => (\n  <Store>\n    <BrowserRouter>\n      <Switch>\n        <Route path={`/`} component={App} exact />\n        <Route path={\"/about\"} component={About} exact />\n        <Route\n          path={\"/seeding-rate-calculator\"}\n          component={SeedingRateCalculator}\n          exact\n        />\n        <Route path={\"/mix-maker\"} component={MixMaker} exact />\n        <Route\n          path={\"/cover-crop-explorer\"}\n          component={CoverCropExplorer}\n          exact\n        />\n      </Switch>\n\n      {/* <App /> */}\n    </BrowserRouter>\n  </Store>\n);\n\nconst WrapperWithFooter = withFooter(Wrapper);\n\nReactDOM.render(<WrapperWithFooter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { Link } from \"@material-ui/core\";\n\n// import \"../../styles/header.css\";\nimport \"../../styles/footer.scss\";\n\nconst Footer = () => {\n  let currentYear = new Date().getFullYear();\n  return (\n    <footer className=\"primaryFooter\">\n      <div className=\"leftSideText\">\n        Disclaimer: Actual cover crop performance may vary. Consult your local{\" \"}\n        <a\n          className=\"footerLink\"\n          href=\"https://www.nrcs.usda.gov/wps/portal/nrcs/detailfull/national/programs/financial/csp/?&cid=nrcsdev11_000242\"\n          style={{\n            color: \"#fff\"\n          }}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          NRCS field office\n        </a>\n        ,{\" \"}\n        <a\n          href=\"https://nifa.usda.gov/land-grant-colleges-and-universities-partner-website-directory\"\n          className=\"footerLink\"\n          style={{\n            color: \"#fff\"\n          }}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Cooperative Extension Service office\n        </a>{\" \"}\n        , or{\" \"}\n        <a\n          href=\"https://www.nacdnet.org/general-resources/conservation-district-directory/\"\n          className=\"footerLink\"\n          style={{\n            color: \"#fff\"\n          }}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Conservation District\n        </a>{\" \"}\n        for detailed guidance.\n      </div>\n      <div className=\"rightSideText\">\n        <Link\n          href=\"https://opensource.org/docs/osd\"\n          style={{ paddingRight: \"50px\", color: \"#000\" }}\n          target=\"_blank\"\n        >\n          OPEN SOURCE\n        </Link>\n        <Link style={{ paddingRight: \"50px\", color: \"#000\" }}>CONTACT US</Link>\n        <Link style={{ paddingRight: \"50px\", color: \"#000\" }}>\n          {currentYear}\n        </Link>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Fragment } from \"react\";\nimport Header from \"../Header/header\";\nimport { Box } from \"@material-ui/core\";\nconst tableStyles = {\n  td: {\n    fontSize: \"1em\",\n    padding: \"0.1em\"\n  }\n};\nconst About = () => {\n  return (\n    <Fragment>\n      <Header logo=\"neccc_wide_logo_color_web.jpg\" />\n\n      <Box>\n        <aside\n          className=\"landingWrapper\"\n          style={{\n            background: 'url(\"/images/cover-crop-field.png\") 0% 0% / cover'\n          }}\n        >\n          <div className=\"boxWrapper\">\n            <aside className=\"text-left\">\n              <h2>About</h2>\n              <p>\n                We are a group of researchers and outreach experts from\n                universities, government agencies and NGOs, and industry\n                dedicated to increasing the sustainability of US cropping\n                systems.The Cover Crop Tools was designed and developed by a\n                Product Team with members from the{\" \"}\n                <a href=\"http://sudokita.com\" target=\"_blank\" rel=\"noreferrer\">\n                  Agricultural Informatics Lab\n                </a>{\" \"}\n                and the{\" \"}\n                <a\n                  href=\"http://precisionsustainableag.org\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Precision Sustainable Agriculture\n                </a>{\" \"}\n                team at USDA ARS, NC State, and Purdue University. The Cover\n                Crop Dataset has been assembled by six teams of cover crop\n                experts (one for each plant hardiness zone in the northeastern\n                United States) from the\n                <a\n                  href=\"http://northeastcovercrops.com\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  {\" \"}\n                  Northeast Cover Crops Council\n                </a>\n                .\n                <br />\n                <table className=\"table table-hover table-striped mt-2\">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th style={tableStyles.td}>Team</th>\n                      <th style={tableStyles.td}>Members</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td style={tableStyles.td}>Product</td>\n                      <td style={tableStyles.td}>\n                        Ankita Raturi, Victoria Ackroyd, Juliet Norton, Rohit\n                        Bandooni, Paul Salon, Steven Mirsky\n                      </td>\n                    </tr>\n                    <tr>\n                      <td style={tableStyles.td}>Zone 7</td>\n                      <td style={tableStyles.td}>\n                        Mark VanGessel, Scott Raubenstein, Nevin Dawson, Aaron\n                        Cooper, Dean Hively, Steven Mirsky, Michel Cavigelli\n                      </td>\n                    </tr>\n                    <tr>\n                      <td style={tableStyles.td}>Zone 6</td>\n                      <td style={tableStyles.td}>\n                        Sjoerd Duiker, John Wallace, Jim Hyde, Rebecca Brown,\n                        Zach Larson, Dave Wilson, Megan Chawner, Christian\n                        Bench, Kaitlin Farbotnik, Mark Goodson\n                      </td>\n                    </tr>\n                    <tr>\n                      <td style={tableStyles.td}>Zone 5</td>\n                      <td style={tableStyles.td}>\n                        Thomas Bjorkman, Kirsten Workman, Shawnna Clark, Dorn\n                        Cox, Mark Goodson, Anne Verhallen\n                      </td>\n                    </tr>\n                    <tr>\n                      <td style={tableStyles.td}>Zone 4</td>\n                      <td style={tableStyles.td}>\n                        Heather Darby, Jason Lilley, Natalie Lounsbury, Lindsey\n                        Ruhl, Derek Hines, Rebecca Long, Ellen Mallory, John\n                        Chartier, Kirsten Workman\n                      </td>\n                    </tr>\n                    <tr>\n                      <td style={tableStyles.td}>Zone 2 &amp; 3</td>\n                      <td style={tableStyles.td}>TBD.</td>\n                    </tr>\n                    <tr>\n                      <td style={tableStyles.td}>Misc. Participants</td>\n                      <td style={tableStyles.td}>\n                        Brandon Smith, Linda Yeung, Masoud Hashemi, Kate Tully\n                      </td>\n                    </tr>\n                    <tr>\n                      <td style={tableStyles.td}>External Data Sources</td>\n                      <td style={tableStyles.td}>\n                        The NECCC dataset was built on data sourced from the{\" \"}\n                        <a href=\"http://mccc.msu.edu\" target=\"_blank\">\n                          Midwestern Cover Crops Council\n                        </a>\n                        ,{\" \"}\n                        <a href=\"https://plants.usda.gov/java/\">\n                          USDA PLANTS database\n                        </a>\n                        , and the{\" \"}\n                        <a href=\"http://itis.gov\" target=\"_blank\">\n                          Integrated Taxonomic Information Service\n                        </a>\n                        .\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </p>\n              <p>\n                <b className=\"mt-2\">\n                  This material is based upon work supported by:\n                </b>\n                <ol>\n                  <li>\n                    The National Institute of Food and Agriculture, U.S.\n                    Department of Agriculture, through the Northeast Sustainable\n                    Agriculture Research and Education program under subaward\n                    number ENE16-144,\n                  </li>\n                  <li>\n                    Post-doctoral Fellowship number 2016-67012-24711 and other\n                    awards from the USDA National Institute of Food and\n                    Agriculture,\n                  </li>\n                  <li>\n                    The U.S. Department of Agriculture Natural Resources\n                    Conservation Service.\n                  </li>\n                </ol>\n              </p>\n              <p></p>\n            </aside>\n          </div>\n        </aside>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport Header from \"../Header/header\";\nimport { Box } from \"@material-ui/core\";\nimport { UnderConstructionText } from \"../../shared/constants\";\n\nconst SeedingRateCalculator = () => {\n  return (\n    <div className=\"contentWrapper\">\n      <Header logo=\"neccc_wide_logo_color_web.jpg\" />\n      <Box>{UnderConstructionText}</Box>\n    </div>\n  );\n};\n\nexport default SeedingRateCalculator;\n","import React from \"react\";\nimport Header from \"../Header/header\";\nimport { Box } from \"@material-ui/core\";\nimport { UnderConstructionText } from \"../../shared/constants\";\n\nconst MixMaker = () => {\n  return (\n    <div className=\"contentWrapper\">\n      <Header logo=\"neccc_wide_logo_color_web.jpg\" />\n      <Box>{UnderConstructionText}</Box>\n    </div>\n  );\n};\n\nexport default MixMaker;\n","import React from \"react\";\nimport Header from \"../Header/header\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { UnderConstructionText } from \"../../shared/constants\";\n\nconst CoverCropExplorer = () => {\n  return (\n    <div className=\"contentWrapper\">\n      <Header logo=\"neccc_wide_logo_color_web.jpg\" />\n      <Box>{UnderConstructionText}</Box>\n    </div>\n  );\n};\n\nexport default CoverCropExplorer;\n"],"sourceRoot":""}