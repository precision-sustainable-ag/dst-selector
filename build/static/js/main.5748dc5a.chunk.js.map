{"version":3,"sources":["components/Footer/footer.js","components/Header/dateComponent.js","components/GreenBar/greenBarComponent.js","components/Header/header.js","components/Well/wellComponent.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","footer","position","bottom","backgroundColor","width","height","maxHeight","textButton","surface","Footer","classes","className","Container","maxWidth","Grid","container","alignItems","Box","flexGrow","href","style","color","Link","paddingRight","DateComponent","today","Date","month","n","getMonth","state","date","getDate","getFullYear","this","Component","GreenBarComponent","props","flag","checkIfWellUpdated","undefined","wellState","console","log","address","GridList","children","GridListTile","item","toString","substring","zoneText","flexContainer","display","flexDirection","padding","Header","progressInterval","setInterval","a","localStorage","getItem","JSON","parse","setState","progress","isNaN","document","getElementsByClassName","classList","add","clearTimeout","logo","backgroundSize","backgroundImage","logoPath","id","direction","md","paddingLeft","List","component","ListItem","button","ListItemText","disableTypography","primary","Typography","fontWeight","fontSize","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","LightButton","withStyles","root","borderRadius","Button","WellComponent","myMap","React","createRef","queryGEORevAPI","lat","lon","fetch","method","then","ret","ok","json","data","latlng","display_name","setZoneState","postcode","addressVerified","zip","res","zone","length","charAt","parseInt","addMarker","e","markers","pop","push","lng","handleSnackClose","snackOpen","snackMessage","handleMapClick","event","long","handleAddressChangeByText","target","value","showAddressChangeBtn","getZipByLatLong","updateAddressOnClick","q","zoom","renderProgress","align","justify","backgroundRepeat","margin","textAlign","marginTop","onClick","setWellProgress","cols","cellHeight","boxShadow","noValidate","autoComplete","FormControl","variant","InputLabel","disabled","Select","labelId","onChange","MenuItem","TextField","label","marginLeft","Map","center","minZoom","maxZoom","ref","TileLayer","attribution","url","map","idx","Marker","key","Popup","spacing","progressBar","setLocalStorage","snackBar","Snackbar","anchorOrigin","vertical","snackVertical","horizontal","snackHorizontal","autoHideDuration","open","onClose","ContentProps","message","stateObj","setItem","stringify","index","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5748dc5a.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Grid,\n  Container,\n  // Button,\n  // List,\n  // ListItem,\n  // ListItemText,\n  // Typography,\n  Link,\n  Box\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import { width } from \"@material-ui/system\";\n// import Helper from \"./helper\";\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    position: `absolute`,\n    bottom: 0,\n    backgroundColor: `#598445`,\n    width: `100%`,\n    height: `5%`,\n    maxHeight: \"5%\"\n  },\n  textButton: {},\n\n  surface: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\"\n  }\n}));\n\nfunction Footer() {\n  const classes = useStyles();\n  // const year = new Date().getFullYear();\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"xl\">\n        <Grid container alignItems=\"center\">\n          <Box flexGrow={1}>\n            <p>\n              Disclaimer: Actual cover crop performance may vary. Consult an{\" \"}\n              <a href=\"http://placehold.it/1000x1000\" style={{ color: \"#fff\" }}>\n                NRCS Extension Educator\n              </a>{\" \"}\n              for detailed guidance.\n            </p>\n          </Box>\n\n          <Box>\n            <Link\n              href=\"https://open-source.org/\"\n              style={{ paddingRight: \"50px\", color: \"#000\" }}\n            >\n              OPEN SOURCE\n            </Link>\n            <Link\n              href=\"https://google.com/\"\n              style={{ paddingRight: \"50px\", color: \"#000\" }}\n            >\n              CONTACT US\n            </Link>\n            <Link\n              href=\"https://google.com\"\n              style={{ paddingRight: \"50px\", color: \"#000\" }}\n            >\n              2019\n            </Link>\n          </Box>\n        </Grid>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { Component } from \"react\";\n\nexport class DateComponent extends Component {\n  constructor() {\n    super();\n\n    var today = new Date();\n\n    var month = [];\n    month[0] = \"January\";\n    month[1] = \"February\";\n    month[2] = \"March\";\n    month[3] = \"April\";\n    month[4] = \"May\";\n    month[5] = \"June\";\n    month[6] = \"July\";\n    month[7] = \"August\";\n    month[8] = \"September\";\n    month[9] = \"October\";\n    month[10] = \"November\";\n    month[11] = \"December\";\n    var n = month[today.getMonth()];\n\n    this.state = {\n      date: `${n} ${today.getDate()}, ${today.getFullYear()}`\n    };\n  }\n\n  render() {\n    return this.state.date;\n  }\n}\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography, GridList, GridListTile } from \"@material-ui/core\";\n// import LocationOnIcon\nexport class GreenBarComponent extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.wellState);\n  }\n\n  componentDidUpdate() {\n    this.checkIfWellUpdated();\n  }\n  flag = false;\n  checkIfWellUpdated = () => {\n    // is props.wellState == undefined ?\n    if (this.props.wellState === undefined) {\n      console.log(`undefined`);\n      this.flag = false;\n    } else if (\n      this.props.wellState.address === undefined ||\n      this.props.wellState === \"stepperState\"\n    ) {\n      // console.log(this.props.wellState);\n      this.flag = false;\n      console.log(`address undefined`);\n    } else {\n      this.flag = true;\n    }\n  };\n  render() {\n    return (\n      <GridList\n        container\n        style={{ backgroundColor: \"#598444\", height: \"40px\" }}\n        children={2}\n      >\n        <GridListTile item>\n          <p>\n            {this.flag === true\n              ? this.props.wellState.address.toString().substring(0, 19)\n              : \"\"}\n          </p>\n        </GridListTile>\n        <GridListTile>\n          <p>\n            {this.flag === true\n              ? `Plant Hardiness ${this.props.wellState.zoneText}`\n              : \"\"}\n          </p>\n        </GridListTile>\n      </GridList>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"../../styles/header.css\";\nimport {\n  Container,\n  Typography,\n  Link,\n  List,\n  ListItem,\n  ListItemText\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DateComponent } from \"./dateComponent\";\nimport { GreenBarComponent } from \"../GreenBar/greenBarComponent\";\n\nconst flexContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  padding: 0\n};\n\nclass Header extends Component {\n  index;\n  constructor(props) {\n    super(props);\n  }\n\n  progressInterval;\n\n  componentDidMount() {\n    this.progressInterval = setInterval(() => {\n      var a = localStorage.getItem(\"stepperState\");\n      a = JSON.parse(a);\n      // console.log(a.progress);\n      if (a === \"stepperState\" || a === \"\") {\n        this.setState({\n          progress: 2\n        });\n      } else {\n        if (!isNaN(a.progress)) {\n          this.setState({\n            progress: 2\n          });\n        }\n      }\n      if (this.state.progress) {\n        document\n          .getElementsByClassName(`itemButton${this.state.progress}`)[0]\n          .classList.add(\"active\");\n      }\n      this.setState({\n        wellState: a\n      });\n      // console.log(this.progressInterval);\n    }, 100);\n  }\n  componentWillUnmount() {\n    clearTimeout(this.progressInterval);\n  }\n  render() {\n    const logo = {\n      width: \"100%\",\n      height: \"80px\",\n      backgroundSize: \"cover\",\n      backgroundImage: `url(${this.props.logoPath})`\n    };\n    return (\n      <header>\n        <Container maxWidth=\"xl\">\n          {/* This banner is good for desktop sizes, need something different for mobile, or probably ged rid of the borders */}\n          <div id=\"banner\">\n            <ul>\n              <li>\n                <a href=\"\">ABOUT</a>\n              </li>\n              <li>\n                <a href=\"\">NECCC</a>\n              </li>\n              <li>\n                <a href=\"\">USDA NRCS</a>\n              </li>\n              <li>\n                <a href=\"\">NE SARE</a>\n              </li>\n              <li>\n                <a href=\"\">HELP</a>\n              </li>\n              <li>\n                <a href=\"\">FEEDBACK</a>\n              </li>\n            </ul>\n          </div>\n\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item md={2} className=\"logoGrid\">\n              <Grid item md={12} style={logo}></Grid>\n            </Grid>\n            <Grid\n              item\n              md={3}\n              className=\"dateGrid\"\n              style={{ paddingLeft: \"1em\" }}\n            >\n              <DateComponent />\n            </Grid>\n          </Grid>\n          <div style={{ padding: \"15px\" }}></div>\n          <List component=\"nav\" style={flexContainer}>\n            <ListItem button className=\"listitemButton itemButton1\">\n              <ListItemText\n                disableTypography\n                primary={\n                  <Typography style={{ fontWeight: \"bold\", fontSize: \"15pt\" }}>\n                    COVER CROP EXPLORER\n                  </Typography>\n                }\n              />\n            </ListItem>\n            <ListItem button className=\"listitemButton itemButton2\">\n              <ListItemText\n                disableTypography\n                primary={\n                  <Typography style={{ fontWeight: \"bold\", fontSize: \"15pt\" }}>\n                    SPECIES SELECTOR\n                  </Typography>\n                }\n              />\n            </ListItem>\n            <ListItem button className=\"listitemButton itemButton3\">\n              <ListItemText\n                disableTypography\n                primary={\n                  <Typography style={{ fontWeight: \"bold\", fontSize: \"15pt\" }}>\n                    MIX MAKER\n                  </Typography>\n                }\n              />\n            </ListItem>\n            <ListItem button className=\"listitemButton itemButton4\">\n              <ListItemText\n                disableTypography\n                primary={\n                  <Typography style={{ fontWeight: \"bold\", fontSize: \"15pt\" }}>\n                    SEED RATE CALCULATOR\n                  </Typography>\n                }\n              />\n            </ListItem>\n            <ListItem button className=\"listitemButton itemButton5\">\n              <ListItemText\n                disableTypography\n                primary={\n                  <Typography style={{ fontWeight: \"bold\", fontSize: \"15pt\" }}>\n                    MY COVER CROP LIST\n                  </Typography>\n                }\n              />\n            </ListItem>\n          </List>\n        </Container>\n        <GreenBarComponent {...this.state} />\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"../../styles/wellComponent.css\";\n\n/* Since we are not using redux here, all our state variables are local state variables by default ( local to the component).\n   we would be putting all the state data to our local storage once the steps are completed and access them when required\n   another benefit of this would be tha tif the user returns in the future, they might not need to fill up everything and we can \n   show a button to skip all if this (as we would already have their data into the local storage)\n*/\n\n/*\nBug List:\n1. If user clicks the Map component and the lat,long from open street maps does not contain zip, our API calls break for getting zone info!\n2. ...\n*/\nimport {\n  Button,\n  Grid,\n  GridList,\n  GridListTile,\n  TextField,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Snackbar,\n  SnackBarMessage\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\n\nconst LightButton = withStyles({\n  root: {\n    backgroundColor: \"#e3f2f4\",\n    borderRadius: \"20px\",\n    color: \"#000\",\n    padding: \"10px 20px 10px 20px\",\n    \"&:hover\": {\n      backgroundColor: \"#48a8ab\",\n      color: \"#fff\"\n    }\n  }\n})(Button);\n\nexport default class WellComponent extends Component {\n  myMap = React.createRef();\n\n  constructor() {\n    super();\n\n    this.state = {\n      progress: 0,\n      address: \"Enter Address\",\n      markers: [[35.78658905, -78.67144915505475]],\n      showAddressChangeBtn: false,\n      zoom: 13,\n      addressVerified: false,\n      snackOpen: false,\n      snackVertical: \"bottom\",\n      snackHorizontal: \"center\",\n      snackMessage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setLocalStorage(\"stepperState\", this.state);\n    // set progress into local storage for the header\n  }\n\n  setLocalStorage(stateObj) {\n    localStorage.setItem(\"stepperState\", JSON.stringify(stateObj));\n  }\n\n  //   fetch(`https://httpbin.org/get`,{\n  //     method: `GET`,\n  //     headers: {\n  //         'authorization': 'BaseAuth W1lcmxsa='\n  //     }\n  // }).then((res)=>{\n  //     if(res.ok) {\n  //         return res.json();\n  //     }\n  // }).then((res)=>{\n  //     console.log(res); // It is like final answer of XHR or jQuery Ajax\n  // })\n\n  queryGEORevAPI = (lat, lon) => {\n    fetch(\n      `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lon}&format=json`,\n      {\n        method: \"GET\"\n      }\n    )\n      .then(ret => {\n        if (ret.ok) {\n          return ret.json();\n        }\n      })\n      .then(data => {\n        let latlng = data.display_name;\n        // console.log(data.address.postcode);\n        // check https://phzmapi.org/[zip].json to map zone with zip probably also restricting the zips?\n        this.setZoneState(data.address.postcode);\n        this.setState({\n          address: latlng,\n          addressVerified: true\n        });\n        // let latlng = data.results.map((latlng) => {\n\n        // })\n      });\n  };\n\n  setZoneState = zip => {\n    console.log(zip);\n    fetch(`https://phzmapi.org/${zip}.json`, {\n      method: \"GET\"\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        let zone = 0;\n        if (data !== null && data !== undefined) {\n          if (data.zone.length > 1) {\n            //  strip everything except the first char and covert it to int\n            zone = data.zone.charAt(0);\n          } else zone = data.zone;\n          return (zone = parseInt(zone));\n        } else {\n          return 7;\n        }\n      })\n      .then(zone => {\n        // check if zone is in the NECCC range else set a default\n        if (zone <= 7 && zone > 1) {\n          if (zone === 2 || zone === 3) {\n            this.setState({\n              zoneText: \"Zone 2 & 3\"\n            });\n          } else {\n            this.setState({\n              zoneText: `Zone ${zone}`\n            });\n          }\n        } else {\n          this.setState({\n            zoneText: \"Zone 7\"\n          });\n        }\n      });\n  };\n\n  addMarker = e => {\n    const { markers } = this.state;\n    markers.pop();\n    markers.push(e.latlng);\n    this.setState({ markers });\n    // console.log(markers[0]);\n    let lon = markers[0].lng;\n    let lat = markers[0].lat;\n    this.queryGEORevAPI(lat, lon);\n  };\n  handleSnackClose = () => {\n    this.setState({ snackOpen: false, snackMessage: \"\" });\n  };\n  setWellProgress(index) {\n    if (index === 2) {\n      // validate address before proceeding to step 3\n      if (this.state.addressVerified) {\n        // if address has been verified then go to next step else throw error\n        this.setState({\n          progress: index\n        });\n      } else {\n        this.setState({\n          snackOpen: true,\n          snackMessage: \"Please select a valid address first!\"\n        });\n      }\n    } else {\n      this.setState({\n        progress: index\n      });\n    }\n\n    console.log(index);\n  }\n  isParent() {\n    if (this.state.progress === 0) return true;\n    else return false;\n  }\n  handleMapClick = event => {\n    const { lat, long } = event.latlng;\n    console.log(`Clicked at ${lat}, ${long}`);\n  };\n\n  handleAddressChangeByText = event => {\n    this.setState({\n      address: event.target.value,\n      showAddressChangeBtn: true\n    });\n  };\n\n  getZipByLatLong = () => {};\n  updateAddressOnClick = () => {\n    // update the new text address from state to map with a new marker!\n\n    // get currect address from state\n    var q = this.state.address;\n    // https://nominatim.openstreetmap.org/search/?q=1139%20crab%20orchard%20drive&format=json\n    fetch(`https://nominatim.openstreetmap.org/search/?q=${q}&format=json`, {\n      method: \"GET\"\n    })\n      .then(ret => {\n        if (ret.ok) {\n          return ret.json();\n        }\n      })\n      .then(data => {\n        console.log(data);\n        if (data.length === 1) {\n          // th;\n          this.setState({\n            markers: [[data[0].lat, data[0].lon]],\n            zoom: 15,\n            addressVerified: true,\n            address: data[0].display_name\n          });\n        } else {\n          this.setState({\n            address: \"\",\n            addressVerified: false,\n            snackOpen: true,\n            snackMessage: \"Please complete the address\"\n          });\n        }\n\n        // let latlng = data.display_name;\n        // this.setState({\n        //   address: latlng\n        // });\n        // let latlng = data.results.map((latlng) => {\n\n        // })\n      })\n      .then(() => {\n        this.setState({\n          showAddressChangeBtn: false\n        });\n      });\n  };\n\n  renderProgress = () => {\n    switch (this.state.progress) {\n      case 0:\n        return (\n          <Grid\n            container\n            align=\"center\"\n            justify=\"center\"\n            direction=\"column\"\n            style={{\n              backgroundImage: `url(/images/cover-crop-field.png)`,\n              backgroundSize: \"cover\",\n              height: \"75vh\",\n              backgroundRepeat: \"no-repeat\"\n            }}\n          >\n            <Grid\n              item\n              style={{\n                backgroundColor: \"rgba(240,247,235,0.8)\",\n                width: \"90%\",\n                margin: \"0 auto\",\n                textAlign: \"\",\n                padding: \"6%\"\n              }}\n            >\n              <h1>Welcome to the NECCC Cover Crop Decision Support Tool </h1>\n              <p>\n                You are currently interacting with a Beta version of the Cover\n                Crop DSTs. The purpose of this interaction is so that we may\n                gather feedback about the usability and usefulness of these\n                tools.\n              </p>\n              <p>\n                The cover crop data you will see has been created by the NECCC\n                Data Verification Team of cover crop experts, the original MCCC\n                species selector tool, a seeding rate calculator developd by\n                NRCS NY, and several other data sources. Please note: these data\n                are still being finalized by NECCC teams for each of the plant\n                hardiness zones. The data shown are a preview and are yet to be\n                finalized.{\" \"}\n              </p>{\" \"}\n              <p style={{ fontWeight: \"bold\" }}>\n                {\" \"}\n                Thank you for your time and consideration. We look forward to\n                your feedback and hope to build a pleasant cover crop tool\n                experience for you to effectively select and manage your cover\n                crops.\n              </p>\n            </Grid>\n            <Grid container>\n              <Grid item md={4}></Grid>\n              <Grid item style={{ marginTop: \"2%\" }} md={4}>\n                <LightButton\n                  onClick={() => {\n                    this.setWellProgress(1);\n                  }}\n                >\n                  NEXT\n                </LightButton>\n              </Grid>\n              <Grid item md={4}></Grid>\n            </Grid>\n          </Grid>\n        );\n      case 1:\n        return (\n          <Grid\n            container\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ marginTop: \"5%\" }}\n          >\n            <GridList\n              children={2}\n              cols={2}\n              cellHeight={300}\n              style={{\n                backgroundColor: \"rgba(255,255,255,1)\",\n                boxShadow: \"rgb(136, 136, 136) 0px 0px 1px\",\n                width: \"90%\",\n                margin: \"0 auto\",\n                textAlign: \"\",\n                padding: \"20px\"\n              }}\n            >\n              <GridListTile item md={6}>\n                <h1>Where is your field located? </h1>\n                <p>\n                  Select plant hardiness zone for least site specific results.\n                  Enter address or zip code for county-level specificity. For\n                  more specific results, mark out your field boundary in the\n                  map.\n                </p>\n\n                {/* <p style={{ fontWeight: \"bold\" }}>asd</p> */}\n                <form noValidate autoComplete=\"off\">\n                  <FormControl variant=\"outlined\" style={{ width: \"40%\" }}>\n                    <InputLabel id=\"demo-simple-select-outlined-label\" disabled>\n                      Plant Hardiness Zone\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-outlined-label\"\n                      id=\"demo-simple-select-outlined\"\n                      onChange={() => {}}\n                      disabled\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={0}>Zone 2 and 3</MenuItem>\n                      <MenuItem value={1}>Zone 4</MenuItem>\n                      <MenuItem value={2}>Zone 5</MenuItem>\n                      <MenuItem value={3}>Zone 6</MenuItem>\n                      <MenuItem value={4}>Zone 7</MenuItem>\n                    </Select>\n                  </FormControl>\n                  &nbsp;&nbsp;\n                  <TextField\n                    value={this.state.address === \"\" ? \"\" : this.state.address}\n                    id=\"locationAddress\"\n                    label=\"Location\"\n                    variant=\"outlined\"\n                    style={{ width: \"40%\" }}\n                    onChange={this.handleAddressChangeByText}\n                  />\n                  {this.state.showAddressChangeBtn ? (\n                    <LightButton\n                      style={{ marginLeft: \"15px\", marginTop: \"5px\" }}\n                      onClick={this.updateAddressOnClick}\n                    >\n                      Update\n                    </LightButton>\n                  ) : (\n                    \"\"\n                  )}\n                </form>\n              </GridListTile>\n              <GridListTile item md={6}>\n                <Map\n                  style={{ height: \"100%\", width: \"100%\" }}\n                  center={this.state.markers[0]}\n                  zoom={this.state.zoom}\n                  minZoom={3}\n                  maxZoom={20}\n                  onClick={this.addMarker}\n                  ref={this.myMap}\n                >\n                  <TileLayer\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?\"\n                  />\n                  {this.state.markers.map((position, idx) => (\n                    <Marker key={`marker-${idx}`} position={position}>\n                      <Popup>\n                        <span>{this.state.address}</span>\n                      </Popup>\n                    </Marker>\n                  ))}\n                </Map>\n              </GridListTile>\n            </GridList>\n          </Grid>\n        );\n      case 2:\n        return (\n          <div\n            style={{\n              marginTop: \"5%\",\n              backgroundColor: \"rgba(255,255,255,1)\",\n              boxShadow: \"rgb(136, 136, 136) 0px 0px 1px\",\n              width: \"90%\",\n              margin: \"0 auto\",\n              textAlign: \"\",\n              padding: \"20px\"\n            }}\n          >\n            <Grid\n              container\n              alignItems=\"center\"\n              justify=\"left\"\n              direction=\"row\"\n              item\n              style={{}}\n              md={12}\n            >\n              <GridList item md={6} style={{ height: \"170px\" }} children={2}>\n                <GridListTile\n                  item\n                  md={3}\n                  style={{ height: \"100%\", width: \"50%\" }}\n                >\n                  <Map\n                    style={{ width: \"100%\", height: \"100%\" }}\n                    center={this.state.markers[0]}\n                    zoom={this.state.zoom}\n                    minZoom={14}\n                    maxZoom={20}\n                    onClick={this.addMarker}\n                    ref={this.myMap}\n                  >\n                    <TileLayer\n                      attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?\"\n                    />\n                    {this.state.markers.map((position, idx) => (\n                      <Marker key={`marker-${idx}`} position={position}>\n                        <Popup>\n                          <span>{this.state.address}</span>\n                        </Popup>\n                      </Marker>\n                    ))}\n                  </Map>\n                </GridListTile>\n                <GridListTile item md={9} style={{ width: \"50%\" }}>\n                  <h2>Location Details</h2>\n                  <p>\n                    Your cover crop recommendations will come from the Plant\n                    Hardiness{\" \"}\n                    {this.state.zoneText !== undefined\n                      ? `${this.state.zoneText}`\n                      : \"\"}{\" \"}\n                    NECCC Dataset\n                  </p>\n                </GridListTile>\n              </GridList>\n\n              <Grid item md={6}></Grid>\n            </Grid>\n            <Grid container>\n              <GridList\n                children={1}\n                style={{ marginTop: \"20px\", width: \"100%\" }}\n                spacing={32}\n              >\n                <GridListTile item md={12} style={{ width: \"100%\" }}>\n                  {/* Text input showing the address */}\n                  <TextField\n                    value={this.state.address}\n                    style={{ width: \"100%\" }}\n                    disabled\n                  ></TextField>\n                </GridListTile>\n              </GridList>\n            </Grid>\n          </div>\n        );\n      default:\n        return \"non handled case\";\n    }\n  };\n\n  progressBar = () => {\n    return (\n      <Grid container style={{ marginTop: \"2%\", width: \"90%\" }}>\n        <Grid item md={3}></Grid>\n        <Grid item md={6}>\n          <LightButton\n            onClick={() => {\n              this.setWellProgress(this.state.progress - 1);\n              this.setLocalStorage(this.state);\n            }}\n          >\n            Back\n          </LightButton>\n          <LightButton\n            onClick={() => {\n              this.setWellProgress(this.state.progress + 1);\n              this.setLocalStorage(this.state);\n            }}\n            style={{\n              marginLeft: \"5px\"\n            }}\n          >\n            NEXT\n          </LightButton>\n        </Grid>\n        <Grid item md={3} style={{ textAlign: \"right\" }}>\n          <div className=\"progress\">\n            <div className=\"progress-track\"></div>\n\n            <div\n              id=\"step1\"\n              className=\"progress-step\"\n              style={\n                this.state.progress !== 1\n                  ? { backgroundColor: \"#f0f7eb\", color: \"black\" }\n                  : { backgroundColor: \"#8abc62\" }\n              }\n            ></div>\n\n            <div\n              id=\"step2\"\n              className=\"progress-step\"\n              style={\n                this.state.progress !== 2\n                  ? { backgroundColor: \"#f0f7eb\", color: \"black\" }\n                  : { backgroundColor: \"#8abc62\" }\n              }\n            ></div>\n\n            <div\n              id=\"step3\"\n              className=\"progress-step\"\n              style={\n                this.state.progress !== 3\n                  ? { backgroundColor: \"#f0f7eb\", color: \"black\" }\n                  : { backgroundColor: \"#8abc62\" }\n              }\n            ></div>\n\n            <div\n              id=\"step4\"\n              className=\"progress-step\"\n              style={\n                this.state.progress !== 4\n                  ? { backgroundColor: \"#f0f7eb\", color: \"black\" }\n                  : { backgroundColor: \"#8abc62\" }\n              }\n            ></div>\n          </div>\n        </Grid>\n        <Grid container style={{ width: \"90%\", margin: \"0 auto\" }}>\n          <Grid item md={9}></Grid>\n          {/* <Grid item md={6}></Grid> */}\n          <Grid item md={3} style={{ textAlign: \"center\" }}>\n            Question {this.state.progress} of 4\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  };\n  snackBar = () => {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: this.state.snackVertical,\n          horizontal: this.state.snackHorizontal\n        }}\n        key={{\n          vertical: this.state.snackVertical,\n          horizontal: this.state.snackHorizontal\n        }}\n        autoHideDuration={5000}\n        open={this.state.snackOpen}\n        onClose={this.handleSnackClose}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={this.state.snackMessage}\n      />\n    );\n  };\n  render() {\n    return (\n      <div style={{ width: \"100%\" }}>\n        {this.renderProgress()}\n\n        {this.state.progress !== 0 ? this.progressBar() : \"\"}\n\n        {this.snackBar()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\n// import Header from \"./components/Header/header\";\n// import Body from \"./components/body\";\nimport { Grid, Box } from \"@material-ui/core\";\n// import Navigation from \"./components/navigation\";\nimport Footer from \"./components/Footer/footer\";\nimport Header from \"./components/Header/header\";\nimport WellComponent from \"./components/Well/wellComponent\";\n// import { GreenBarComponent } from \"./components/GreenBar/greenBarComponent\";\n// import BodyComponent from \"./components/body\";\n\nconst logoPath = \"/images/neccc_wide_logo_color_web.jpg\";\n\nfunction App() {\n  // const isRootRoute = this.props.path == \"/\" ? true : false;\n  return (\n    <Box component=\"div\">\n      {/* Our header.js file exports the reusable Header component.\n      It is just a simple Grid based header with logo on the left hand side and typography on the right  */}\n\n      <Header logoPath={`${logoPath}`} />\n\n      <WellComponent />\n      {/* <BodyComponent /> */}\n      {/* {isRootRoute ? <Header logoPath={`${logoPath}`} /> : \"\"} */}\n\n      {/*\n      Our Main part of this application would be this Navigation component. It contains code for our main navigation\n      It is using a material-ui tab panel for simplicity and ease of use.\n      Each tab contains/would-contain components individually, as required.\n      */}\n\n      {/* <Navigation /> */}\n\n      {/* body.js is just a temporary code, that would eventually be replaced by footer.js\n      Until production, this can serve as a playground!!\n      */}\n\n      {/* <Body /> */}\n\n      <Footer />\n    </Box>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}