{"version":3,"sources":["store/Reducer.js","store/Store.js","shared/constants.js","components/CropSelector/CropSelectorCalendarView.js","components/InformationSheet/PhotoComponent.js","components/InformationSheet/SoilDrainageTimeline.js","components/InformationSheet/TooltipMaker.js","components/InformationSheet/InformationSheetContent.js","components/CropSelector/CropDetailsModal.js","components/MyCoverCropList/MyCoverCropCardsComponent.js","components/MyCoverCropList/MyCoverCropComparisonComponent.js","components/MyCoverCropList/MyCoverCropList.js","components/CropSelector/CropLegendModal.js","components/CropSelector/CropCalendarView.js","shared/keys.js","components/MyCoverCropList/ComparisonBar/RenderFilters.js","components/MyCoverCropList/ComparisonBar/RenderGoals.js","components/MyCoverCropList/ComparisonBar/ComparisonBar.js","components/CropSelector/DateRangeDialog.js","components/CropSelector/Filters/Filters.js","components/CropSelector/Filters/ForwardFilter.js","components/CropSelector/CropSidebar.js","components/CropSelector/CropTable.js","components/CropSelector/CropSelector.js","components/GoalsSelector/GoalTag.js","components/GoalsSelector/GoalsSelector.js","components/Header/DateComponent.js","components/Header/ForecastComponent.js","components/Location/GoogleAutocomplete.js","components/Location/MapContext.js","components/Location/Location.js","components/Location/SoilCondition.js","components/Location/WeatherConditions.js","components/Header/Greenbar/Greenbar.js","components/Header/Header.js","components/CoverCropExplorer/ConsentModal.js","components/Landing/Landing.js","components/Location/LocationConfirmation.js","shared/ProgressBar.js","shared/ProgressButtonsInner.js","shared/ProgressButtons.js","App.js","serviceWorker.js","index.js","components/Footer/Footer.js","components/License/MITLicenseText.js","components/About/About.js","components/SeedingRateCalculator/SeedingRateCalculator.js","components/MixMaker/MixMaker.js","components/CoverCropExplorer/ExplorerCardView.js","components/CoverCropExplorer/CoverCropExplorer.js","components/InformationSheet/InformationSheet.js","components/InformationSheet/DictionaryContent.js","components/InformationSheet/InformationSheetDictionary.js","components/Help/Help.js","components/Feedback/Feedback.js","components/MyCoverCropList/MyCoverCropListWrapper.js","components/License/AgInformaticsLicenseText.js","components/License/License.js"],"names":["Reducer","state","action","value","data","section","window","location","href","includes","sfilters","type","cropSearch","zone","zoneToggle","activeCropData","changedFilters","lastZipCode","consent","console","log","progress","address","markers","latitude","longitude","zip","zipCode","weatherDataReset","showAddressChangeBtn","zoneText","selectedGoals","lastZone","addressVerified","fullAddress","addressChangedViaMap","markersCopy","addressSearchPreference","selectedCrops","soilData","Map_Unit_Name","Drainage_Class","Flooding_Frequency","Ponding_Frequency","soilDataOriginal","weatherData","averageFrost","firstFrostDate","month","day","lastFrostDate","averagePrecipitation","thisMonth","annual","frostFreeDays","myCoverCropActivationFlag","speciesSelectorActivationFlag","cashCropData","name","dateRange","startDate","endDate","snackOpen","snackMessage","allGoals","cropData","ajaxInProgress","cropDetailModal","isSoilDataLoading","selectedCheckboxes","selectedStars","for","activeGrowthPeriod","comparisonKeys","cropDataFormatter","excludedCropZoneDecisionKeys","tjson","filter","crop","map","val","fields","monthStringBuilder","img","Notes","Directory","desc","loremText","vals","forEach","param","valStart","moment","valEnd","str","valuesArray","isSameOrBefore","get","push","format","add","key","prev","Object","keys","item","index","endsWith","removedOldVals","Set","z7AllCrops","z7crops","z6AllCrops","z6crops","z5AllCrops","z5crops","z4AllCrops","z4crops","z7CropData","z6CropData","z5CropData","z4CropData","initialState","zoom","snackVertical","snackHorizontal","modalOpen","modalSize","modalBody","addToCartBtnText","greenbarExpanded","zone7CropData","zone6CropData","zone5CropData","zone4CropData","zone7Dictionary","z7Dict","zone6Dictionary","z6Dict","zone5Dictionary","z5Dict","zone4Dictionary","z4Dict","goalsOpen","cropFiltersOpen","explorer","selector","Context","createContext","Store","children","useReducer","dispatch","Provider","change","e","target","ReferenceTooltip","require","props","sourceURL","url","sourceName","source","content","hasLink","Tooltip","title","rel","interactive","arrow","Info","fontSize","dangerouslySetInnerHTML","placement","Typography","variant","DataTooltip","className","zoneIcon","w","h","height","width","viewBox","fill","xmlns","d","UnderConstructionText","withStyles","thumb","backgroundColor","track","input","color","Switch","Grid","container","spacing","direction","alignItems","justifyContent","style","minHeight","xs","abbrRegion","to","i","regions","concat","replace","txt","charAt","toUpperCase","substr","toLowerCase","length","LightButton","root","borderRadius","padding","borderColor","Button","getRating","ratng","parseInt","weatherApiURL","allMonths","localeData","monthsShort","greenBarExpansionPanelHeight","trimString","stringFull","size","isNaN","substring","RenderSeedPriceIcons","MonetizationOn","opacity","CropImage","present","src","alt","view","onClick","imageStyle","maxWidth","maxHeight","ucFirst","text","split","s","join","flipCoverCropName","cropName","cropNames","getActiveCropMonths","activeMonths","sudoButtonStyle","fontWeight","lineHeight","letterSpacing","textTransform","sudoButtonStyleWithPadding","CropSelectorCalendarView","from","useContext","cashCropStartDate","toISOString","cashCropEndDate","months","isThisCashCropMonth","result","start","end","isBefore","duration","has","textAlign","earlyStr","midStr","borderLeft","borderRight","v","gutterBottom","toString","PaintGrowthChart","PhotoComponent","imageData","imagesApiUrl","useState","imageList","setImageList","useEffect","a","Axios","method","getImages","then","response","catch","error","fallback","strippedUrl","startsWith","data-caption","getPhotoCredits","fileName","baseName","fileNameArray","last","secondLast","thirdLast","year","mirskyLabString","path","separator","windowsSeparator","slice","lastIndexOf","SoilDrainageTimeline","drainage","drainageClasses","Timeline","align","drainageClass","fullLength","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","TooltipMaker","variable","setDesc","dict","setDict","dictionary","Variable","Description","Accordion","boxShadow","borderBottom","display","margin","expanded","MuiAccordion","AccordionSummary","marginBottom","MuiAccordionSummary","useStyles","makeStyles","theme","heading","typography","pxToRem","fontWeightRegular","InformationSheetContent","InfoGoals","attribute","alternate","InfoWeeds","InfoEnvironmentalTermination","classes","currentSources","setCurrentSources","pdf","setPDF","document","fetch","regex","removeDoubleQuotes","relevantZones","sources","zones","Zone","trim","coverCrops","body","classList","remove","id","overflowX","whiteSpace","flexWrap","WebkitOverflowScrolling","defaultExpanded","expandIcon","ExpandMore","AccordionDetails","marginTop","border","float","FiberManualRecord","getMonthDayString","background","borderTop","textDecoration","RenderExtendedComments","allKeysWithNotes","trimStart","obj","modal","paper","palette","shadows","textField","marginLeft","marginRight","AccordionSummaryIcon","transform","CropDetailsModalComponent","modalData","setModalData","kd","ctrlKey","preventDefault","print","addEventListener","removeEventListener","ReactGA","initialize","pageview","handleModalClose","setModalOpen","event","category","label","querySelector","contentWindow","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","disableBackdropClick","disableEscapeKeyDown","Fade","in","borderTopLeftRadius","borderTopRightRadius","Close","paddingRight","paddingLeft","paddingBottom","IconButton","Print","card","media","MyCoverCropCardsComponent","btnId","enqueueSnackbar","useSnackbar","cardNo","Card","CardMedia","image","CardContent","CardActionArea","removeIndex","indexOf","selectedCropsCopy","splice","removeCrop","CropDetailsModal","lightBorder","borderBottomLeftRadius","lightBG","RenderRelevantData","filterKey","RenderSeedingData","GetAverageGoalRating","goalRating","goal","MyCoverCropComparisonComponent","sidebarDefinitionsz7","sidebarDefs","setSidebarDefs","sidebarDefinitionsz6","sidebarDefinitionsz5","sidebarDefinitionsz4","getTooltipData","keyName","exactObject","find","showScrollArrows","setShowScrollArrow","showLeftScrollArrow","setShowLeftScrollArrow","scrollContainer","amount","parent","getElementById","scrollLeft","visibility","aria-label","KeyboardArrowLeft","KeyboardArrowRight","onScroll","Cancel","titleAccess","handleModalOpen","MyCoverCropList","comparisonView","history","useHistory","redirectToSpeciesSelector","redirectToExplorer","TopBar","Add","itemNo","CropLegendModal","legendModal","handleLegendModal","CloseRounded","growthIcon","CropCalendarViewComponent","setLegendModal","selectedBtns","Headers","append","activeGrowthPeriodState","setActiveGrowthPeriodState","sortReset","activeCropDataShadow","reverse","sort","b","setActiveCropData","nameSortFlag","setNameSortFlag","selectedCropsSortFlag","setSelectedCropsSortFlag","RenderCrops","active","TableRow","TableCell","getAverageGoalRating","colSpan","cropId","cropArray","addCropToBasket","CircularProgress","TableContainer","component","Table","stickyHeader","TableHead","startIcon","AddCircle","AcUnit","LocalFlorist","WbSunny","Eco","firstCropName","secondCropName","localeCompare","growthMonth","checkIfGrowthMonth","growthMonthSeparator","selectedCropsShadow","selectedCropIds","newActiveShadow","inCart","TableBody","RenderFilters","filterValues","toggleSidebarFilterItems","description","ListItem","button","ListItemText","primary","ExpandLess","Collapse","List","disablePadding","subNested","FormControlLabel","control","Checkbox","checked","onChange","comparisonKeysCopy","indexOfValue","values","index2","__html","alternateName","updateCheckboxStatus","RenderGoals","goals","setGoals","setGoalsOpen","ComparisonBar","setFilterValues","filteredVals","filterData","selected","filteredGoals","listRoot","subheader","ListSubheader","listSubHeaderRoot","cursor","filterKeysAppend","filterGoalsAppend","flat","newSidebarFilterVals","stateDefinitions","available","DateRangeDialog","close","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","DialogTitle","DialogContent","firstOfWeek","numberOfCalendars","selectionType","defaultState","onSelect","DialogActions","DollarsAndRatings","handleChange","symbol","transformOrigin","Array","maxSize","_","Chip","repeat","j","Chips","Tip","omitHeading","setOpen","disableFocusListener","disableHoverListener","disableTouchListener","onMouseOut","Filters","forwardRef","ref","filters","setSidebarFilterOptions","sidebarFilterOptions","setSelected","setProps","dollarsAndRatingsChange","filtername","whatever","chipChange","ForwardFilter","listItemRoot","formControlLabel","nested","CropSidebarComponent","isListView","setGrowthWindow","toggleComparisonView","toggleListView","clearCoverCropSearch","debug","loading","setLoading","pathname","showFilters","setShowFilters","alert","cashCropVisible","setCashCropVisible","setDateRange","sidebarFilters","setSidebarFilters","dateRangeModalOpen","sidebarStarter","sidebarFiltersData","row","areCommonElements","arr1","arr2","arr2Set","some","el","sfo","k","crop_data","search","match","parm","m","every","t","nonZeroKeys2","growthArray","arrayKeys","booleanKeys","filtered","totalActiveFilters","keyObject","intersection","filtersSelected","resetAllFilters","generateSidebarObject","dataDictionary","sidebarCategoriesData","newCategory","f","dictFilter","__id","dataDictionaryName","field","valuesDescription","setData","changeProgress","Date","tableHeight","setTableHeight","totalHt","getBoundingClientRect","btnHt","localStorage","setItem","JSON","stringify","output","Component","Filter","filtersList","fullWidth","Compare","CalendarToday","TextField","helperText","InputProps","endAdornment","InputAdornment","position","Clear","unmountOnExit","oldIndex","newIndex","newGoalArr","newGoals","arrayMove","updateSelectedGoals","renderList","isDragged","undefined","renderItem","isSelected","disableTypography","cashCropOpen","defaultValue","aria-haspopup","readOnly","CalendarTodayRounded","FormGroup","cashCropDateRange","parse","getItem","dateRangeOpen","range","CropTableComponent","showGrowthWindow","setShowGrowthWindow","getCardFlex","indexKey","goalsLength","activeCropPresent","hasGoalRatingTwoOrLess","rating","RenderActiveInactiveCropData","fontStyle","verticalAlign","tbodyHeight","setTbodyHeight","theadHeight","setTheadHeight","theadComputedHeight","sortAllCrops","sortPreference","Sort","bottom","zIndex","minWidth","lastIndex","wordBreak","top","flexDirection","right","ScrollTop","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","anchor","ownerDocument","scrollIntoView","behavior","block","role","CropSelector","setSortPreference","setIsListView","setComparisonView","setCropData","cropDataChanged","setCropDataChanged","c","sortCropsBy","orderBy","activeCropDataCopy","activeObjKeys","updatedCropData","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","useWindowSize","showSidebar","setShowSidebar","ArrowBack","ArrowForward","CropSidebar","sortEnvTolCropData","objDataArr","objData","sortBy","CropTable","CropCalendarView","Fab","KeyboardArrowUp","GoalTag","goalDescription","goalTitle","goaltTitle","valuesDescriptions","getElementsByClassName","enterDelay","enterNextDelay","disabled","avatar","Avatar","goalSkeletonStyle","GoalsSelector","setAllGoals","Skeleton","setTodaysDate","now","tzdata","tz","guess","DateComponent","date","setDate","ForecastComponent","showTempIcon","setShowTempIcon","min","max","unit","iconURL","iconDescription","temp","setTemp","callWeatherApi","latlng","makeURLString","fetchData","json","jsonData","trace","iconId","weather","icon","tempObj","main","temp_min","temp_max","reverseGEO","localityInfo","informative","lastInfo","addressString","city","postcode","setShowFeatures","params","lat","lng","Number","toFixed","autocompleteService","current","placeService","secondary","GoogleAutocomplete","mapInstance","mapsApi","latLng","setLatLng","searchLabel","selectedToEditSite","setAddress","setCounty","setSelectedToEditSite","React","setValue","inputValue","setInputValue","options","setOptions","loaded","useRef","script","createElement","setAttribute","appendChild","loadScript","useMemo","throttle","request","callback","getPlacePredictions","fetchLocalData","load","place_id","main_text","fetchPlaces","res","google","maps","Geocoder","placeRequest","placeId","region","Promise","resolve","geocode","results","status","fetchZipFromLatLng","geocoder","LatLng","county","address_components","types","lonBounds","geometry","bounds","Hb","lonCenter","g","latBounds","tc","latCenter","fetchGeocode","formatted_address","long_name","places","AutocompleteService","test","componentRestrictions","country","newOptions","Autocomplete","getOptionLabel","option","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","newValue","structured_formatting","fetchLocationDetails","onInputChange","newInputValue","renderInput","renderOption","matches","parts","main_text_matched_substrings","offset","part","highlight","secondary_text","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapContext","minzoom","maxzoom","show","setShow","mapCenter","setMapCenter","isPoly","setIsPoly","showEditControl","setShowEditControl","updateGlobalMarkers","markersArray","editableFG","setEditableFG","formattedAddressArray","zipArray","Map","minZoom","maxZoom","center","getPolyCenter","TileLayer","subdomains","attribution","FeatureGroup","featureGroupRef","edit","onEdited","onCreated","drawnItems","leafletElement","_layers","layerid","layer","removeLayer","layerType","_latlng","latlngs","_latlngs","firstLatLng","latlngArr","onDeleted","draw","rectangle","circle","circlemarker","line","polygon","allowIntersection","showArea","metric","polyline","Polygon","positions","Marker","arr","y","Math","formControl","selectEmpty","LocationComponent","caller","showRestartPrompt","setShowRestartPrompt","restartAccept","setRestartAccept","zoneSelection","setZoneSelection","Search","FormControl","InputLabel","Select","labelId","MenuItem","keuy","dividers","autoFocus","SoilCondition","tilingCheck","setTilingCheck","getSSURGOData","lon","longLatString","soilDataQuery","myHeaders","urlencoded","URLSearchParams","requestOptions","headers","redirect","mapUnitString","stringSplit","elm","floodingClasses","updateDrainageClass","drainages","updateFloodingFrequency","floodings","RenderFloodingOptions","flooding","RenderDrainageClasses","showTiling","setShowTiling","Terrain","LocalDrinkOutlined","arrayEquals","InvertColors","soilDrainCopy","drainSet","delete","WavesOutlined","isArray","WeatherConditions","setMonths","currentMonthFull","setCurrentMonthFull","anyValuesChanged","setAnyValuesChanged","weatherDataShadow","setWeatherDataShadow","lastFrostDayHelper","setLastFrostDayHelper","firstFrostDayHelper","setFirstFrostDayHelper","firstFrostDayError","setFirstFrostDayError","lastFrostDayError","setLastFrostDayError","firstFrostMonth","setFirstFrostMonth","firstFrostDay","setFirstFrostDay","lastFrostMonth","setLastFrostMonth","lastFrostDay","setLastFrostDay","setAveragePrecipitation","setFrostFreeDays","parseFloat","Opacity","WbSunnyOutlined","htmlFor","native","inputProps","multiline","maxLength","step","broadcastObject","expansionPanelBaseStyle","greenBarWrapperBackground","Greenbar","expansionPanelComponent","setExpansionPanelComponent","greenBarParent","evt","targetElement","parentNode","closeExpansionPanel","greenbarExpansionElement","handleAddressBtnClick","handleSoilBtnClick","handleWeatherBtnClick","handleConfirmationChoice","clearCoverCrops","defaultMarkers","setConfirmationOpen","confirmationOpen","restartPrompt2","setRestartPrompt2","LocationOn","currentMonth","getWeatherData","Refresh","Location","Header","collapse","setCollapse","isRoot","setIsRoot","closeSnackbar","isActive","getUSDAZone","ok","persist","getAverageFrostDates","resp","totalYears","mostRecentYearData","maxDate","minDate","averageFrostObject","revAPIURL","locality","principalSubdivision","frostFreeDaysURL","frostFreeDatesURL","frostFreeDaysObject","hasOwnProperty","currentMonthInt","averageRainForAMonthURL","fiveYearAvgRainURL","averagePrecipitationForCurrentMonth","fiveYearAvgRainAnnual","z7Formattedgoal","zone7DataDictionary","Category","z6Formattedgoal","zone6DataDictionary","z5Formattedgoal","zone5DataDictionary","z4Formattedgoal","zone4DataDictionary","setmyCoverCropActivationFlag","setSpeciesSelectorActivationFlag","RenderMyCoverCropListButtons","Badge","badgeContent","activeClassName","onContextMenu","NavLink","exact","light","fluid","isOpen","navbar","ExplorerCardView","Box","sx","left","bgcolor","p","o","Landing","containerHeight","setContainerHeight","updateSize","getElementsByTagName","bg","backgroundSize","ConsentModal","incVal","LocationConfirmation","checkProgressStatus","actualProgress","expectedProgress","ProgressBar","ProgressButtonsInner","isDisabled","renderProgressButtons","ProgressButtons","setIsDisabled","disableLogic","LoadRelevantRoute","calcHeight","App","setCalcHeight","parentDocHeight","headerHeight","logo","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","RouteNotFound","setTimeout","querySelectorAll","textContent","decodeURI","click","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","WrappedComponent","Footer","monthYear","setMonthYear","fetchDate","auth","password","lastCommitDate","commit","committer","lastCommitDateFormatted","getMonth","getFullYear","MITLicenseText","styles","aboutPage","currentYear","About","RenderContent","SeedingRateCalculator","MixMaker","setSelectedBtns","newSelectedBtns","CoverCropExplorer","InformationSheet","BasicCrop","setCrop","createRef","removeItem","PictureAsPdf","FormatListBulleted","closeModal","_id","$oid","Synonyms","Origin","Duration","Persistence","Drought","Flood","Heat","Salinity","Shade","DictionaryContent","dictData","groupedCats","setGroupedCats","allCats","property","groupedCategories","reduce","acc","cur","RenderCats","innerCat","InformationSheetDictionary","setDictionary","HelpComponent","overflow","frameBorder","allowFullScreen","mozallowfullscreen","webkitallowfullscreen","FeedbackComponent","MyCoverCropListWrapper","AgInformaticsLicenseText","footerPage","License","licenseType","createTheme","overrides","MuiTooltip","tooltip","MuiChip","colorSecondary","colorPrimary","sizeSmall","MuiDialog","csTheme","responsiveFontSizes","WrapperWithFooter","maxSnack","ReactDOM","render","URL","process","origin","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.178f1bd4.chunk.js","sourcesContent":["/*\n  Reducer determines the next state in Store.js\n*/\n\nconst Reducer = (state, action, value = action && action.data && action.data.value) => {\n  const section = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  let sfilters = {...state[section]};\n\n  switch (action.type) {\n    case 'TOGGLE' : return {...state, [value]: !state[value]}\n    case 'TRUE'   : return {...state, [value]: true}\n    case 'FALSE'  : return {...state, [value]: false}\n\n    case 'FILTER_TOGGLE': {\n      sfilters[value] = !sfilters[value];\n      return {\n        ...state,\n        [section]: sfilters,\n        changedFilters: true,\n      }\n    }\n\n    case 'FILTER_ON': {\n      sfilters[value] = true;\n      return {\n        ...state,\n        [section]: sfilters,\n        changedFilters: true,\n      }\n    }\n\n    case 'FILTER_OFF': {\n      sfilters[value] = false;\n      return {\n        ...state,\n        [section]: sfilters,\n        changedFilters: true,\n      }\n    }\n\n    case 'CLEAR_FILTERS': {\n      sfilters = {\n        cropSearch: '',\n        zone: sfilters.zone\n      }\n\n      return {\n        ...state,\n        [section]: sfilters,\n        changedFilters: true,\n      }\n    }\n\n    case 'ZONE_TOGGLE': {\n      return {...state, zoneToggle: action.data.value};\n    }\n    \n    case 'CROP_SEARCH': {\n      sfilters.cropSearch = action.data.value;\n      return {\n        ...state,\n        cropSearch: action.data.value,\n        [section]: sfilters,\n      };\n    }\n\n    case 'UPDATE_ACTIVE_CROP_DATA': {\n      return {\n        ...state,\n        activeCropData: action.data.value,\n        changedFilters: false\n      }\n    }\n\n    case 'LAST_ZIP_CODE': {\n      return {...state, lastZipCode: action.data.value};\n    }\n\n    case 'UPDATE_CONSENT': {\n      if (action.data.consent === true) {\n        console.log('consent: true');\n        return { ...state, consent: true };\n      } else if (action.data.consent === false) {\n        console.log('consent: false');\n        return { ...state, consent: false };\n      } else {\n        break;\n      }\n    }\n\n    case 'UPDATE_PROGRESS': {\n      if (action.data.type === 'INCREMENT') {\n        return { ...state, progress: state.progress + 1 };\n      } else if (action.data.type === 'DECREMENT') {\n        return { ...state, progress: state.progress - 1 };\n      } else if (action.data.type === 'HOME') {\n        return { ...state, progress: 0 };\n      } else {\n        break;\n      }\n    }\n    \n    case 'UPDATE_LOCATION': {\n      return {\n        ...state,\n        address: action.data.address,\n        markers: [[action.data.latitude, action.data.longitude]],\n        zip: action.data.zip,\n        zipCode: action.data.zip,\n      };\n    }\n    \n    case 'JUMP_SPECIES_PROGRESS': {\n      return { ...state, progress: 5 };\n    }\n    \n    case 'WEATHER_DATA_RESET': {\n      return { ...state, weatherDataReset: action.data.weatherDataReset };\n    }\n    \n    case 'CHANGE_ADDRESS_BY_TYPING': {\n      if (action.data.markers) {\n        return {\n          ...state,\n          address: action.data.address,\n          showAddressChangeBtn: action.data.showAddressChangeBtn,\n          markers: action.data.markers,\n        };\n      } else {\n        return {\n          ...state,\n          address: action.data.address,\n          showAddressChangeBtn: action.data.showAddressChangeBtn,\n        };\n      }\n    }\n    \n    case 'UPDATE_ZONE_TEXT': {\n      sfilters.zone = action.data.zone;\n      return {\n        ...state,\n        zoneText: action.data.zoneText,\n        selectedGoals: [],\n        [section]: sfilters,\n      };\n    }\n    \n    case 'UPDATE_ZONE': {\n      sfilters.zone = action.data.zone;\n      return {\n        ...state,\n        zoneText: action.data.zoneText,\n        [section]: sfilters,        \n      };\n    }\n    \n    case 'UPDATE_LAST_ZONE': {\n      return {\n        ...state,\n        lastZone: action.data.value,\n      };\n    }\n    \n    case 'CHANGE_ADDRESS': {\n      return {\n        ...state,\n        address: action.data.address,\n        addressVerified: action.data.addressVerified,\n      };\n    }\n    \n    case 'CHANGE_ADDRESS_VIA_MAP': {\n      return {\n        ...state,\n        address: action.data.address,\n        fullAddress: action.data.fullAddress,\n        zip: action.data.zip,\n        zipCode: action.data.zip,\n        addressVerified: action.data.addressVerified,\n        addressChangedViaMap: true,\n      };\n    }\n    \n    case 'RESET': {\n      return {\n        ...state,\n        progress: 0,\n        address: '',\n        markers: action.data.markers,\n        addressVerified: false,\n        markersCopy: [],\n        zipCode: 0,\n        addressSearchPreference: 'address',\n        selectedCrops: action.data.selectedCrops,\n        selectedGoals: [],\n        soilData: {\n          Map_Unit_Name: '',\n          Drainage_Class: [],\n          Flooding_Frequency: [],\n          Ponding_Frequency: '',\n        },\n        soilDataOriginal: {\n          Map_Unit_Name: '',\n          Drainage_Class: [],\n          Flooding_Frequency: [],\n          Ponding_Frequency: '',\n        },\n        weatherData: {\n          averageFrost: {\n            firstFrostDate: {\n              month: 'October',\n              day: 21,\n            },\n            lastFrostDate: {\n              month: 'April',\n              day: 20,\n            },\n          },\n          averagePrecipitation: {\n            thisMonth: 3.6, //inches\n            annual: 43, //inches\n          },\n          frostFreeDays: 173,\n        },\n        myCoverCropActivationFlag: false,\n        speciesSelectorActivationFlag: true,\n        cashCropData: {\n          name: '',\n          dateRange: {\n            startDate: '',\n            endDate: '',\n          },\n        },\n      };\n    }\n\n    case 'UPDATE_MARKER': {\n      return {\n        ...state,\n        markers: action.data.markers,\n      };\n    }\n    \n    case 'UPDATE_MARKER_COPY': {\n      return {\n        ...state,\n        markersCopy: action.data.markersCopy,\n      };\n    }\n    \n    case 'UPDATE_ADDRESS_ON_MAP_CLICK': {\n      return {\n        ...state,\n        address: action.data.address,\n        addressVerified: action.data.addressVerified,\n        snackOpen: action.data.snackOpen,\n        snackMessage: action.data.snackMessage,\n      };\n    }\n\n    case 'TOGGLE_ADDRESS_CHANGE_BUTTON': {\n      return {\n        ...state,\n        showAddressChangeBtn: action.data.showAddressChangeBtn,\n      };\n    }\n\n    case 'ADD_GOALS': {\n      return {\n        ...state,\n        allGoals: action.data,\n      };\n    }\n\n    case 'SNACK': {\n      return {\n        ...state,\n        snackOpen: action.data.snackOpen,\n        snackMessage: action.data.snackMessage,\n      };\n    }\n\n    case 'UPDATE_SELECTED_GOALS': {\n      return {\n        ...state,\n        selectedGoals: action.data,\n      };\n    }\n    \n    case 'ADD_SELECTED_GOALS': {\n      return {\n        ...state,\n        selectedGoals: [...state.selectedGoals, action.data],\n      };\n    }\n\n    case 'DRAG_GOALS': {\n      return {\n        ...state,\n        selectedGoals: action.data.selectedGoals,\n        snackOpen: action.data.snackOpen,\n        snackMessage: action.data.snackMessage,\n      };\n    }\n\n    case 'PULL_CROP_DATA': {\n      return {\n        ...state,\n        cropData: action.data,\n        activeCropData: action.data,\n      };\n    }\n\n    case 'SELECTED_CROPS_MODIFIER': {\n      return {\n        ...state,\n        selectedCrops: action.data.selectedCrops,\n        snackOpen: action.data.snackOpen,\n        snackMessage: action.data.snackMessage,\n      };\n    }\n\n    case 'ACTIVATE_MY_COVER_CROP_LIST_TILE': {\n      return {\n        ...state,\n        myCoverCropActivationFlag: action.data.myCoverCropActivationFlag,\n        speciesSelectorActivationFlag:\n          action.data.speciesSelectorActivationFlag,\n      };\n    }\n\n    case 'ACTIVATE_SPECIES_SELECTOR_TILE': {\n      return {\n        ...state,\n        myCoverCropActivationFlag: action.data.myCoverCropActivationFlag,\n        speciesSelectorActivationFlag:\n          action.data.speciesSelectorActivationFlag,\n      };\n    }\n\n    case 'UPDATE_WEATHER_CONDITIONS': {\n      return {\n        ...state,\n        weatherData: action.data.weatherData,\n      };\n    }\n\n    case 'UPDATE_FROST_FREE_DAYS': {\n      return {\n        ...state,\n        weatherData: {\n          ...state.weatherData,\n          frostFreeDays: action.data.frostFreeDays,\n        },\n      };\n    }\n\n    case 'UPDATE_AVERAGE_FROST_DATES': {\n      return {\n        ...state,\n        weatherData: {\n          ...state.weatherData,\n          averageFrost: action.data.averageFrost,\n        },\n      };\n    }\n\n    case 'UPDATE_AVERAGE_PRECIP_CURRENT_MONTH': {\n      return {\n        ...state,\n        weatherData: {\n          ...state.weatherData,\n          averagePrecipitation: {\n            ...state.weatherData.averagePrecipitation,\n            thisMonth: action.data.thisMonth,\n          },\n        },\n      };\n    }\n\n    case 'UPDATE_AVERAGE_PRECIP_ANNUAL': {\n      return {\n        ...state,\n        weatherData: {\n          ...state.weatherData,\n          averagePrecipitation: {\n            ...state.weatherData.averagePrecipitation,\n            annual: action.data.annual,\n          },\n        },\n      };\n    }\n\n    case 'SET_AJAX_IN_PROGRESS': {\n      return {\n        ...state,\n        ajaxInProgress: action.data,\n      };\n    }\n    \n    case 'TOGGLE_CROP_DETAIL_MODAL': {\n      return {\n        ...state,\n        cropDetailModal: action.data.cropDetailModal,\n      };\n    }\n\n    case 'TOGGLE_SOIL_LOADER': {\n      return {\n        ...state,\n        isSoilDataLoading: action.data.isSoilDataLoading,\n      };\n    }\n    \n    case 'UPDATE_SELCTED_CHECKBOXES': {\n      return {\n        ...state,\n        selectedCheckboxes: action.data.selectedCheckboxes,\n      };\n    }\n\n    case 'UPDATE_SELECTED_STARS': {\n      return {\n        ...state,\n        selectedStars: action.data.selectedStars,\n      };\n    }\n\n    case 'UPDATE_SOIL_DATA': {\n      return {\n        ...state,\n        soilData: {\n          ...state.soilData,\n          Map_Unit_Name: action.data.Map_Unit_Name,\n          Drainage_Class: action.data.Drainage_Class,\n          Flooding_Frequency: action.data.Flooding_Frequency,\n          Ponding_Frequency: action.data.Ponding_Frequency,\n          for: action.data.for,\n        },\n      };\n    }\n    \n    case 'UPDATE_SOIL_DATA_ORIGINAL': {\n      return {\n        ...state,\n        soilDataOriginal: {\n          ...state.soilDataOriginal,\n          Map_Unit_Name: action.data.Map_Unit_Name,\n          Drainage_Class: action.data.Drainage_Class,\n          Flooding_Frequency: action.data.Flooding_Frequency,\n          Ponding_Frequency: action.data.Ponding_Frequency,\n          for: action.data.for,\n        },\n      };\n    }\n\n    case 'UPDATE_DATE_RANGE': {\n      return {\n        ...state,\n        cashCropData: {\n          ...state.cashCropData,\n          dateRange: {\n            startDate: action.data.startDate,\n            endDate: action.data.endDate,\n          },\n        },\n      };\n    }\n\n    case 'UPDATE_ADDRESS_SEARCH_PREFERENCE': {\n      return {\n        ...state,\n        addressSearchPreference: action.data.addressSearchPreference,\n      };\n    }\n\n    case 'UPDATE_ZIP_CODE': {\n      return {\n        ...state,\n        zipCode: action.data.zipCode,\n      };\n    }\n\n    case 'UPDATE_ACTIVE_GROWTH_PERIOD': {\n      return {\n        ...state,\n        activeGrowthPeriod: action.data.activeGrowthPeriod,\n      };\n    }\n\n    case 'UPDATE_DRAINAGE_CLASS': {\n      return {\n        ...state,\n        soilData: {\n          ...state.soilData,\n          Drainage_Class: action.data,\n        },\n      };\n    }\n\n    case 'UPDATE_FLOODING_FREQUENCY': {\n      return {\n        ...state,\n        soilData: {\n          ...state.soilData,\n          Flooding_Frequency: action.data,\n        },\n      };\n    }\n\n    case 'UPDATE_COMPARISON_KEYS': {\n      return {\n        ...state,\n        comparisonKeys: action.data.comparisonKeys,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","/*\n  Store is the first component to run, it sets all the global state variables and is used in almost all other components\n    it sets the state using the Reducer and the initial state\n\n  monthStringBuilder parses all the data to find entries which end with \"start\" or \"end\"\n    it then determines if the day is before or after the 15th of that month\n    if it is before the 15th it gets a value of early, if after a value of mid\n    this is used in the calendar view\n\n  loremText is used to fill crops descriptions with dummy text if they do not have a description\n    if lorem text is in a crop then airtable does not have a description for that crop\n*/\n\nimport moment from \"moment-timezone\";\nimport React, { createContext, useReducer } from \"react\";\nimport desc from \"../shared/crop-descriptions.json\";\nimport img from \"../shared/image-dictionary.json\";\nimport z4crops from \"../shared/json/zone4/crop-data.json\";\nimport z4Dict from \"../shared/json/zone4/data-dictionary.json\";\nimport z5crops from \"../shared/json/zone5/crop-data.json\";\nimport z5Dict from \"../shared/json/zone5/data-dictionary.json\";\nimport z6crops from \"../shared/json/zone6/crop-data.json\";\nimport z6Dict from \"../shared/json/zone6/data-dictionary.json\";\nimport z7crops from \"../shared/json/zone7/crop-data.json\";\nimport z7Dict from \"../shared/json/zone7/data-dictionary.json\";\nimport Reducer from \"./Reducer\";\n\nconst cropDataFormatter = (cropData = [{}], zone = 7) => {\n  const excludedCropZoneDecisionKeys = [\"Exclude\", \"Up and Coming\", \"Discuss\"];\n  // Filter unwanted rows\n  let tjson = cropData.filter((crop) => {\n    if (\n      excludedCropZoneDecisionKeys.includes(crop[\"Zone Decision\"]) ||\n      crop[\"Cover Crop Name\"] === \"__Open Discussion Row\"\n    ) {\n      return false;\n    } else return true;\n  });\n\n  return tjson.map((crop) => {\n    // remove open discussion row and zone decision !== include\n\n    let val = { fields: crop };\n\n    val = monthStringBuilder(val);\n\n    val.fields[\"inBasket\"] = false;\n\n    val.fields[\"Image Data\"] = img[val.fields[\"Cover Crop Name\"]]\n      ? img[val.fields[\"Cover Crop Name\"]]\n      : {\n          \"Cover Crop\": val.fields[\"Cover Crop Name\"],\n          \"Key Thumbnail\": null,\n          Notes: null,\n          Directory: null,\n        };\n\n    val.fields[\"Crop Description\"] = desc[val.fields[\"Cover Crop Name\"]]\n      ? desc[val.fields[\"Cover Crop Name\"]]\n      : loremText();\n\n    if (!val.fields[\"Nitrogen Fixation\"]) {\n      val.fields[\"Nitrogen Fixation\"] = 0;\n    }\n\n    if (!val.fields[\"Early Spring Growth\"]) {\n      val.fields[\"Early Spring Growth\"] = 0;\n    }\n\n    val.fields[\"Discourages Nematodes\"] = val.fields[\"Disoucrages Nematodes\"];\n    val.fields[\"id\"] = val.fields[\"__id\"];\n    val.fields[\"Drought\"] = val.fields[\"Drought Tolerance\"];\n    val.fields[\"Flood\"] = val.fields[\"Flood Tolerance\"];\n    val.fields[\"Heat\"] = val.fields[\"Heat Tolerance\"];\n    val.fields[\"Low Fertility\"] = val.fields[\"Low Fertility Tolerance\"];\n    val.fields[\"Salinity\"] = val.fields[\"Salinity Tolerance\"];\n    val.fields[\"Shade\"] = val.fields[\"Shade Tolerance\"];\n    val.fields[\"Tillage at Vegetative\"] =\n      val.fields[\"Tillage Termination at Vegetative\"];\n    val.fields[\"Tillage at Flowering\"] =\n      val.fields[\"Tillage Termination at Flowering\"];\n\n    val.fields[\"Freezing at Flowering\"] =\n      val.fields[\"Freezing Termination at Flowering\"];\n\n    val.fields[\"Freezing at Vegetative\"] =\n      val.fields[\"Freezing Termination at Vegetative\"];\n    val.fields[\"Chemical at Vegetative\"] =\n      val.fields[\"Chemical Termination at Vegetative\"];\n    val.fields[\"Chemical at Flowering\"] =\n      val.fields[\"Chemical Termination at Flowering\"];\n\n    val.fields[\"Mow at Flowering\"] = val.fields[\"Mow Termination at Flowering\"];\n    val.fields[\"Roller Crimp at Flowering\"] =\n      val.fields[\"Roller Crimp Termination at Flowering\"];\n\n    if (!val.fields[\"Frost Seeding\"]) {\n      val.fields[\"Frost Seeding\"] = false;\n    } else {\n      val.fields[\"Frost Seeding\"] = true;\n    }\n    if (!val.fields[\"Can Aerial Seed\"]) {\n      val.fields[\"Aerial Seeding\"] = false;\n    } else {\n      val.fields[\"Aerial Seeding\"] = true;\n    }\n\n    //TODO: not using anymore\n    if (!val.fields[\"Pollinator Habitat\"]) {\n      val.fields[\"Pollinator Habitat\"] = 0;\n    }\n    if (!val.fields[\"Pollinator Food\"]) {\n      val.fields[\"Pollinator Food\"] = 0;\n    }\n\n    return val;\n  });\n};\n\nconst monthStringBuilder = (vals) => {\n  const params = [\n    \"Reliable Establishment/Growth\",\n    \"Second Reliable Establishment/Growth\",\n    \"Temperature/Moisture Risk to Establishment\",\n    \"Second Temperature/Mositure Risk to Establishment\",\n    \"Late Fall/Winter Planting Date\",\n    \"Early Fall/ Winter Seeding Rate\",\n    \"Standard Fall/Winter Seeding Rate Date\",\n    \"Standard Spring Seeding Rate Date\",\n    \"Frost Seeding\",\n  ];\n  let val = vals;\n  params.forEach((param) => {\n    if (val.fields[param + \" Start\"]) {\n      const valStart = moment(val.fields[param + \" Start\"], \"YYYY-MM-DD\");\n      const valEnd = val.fields[param + \" End\"]\n        ? moment(val.fields[param + \" End\"], \"YYYY-MM-DD\")\n        : moment(val.fields[param + \" Stop\"], \"YYYY-MM-DD\");\n      let str = \"\";\n      let valuesArray = [];\n\n      while (valStart.isSameOrBefore(valEnd)) {\n        if (valStart.get(\"D\") <= 15) {\n          str = \"Early\";\n        } else {\n          str = \"Mid\";\n        }\n        valuesArray.push([`${valStart.format(\"MMMM\")}, ${str}`]);\n        valStart.add(\"14\", \"days\");\n      }\n      valuesArray.forEach((key) => {\n        const prev = val.fields[key] || [];\n        prev.push(param);\n        val.fields[key] = prev;\n      });\n    }\n  });\n  // this is temporary, needs to be replaced with wither a fix to calendar growth window component or exporting of json from airtable\n  Object.keys(val.fields).forEach((item, index) => {\n    if (item.endsWith(\"Early\") || item.endsWith(\"Mid\")) {\n      let uniq = [...new Set(val.fields[item])];\n      let removedOldVals = uniq.filter((item) => !item.endsWith(\"growth\"));\n      val.fields[item] = removedOldVals;\n    }\n  });\n  return val;\n};\n\nconst loremText = () => {\n  return \"Description for this cover crop is currently unavailable.\";\n};\nconst z7AllCrops = z7crops;\nconst z6AllCrops = z6crops;\nconst z5AllCrops = z5crops;\nconst z4AllCrops = z4crops;\n\nconst z7CropData = cropDataFormatter(z7AllCrops, 7);\nconst z6CropData = cropDataFormatter(z6AllCrops, 6);\nconst z5CropData = cropDataFormatter(z5AllCrops, 5);\nconst z4CropData = cropDataFormatter(z4AllCrops, 4);\n\nconst initialState = {\n  consent: false,\n  progress: 0,\n  address: \"\",\n  addressSearchPreference: \"address\",\n  addressChangedViaMap: false,\n  fullAddress: \"\",\n  zip: 0,\n  zipCode: 0,\n  lastZipCode: 0,\n  markersCopy: [],\n  markers: [[40.78489145, -74.80733626930342]],\n  showAddressChangeBtn: false,\n  selectedCheckboxes: [],\n  selectedStars: {},\n  allGoals: [],\n  cropData: z7CropData,\n  selectedCrops: [],\n  selectedGoals: [],\n  zoom: 13,\n  addressVerified: false,\n  snackOpen: false,\n  snackVertical: \"bottom\",\n  snackHorizontal: \"right\",\n  snackMessage: \"\",\n  modalOpen: false,\n  modalSize: \"lg\", //sm,md,lg,fluid\n  modalBody: {},\n  addToCartBtnText: \"add to list\",\n  zoneToggle: true, // Explorer: true if PLANT HARDINESS ZONE is expanded\n  soilData: {\n    Map_Unit_Name: \"\",\n    Drainage_Class: [],\n    Flooding_Frequency: [],\n    Ponding_Frequency: \"\",\n  },\n  soilDataOriginal: {\n    Map_Unit_Name: \"\",\n    Drainage_Class: [],\n    Flooding_Frequency: [],\n    Ponding_Frequency: \"\",\n  },\n\n  weatherData: {\n    averageFrost: {\n      firstFrostDate: {\n        month: \"October\",\n        day: 21,\n      },\n      lastFrostDate: {\n        month: \"April\",\n        day: 20,\n      },\n    },\n    averagePrecipitation: {\n      thisMonth: 3.6, //inches\n      annual: 43, //inches\n    },\n    frostFreeDays: 173,\n  },\n  myCoverCropActivationFlag: false,\n  speciesSelectorActivationFlag: true,\n  ajaxInProgress: false,\n  cropDetailModal: false,\n  greenbarExpanded: false,\n  isSoilDataLoading: false,\n  cashCropData: {\n    name: \"\",\n    dateRange: {\n      startDate: \"\",\n      endDate: \"\",\n    },\n  },\n  zone7CropData: z7CropData,\n  zone6CropData: z6CropData,\n  zone5CropData: z5CropData,\n  zone4CropData: z4CropData,\n  zone7Dictionary: z7Dict,\n  zone6Dictionary: z6Dict,\n  zone5Dictionary: z5Dict,\n  zone4Dictionary: z4Dict,\n  weatherDataReset: false,\n  \n  activeGrowthPeriod: [],\n  comparisonKeys: [],\n\n  activeCropData: [],\n  lastZone : '',\n\n  goalsOpen: true,\n  cropFiltersOpen: true,\n\n  explorer: {  // filters for explorer\n    cropSearch: '',\n  },\n\n  selector: {  // filters for selector\n    cropSearch: '',\n  }\n};\n\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n\n  const change = (type, e, value = e && e.target.value) => {\n    if (typeof value === 'object') {\n      dispatch({\n        type,\n        data: value\n      });\n    } else {\n      dispatch({\n        type,\n        data: {\n          value\n        }\n      });\n      // alert(JSON.stringify({type,data: {value}}))\n    }\n  } // change\n\n  return (\n    <Context.Provider value={{state, dispatch, change}}>{children}</Context.Provider>\n  );\n};\n\n\nexport const Context = createContext(initialState);\n\nexport default Store;\n","import React, { Fragment } from \"react\";\nimport {\n  withStyles,\n  Button,\n  Switch,\n  Grid,\n  Typography,\n  Tooltip,\n  Dialog,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { Info, MonetizationOn } from \"@material-ui/icons\";\nconst JSZip = require(\"jszip\");\nconst JSZipUtils = require(\"jszip-utils\");\nconst saveAs = require(\"save-as\");\n\nexport const ReferenceTooltip = (props) => {\n  let sourceURL = props.url;\n  let sourceName = props.source;\n  let type = props.type || \"link\";\n  let content = props.content || \"\";\n  let hasLink = props.hasLink ? true : false;\n  return type === \"link\" ? (\n    <Tooltip\n      title={\n        <div>\n          Source{\": \"}\n          <a href={sourceURL} target=\"_blank\" rel=\"noopener noreferrer\">\n            {sourceName}\n          </a>\n        </div>\n      }\n      interactive\n      arrow\n    >\n      <Info fontSize=\"small\" />\n    </Tooltip>\n  ) : type === \"html\" ? (\n    <Tooltip interactive arrow dangerouslySetInnerHTML={props.content}>\n      {\" \"}\n      <Info fontSize=\"small\" />\n    </Tooltip>\n  ) : hasLink ? (\n    <Tooltip title={props.title} placement=\"right\" interactive arrow>\n      <Info fontSize=\"small\" />\n    </Tooltip>\n  ) : (\n    <Tooltip\n      title={\n        <div>\n          <Typography variant=\"body1\">{content}</Typography>\n        </div>\n      }\n      placement=\"right\"\n      arrow\n    >\n      <Info fontSize=\"small\" />\n    </Tooltip>\n  );\n};\n\nexport const DataTooltip = ({\n  data,\n  interactive = true,\n  placement = \"top-start\",\n}) => {\n  return (\n    <Tooltip\n      title={<div className=\"text-center\">{data}</div>}\n      interactive={interactive}\n      placement={placement}\n      arrow\n    >\n      <Info fontSize=\"small\" />\n    </Tooltip>\n  );\n};\n\nexport const locationIcon = (w, h) => {\n  return (\n    <svg\n      width={w}\n      height={h}\n      viewBox=\"0 0 14 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M7 0C3.13 0 0 3.13 0 7C0 12.25 7 20 7 20C7 20 14 12.25 14 7C14 3.13 10.87 0 7 0ZM7 9.5C5.62 9.5 4.5 8.38 4.5 7C4.5 5.62 5.62 4.5 7 4.5C8.38 4.5 9.5 5.62 9.5 7C9.5 8.38 8.38 9.5 7 9.5Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\nexport const zoneIcon = (w, h) => {\n  return (\n    <svg\n      height={h}\n      width={w}\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM6 15.5C4.62 15.5 3.5 14.38 3.5 13C3.5 11.62 4.62 10.5 6 10.5C7.38 10.5 8.5 11.62 8.5 13C8.5 14.38 7.38 15.5 6 15.5ZM7.5 6C7.5 4.62 8.62 3.5 10 3.5C11.38 3.5 12.5 4.62 12.5 6C12.5 7.38 11.38 8.5 10 8.5C8.62 8.5 7.5 7.38 7.5 6ZM14 15.5C12.62 15.5 11.5 14.38 11.5 13C11.5 11.62 12.62 10.5 14 10.5C15.38 10.5 16.5 11.62 16.5 13C16.5 14.38 15.38 15.5 14 15.5Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport const cloudIcon = (w, h) => {\n  return (\n    <svg\n      width={w}\n      height={h}\n      viewBox=\"0 0 24 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19.35 6.04C18.67 2.59 15.64 0 12 0C9.11 0 6.6 1.64 5.35 4.04C2.34 4.36 0 6.91 0 10C0 13.31 2.69 16 6 16H19C21.76 16 24 13.76 24 11C24 8.36 21.95 6.22 19.35 6.04Z\"\n        fill=\"black\"\n      />\n    </svg>\n  );\n};\n\nexport const GreenSwitch = withStyles({\n  thumb: {\n    backgroundColor: \"rgb(138, 188, 98, 1)\",\n  },\n  track: {\n    backgroundColor: \"rgb(138, 188, 98, 0.5)\",\n  },\n  input: {\n    \"&:checked\": {\n      color: \"rgb(240, 247, 235)\",\n    },\n  },\n  // \"&:checked\": {\n  //   color: \"rgb(240, 247, 235)\",\n  // },\n})(Switch);\n\nexport const GetMonthString = (month) => {\n  let months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  return months[month].toUpperCase();\n};\n\nexport const UnderConstructionText = () => {\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Grid item xs={3}>\n        <Typography variant=\"h3\">Under Construction</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport const abbrRegion = (input, to) => {\n  var states = [\n    [\"Alabama\", \"AL\"],\n    [\"Alaska\", \"AK\"],\n    [\"American Samoa\", \"AS\"],\n    [\"Arizona\", \"AZ\"],\n    [\"Arkansas\", \"AR\"],\n    [\"Armed Forces Americas\", \"AA\"],\n    [\"Armed Forces Europe\", \"AE\"],\n    [\"Armed Forces Pacific\", \"AP\"],\n    [\"California\", \"CA\"],\n    [\"Colorado\", \"CO\"],\n    [\"Connecticut\", \"CT\"],\n    [\"Delaware\", \"DE\"],\n    [\"District Of Columbia\", \"DC\"],\n    [\"Florida\", \"FL\"],\n    [\"Georgia\", \"GA\"],\n    [\"Guam\", \"GU\"],\n    [\"Hawaii\", \"HI\"],\n    [\"Idaho\", \"ID\"],\n    [\"Illinois\", \"IL\"],\n    [\"Indiana\", \"IN\"],\n    [\"Iowa\", \"IA\"],\n    [\"Kansas\", \"KS\"],\n    [\"Kentucky\", \"KY\"],\n    [\"Louisiana\", \"LA\"],\n    [\"Maine\", \"ME\"],\n    [\"Marshall Islands\", \"MH\"],\n    [\"Maryland\", \"MD\"],\n    [\"Massachusetts\", \"MA\"],\n    [\"Michigan\", \"MI\"],\n    [\"Minnesota\", \"MN\"],\n    [\"Mississippi\", \"MS\"],\n    [\"Missouri\", \"MO\"],\n    [\"Montana\", \"MT\"],\n    [\"Nebraska\", \"NE\"],\n    [\"Nevada\", \"NV\"],\n    [\"New Hampshire\", \"NH\"],\n    [\"New Jersey\", \"NJ\"],\n    [\"New Mexico\", \"NM\"],\n    [\"New York\", \"NY\"],\n    [\"North Carolina\", \"NC\"],\n    [\"North Dakota\", \"ND\"],\n    [\"Northern Mariana Islands\", \"NP\"],\n    [\"Ohio\", \"OH\"],\n    [\"Oklahoma\", \"OK\"],\n    [\"Oregon\", \"OR\"],\n    [\"Pennsylvania\", \"PA\"],\n    [\"Puerto Rico\", \"PR\"],\n    [\"Rhode Island\", \"RI\"],\n    [\"South Carolina\", \"SC\"],\n    [\"South Dakota\", \"SD\"],\n    [\"Tennessee\", \"TN\"],\n    [\"Texas\", \"TX\"],\n    [\"US Virgin Islands\", \"VI\"],\n    [\"Utah\", \"UT\"],\n    [\"Vermont\", \"VT\"],\n    [\"Virginia\", \"VA\"],\n    [\"Washington\", \"WA\"],\n    [\"West Virginia\", \"WV\"],\n    [\"Wisconsin\", \"WI\"],\n    [\"Wyoming\", \"WY\"],\n  ];\n\n  // So happy that Canada and the US have distinct abbreviations\n  var provinces = [\n    [\"Alberta\", \"AB\"],\n    [\"British Columbia\", \"BC\"],\n    [\"Manitoba\", \"MB\"],\n    [\"New Brunswick\", \"NB\"],\n    [\"Newfoundland\", \"NF\"],\n    [\"Northwest Territory\", \"NT\"],\n    [\"Nova Scotia\", \"NS\"],\n    [\"Nunavut\", \"NU\"],\n    [\"Ontario\", \"ON\"],\n    [\"Prince Edward Island\", \"PE\"],\n    [\"Quebec\", \"QC\"],\n    [\"Saskatchewan\", \"SK\"],\n    [\"Yukon\", \"YT\"],\n  ];\n\n  var regions = states.concat(provinces);\n\n  var i; // Reusable loop variable\n  if (to === \"abbr\") {\n    input = input.replace(/\\w\\S*/g, function (txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n    for (i = 0; i < regions.length; i++) {\n      if (regions[i][0] === input) {\n        return regions[i][1];\n      }\n    }\n  } else if (to === \"name\") {\n    input = input.toUpperCase();\n    for (i = 0; i < regions.length; i++) {\n      if (regions[i][1] === input) {\n        return regions[i][0];\n      }\n    }\n  }\n};\n\nexport const CustomStyles = () => {\n  return {\n    progressColor: \"#2b7b79\",\n    darkGreen: \"#598444\",\n    defaultFontSize: \"1em\",\n    lighterGreen: \"#598445\",\n    lightGreen: \"#add08f\",\n    greenishWhite: \"#f0f7eb\",\n    primaryProgressBtnColor: \"#49a8ab\",\n    primaryProgressBtnBorderColor: \"#62b8bc\",\n    secondaryProgressBtnColor: \"#e3f2f4\",\n    secondaryProgressBtnBorderColor: \"#e3f2f4\",\n    fullyRoundedRadius: \"200px\",\n    semiRoundedRadius: \"10px\",\n    _10pxRoundedRadius: \"10px\",\n    _5pxRoundedRadius: \"5px\",\n    mildlyRoundedRadius: \"5px\",\n    nonRoundedRadius: \"0px\",\n    defaultButtonPadding: \"10px 20px 10px 20px\",\n  };\n};\n\nexport const LightButton = withStyles({\n  root: {\n    backgroundColor: CustomStyles().secondaryProgressBtnBorderColor,\n    borderRadius: CustomStyles().fullyRoundedRadius,\n    color: \"#000\",\n    padding: CustomStyles().defaultButtonPadding,\n    borderColor: CustomStyles().secondaryProgressBtnBorderColor,\n    \"&:hover\": {\n      borderColor: CustomStyles().primaryProgressBtnBorderColor,\n      backgroundColor: CustomStyles().primaryProgressBtnColor,\n      color: \"#fff\",\n    },\n  },\n})(Button);\n\nexport const getRating = (ratng) => {\n  let rating = parseInt(ratng);\n\n  switch (rating) {\n    case 0:\n      return (\n        <div className=\"rating-0\">\n          <span></span>\n        </div>\n      );\n    case 1:\n      return (\n        <div className=\"rating-1\">\n          <span></span>\n        </div>\n      );\n    case 2:\n      return (\n        <div className=\"rating-2\">\n          <span></span>\n        </div>\n      );\n    case 3:\n      return (\n        <div className=\"rating-3\">\n          <span></span>\n        </div>\n      );\n    case 4:\n      return (\n        <div className=\"rating-4\">\n          <span></span>\n        </div>\n      );\n    case 5:\n      return (\n        <div className=\"rating\">\n          <span></span>\n        </div>\n      );\n    default:\n      return (\n        <div className=\"rating-0\">\n          <span></span>\n        </div>\n      );\n  }\n};\nexport const weatherApiURL = \"https://weather.aesl.ces.uga.edu\";\nexport const allMonths = moment().localeData().monthsShort();\nexport const cropDataURL =\n  \"https://api.airtable.com/v0/appC47111lCOTaMYe/Cover%20Crops%20Data?maxRecords=300&timeZone=America_NewYork&filterByFormula=NOT(SWITCH({Cover Crop Name},'__Open Discussion Row','Ok hopefully he answers me soon.'))\";\n\n// const cropDataURL =\n// \"https://api.airtable.com/v0/appC47111lCOTaMYe/Cover%20Crops%20Data?maxRecords=300&timeZone=America_NewYork&filterByFormula=NOT(SWITCH({Zone Decision},'Exclude',''))\";\n\nexport const allGoalsURL =\n  \"https://api.airtable.com/v0/appC47111lCOTaMYe/Cover%20Crop%20Goals?maxRecords=300\";\n\nexport const greenBarExpansionPanelHeight = {\n  large: \"600px\",\n  medium: \"600px\",\n  small: \"600px\",\n};\n\nexport const trimString = (stringFull, size) => {\n  if (!isNaN(size)) {\n    return (\n      stringFull.substring(0, size) + `${stringFull.length > 25 ? \"...\" : \"\"}`\n    );\n  } else return stringFull;\n};\n\nexport const sidebarFilters = [\n  {\n    category: \"Taxonomy\",\n    data: [\n      {\n        Variable: \"Cover Crop Group\",\n        Description: \"Common name for categories of cover crops\",\n        \"Data Source\": [\"ZTL Team\"],\n        Values: \"[Legume, Grass, Brassica, Broadleaf]\",\n        Category: \"Taxonomy\",\n        \"Cover Crop Goals\": [\"rech7T61et0rrvgOc\", \"recxUYrkzT3lNknLR\"],\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select one\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Family Common Name\",\n        Description: \"Family common name\",\n        \"Data Source\": [\"ZTL Team\"],\n        \"USDA.PLANTS Term\": \"Family.Common.Name\",\n        Values:\n          \"[Grass family, Nonlegumes, Legumes, Mustard family, Aster family, Pea family, Buckwheat family, Flax family, Borage family]\",\n        Category: \"Taxonomy\",\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select one\",\n        \"Information Sheet\": true,\n      },\n    ],\n  },\n  {\n    category: \"Environmental Tolerances\",\n    data: [\n      {\n        Variable: \"Shade Tolerance\",\n        Description: \"Ability to tolerate shade relative to other species\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"USDA.PLANTS Term\": \"Shade.Tolerance\",\n        \"Team Notes\": 'Each team must define the \"low medium high\" VALUES',\n        Values:\n          \"1 star = none/intolerant, 2 = low, 3 = low-med (cutoff), 4 stars = high-med, 5 = high/tolerant\",\n        Category: \"Environmental Tolerances\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Flood Tolerance\",\n        Description: \"Ability to tolerate flood relative to other species\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"Team Notes\": 'Each team must define the \"low medium high\" VALUES',\n        Values:\n          \"1 star = none/intolerant, 2 = low, 3 = low-med (cutoff), 4 stars = high-med, 5 = high/tolerant\",\n        Category: \"Environmental Tolerances\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Heat Tolerance\",\n        Description: \"Ability to tolerate heat relative to other species\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"Team Notes\": 'Each team must define the \"low medium high\" VALUES',\n        Values:\n          \"1 star = none/intolerant, 2 = low, 3 = low-med (cutoff), 4 stars = high-med, 5 = high/tolerant\",\n        Category: \"Environmental Tolerances\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Winter Survival\",\n        Description: \"Likelihood of cover crop survival over the winter.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"Team Notes\":\n          \"Can we indicate winter kill temp for diff maturity? or comments?\",\n        Values: \"[Never, Seldom, Expected]\",\n        Category: \"Environmental Tolerances\",\n        \"Cover Crop Goals\": [\"reccbLXAvA9tM3TT1\", \"recNAKTF4fwK3CONR\"],\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select many\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Salinity Tolerance\",\n        Description:\n          \"Ability to tolerate high salinity relative to other species. Scale 1-5\",\n        \"Data Source\": [\"USDA PLANTS\"],\n        \"USDA.PLANTS Term\": \"Salinity.Tolerance\",\n        \"Team Notes\":\n          \"[Low = tolerant to 2.1-4.0 dS/m; Medium = tolerant to 4.1-8.0 dS/m; High = tolerant to greater than 8.0 dS/m.]\",\n        Values:\n          \"1 star = none/intolerant, 2 = low, 3 = low-med (cutoff), 4 stars = high-med, 5 = high/tolerant\",\n        Category: \"Environmental Tolerances\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Low Fertility Tolerance\",\n        Description:\n          \"Ability to tolerate poor fertility in general (an amalgamation of low pH soils and/or below-optimum soil tests for N, P, and/or K, sandy soil)\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"USDA.PLANTS Term\": \"Fertiility Requirement\",\n        \"Team Notes\": 'Each team must define the \"low medium high\" VALUES',\n        Values:\n          \"1 star = none/intolerant, 2 = low, 3 = low-med (cutoff), 4 stars = high-med, 5 = high/tolerant\",\n        Category: \"Environmental Tolerances\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Drought Tolerance\",\n        Description: \"Ability to tolerate drought relative to other species\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"USDA.PLANTS Term\": \"Droght Tolerance\",\n        \"Team Notes\": 'Each team must define the \"low medium high\" VALUES',\n        Values:\n          \"1 star = none/intolerant, 2 = low, 3 = low-med (cutoff), 4 stars = high-med, 5 = high/tolerant\",\n        Category: \"Environmental Tolerances\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n    ],\n  },\n  {\n    category: \"Basic Agronomics\",\n    data: [\n      {\n        Variable: \"Shape & Orientation\",\n        Description: \"Growth form or predominant shape of an individual plant.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Values: \"[Erect, Semi-Erect, Climbing, Prostrate, Columnar, Decumbent]\",\n        Category: \"Basic Agronomics\",\n        \"Cover Crop Goals\": [\n          \"recRlVowCsSXpRXN2\",\n          \"reccbLXAvA9tM3TT1\",\n          \"recNAKTF4fwK3CONR\",\n          \"recJcA1wm7sdCHzQl\",\n        ],\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select many\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Hessian Fly-Free Date\",\n        Description:\n          \"Hessian Fly-Free Date, after which wheat and other plants can be planted to avoid cereal rust.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Values: \"Yes, No\",\n        Category: \"Basic Agronomics\",\n        \"Filter Field\": true,\n        Type: \"boolean\",\n        \"Units/Details\": \"check box\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Dry Matter Min (lbs/A/y)\",\n        Description:\n          \"Amount of dry biomass the cover crop produces in a year, lbs/A.\\n\\nImpacts the following cover cropping goals: improve soil organic matter, lasting residue, prevent soil eriosion, promote water quality, nitrogen fixation, nitrogen scavanging, and weed suppression.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"Team Notes\":\n          'Each team must define the \"low medium high\" VALUES. Proposed Baseline: [0<Low<1000, 1000<Med<3000, High>3000]',\n        Category: \"Basic Agronomics\",\n        \"Cover Crop Goals\": [\n          \"recVx4qMQys9OMoZX\",\n          \"recW6SQB6uiWF7hsX\",\n          \"recRlVowCsSXpRXN2\",\n          \"reccbLXAvA9tM3TT1\",\n          \"recNAKTF4fwK3CONR\",\n          \"rech7T61et0rrvgOc\",\n          \"recxUYrkzT3lNknLR\",\n          \"recJcA1wm7sdCHzQl\",\n          \"recIBqnwWp5SEwyuI\",\n        ],\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"lbs/Acre/year\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Duration\",\n        Description:\n          \"Some plants have different Durations depending on environment or location, so a plant can have more than one value. Multiple values are reported in order of increasing longevity in nature.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"USDA.PLANTS Term\": \"Duration\",\n        Values: \"[Annual, Perennial, Short-lived Perennial, Biennial]\",\n        Category: \"Basic Agronomics\",\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select many\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Active Growth Period\",\n        Description: \"Season in which plants have active growth.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"USDA.PLANTS Term\": \"Active Growth Period\",\n        Values: \"[Spring, Summer, Winter, Fall]\",\n        Category: \"Basic Agronomics\",\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select many\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Nitrogen Accumulation Min, Legumes (lbs/A/y)\",\n        Description:\n          \"Amount of N a legume species contains, lbs/A. This is combined nitrogen fixed plus nitrogen taken up from the soil.\\n\\nImpacts the following cover cropping goals: nitrogen source\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"Team Notes\":\n          'Each team must define the \"low medium high\" VALUES. Proposed Baseline: [0<Low<50; 50<Med<100; High>100]',\n        Category: \"Basic Agronomics\",\n        \"Cover Crop Goals\": [\"rech7T61et0rrvgOc\"],\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"lbs/Acre/year\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"C to N Ratio\",\n        Description:\n          \"C:N ratio is the percentage of organic carbon divided by the percentage of total nitrogen in organic material. Note that the C:N ratio of grasses (warm season annuals) is lower at the vegetative state then at the flowering state.\\n\\n1 to 5 rating. General guide for cover crops at flowering, but there are exceptions:\\n1 - Legumes\\n2 - Succulent broadleafs\\n3 - Woodier broadleafs (sunflowers, annual rye grass)\\n4 - Cereal grains\\n5 - Warm season annuals\\n\\n\\nImpacts following goals: Improve soil organic matter, lasting residue, prevent soil erosion, weed suppression\",\n        \"Data Source\": [\"USDA PLANTS\"],\n        \"USDA.PLANTS Term\": \"CN Ratio\",\n        \"Team Notes\":\n          \"Team must define the values, range, and options. Proposed Baseline: [0<Low<12; 12<Medium<20; High>20]\",\n        Values:\n          \"1 - Legumes, 2 - Succulent broadleafs, 3 - Woodier broadleafs (sunflowers, annual rye grass), 4 - Cereal grains, 5 - Warm season annuals\",\n        Category: \"Basic Agronomics\",\n        \"Cover Crop Goals\": [\n          \"recVx4qMQys9OMoZX\",\n          \"recW6SQB6uiWF7hsX\",\n          \"reccbLXAvA9tM3TT1\",\n          \"recNAKTF4fwK3CONR\",\n          \"recJcA1wm7sdCHzQl\",\n          \"recIBqnwWp5SEwyuI\",\n        ],\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Zone Use\",\n        Description:\n          \"Is it commonly used in the zone or only beginning to gain adoption?\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"USDA.PLANTS Term\": \"????\",\n        Values: \"[Common, Emerging]\",\n        Category: \"Basic Agronomics\",\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select one\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Dry Matter Max (lbs/A/y)\",\n        Description:\n          \"Amount of dry biomass the cover crop produces in a year, lbs/A.\\n\\nImpacts the following cover cropping goals: improve soil organic matter, lasting residue, prevent soil eriosion, promote water quality, nitrogen fixation, nitrogen scavanging, and weed suppression.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"Team Notes\":\n          'Each team must define the \"low medium high\" VALUES. Proposed Baseline: [0<Low<1000, 1000<Med<3000, High>3000]',\n        Category: \"Basic Agronomics\",\n        \"Cover Crop Goals\": [\n          \"recVx4qMQys9OMoZX\",\n          \"recW6SQB6uiWF7hsX\",\n          \"recRlVowCsSXpRXN2\",\n          \"reccbLXAvA9tM3TT1\",\n          \"recNAKTF4fwK3CONR\",\n          \"rech7T61et0rrvgOc\",\n          \"recxUYrkzT3lNknLR\",\n          \"recJcA1wm7sdCHzQl\",\n          \"recIBqnwWp5SEwyuI\",\n        ],\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"lbs/Acre/year\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Nitrogen Accumulation Max, Legumes (lbs/A/y)\",\n        Description:\n          \"Amount of N a legume species contains, lbs/A. This is combined nitrogen fixed plus nitrogen taken up from the soil.\\n\\nImpacts the following cover cropping goals: nitrogen source\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        \"Team Notes\":\n          'Each team must define the \"low medium high\" VALUES. Proposed Baseline: [0<Low<50; 50<Med<100; High>100]',\n        Category: \"Basic Agronomics\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"lbs/Acre/year\",\n        \"Information Sheet\": true,\n      },\n    ],\n  },\n  {\n    category: \"Soil Conditions\",\n    data: [\n      {\n        Variable: \"Soil Drainage\",\n        Description:\n          \"Level of soil drainage needed for acceptable cover crop growth given regular rainfall.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Values:\n          \"[Very poorly drained, Poorly drained, Somewhat poorly drained, Moderately well drained, Well drained, Excessively drained, Saturated muck, Well drained muck]\",\n        Category: \"Soil Conditions\",\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select many\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Soil Textures\",\n        Description:\n          \"Ability to establish and grow in soil with coarse, medium, and fine textured soils given regular rainfall.\",\n        \"Data Source\": [\"USDA PLANTS\"],\n        \"USDA.PLANTS Term\": \"Adapted to X Soils\",\n        Values: \"[Coarse, Medium, Fine]\",\n        Category: \"Soil Conditions\",\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select many\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Minimum Tolerant Soil pH\",\n        Description:\n          \"The minimum soil pH, of the top 12 inches of soil, within the plant’s known geographical range.\",\n        \"Data Source\": [\"USDA PLANTS\"],\n        \"USDA.PLANTS Term\": \"pH Min\",\n        Category: \"Soil Conditions\",\n        \"Filter Field\": true,\n        Type: \"float\",\n        \"Units/Details\": \"decimal (1.0)\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Maximum Tolerant Soil pH\",\n        Description:\n          \"The maximum soil pH, of the top 12 inches of soil, within the plant’s known geographical range.\",\n        \"Data Source\": [\"USDA PLANTS\"],\n        \"USDA.PLANTS Term\": \"pH Max\",\n        Category: \"Soil Conditions\",\n        \"Filter Field\": true,\n        Type: \"float\",\n        \"Units/Details\": \"decimal (1.0)\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Soil Moisture Use\",\n        Description:\n          \"Ability to use (i.e., remove) available soil moisture relative to other species.\",\n        \"Data Source\": [\"USDA PLANTS\"],\n        \"USDA.PLANTS Term\": \"Moisture Use\",\n        Values: \"[Low, Medium, High]\",\n        Category: \"Soil Conditions\",\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select one\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Flooding/Ponding Tolerance\",\n        Description: \"Cover crop survival under flooding/ponding conditions\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Values: \"[Poor, Moderate, Good]\",\n        Category: \"Soil Conditions\",\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select one\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Loosens Topsoil\",\n        Description:\n          \"Relative ability of cover crop to loosen topsoil (0 to 6 inches).\\n\\nImpacts the following cover cropping goals: reduces topsoil compaction\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Soil Conditions\",\n        \"Cover Crop Goals\": [\"recPxyjmEenzGEvZj\"],\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Supports Mycorrhizae\",\n        Description:\n          \"Relative activity of mycorrhizal fungi in the rhizosphere.\\n\\nImpacts the following goals: Increase soil aggregation, promote water quality\",\n        \"Data Source\": [\"Zone Team\"],\n        Category: \"Soil Conditions\",\n        \"Cover Crop Goals\": [\"recu78NjkZLLgegx0\", \"recNAKTF4fwK3CONR\"],\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Loosens Subsurface Soil\",\n        Description:\n          \"Relative ability of cover crop to break up subsurface soil compaction (6 to 12 inches). Including management induced compaction.\\n\\nImpacts the following cover cropping goals: reduces subsurface soil compaction\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Soil Conditions\",\n        \"Cover Crop Goals\": [\"recFKZEppkGOSk8qE\"],\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n    ],\n  },\n  {\n    category: \"Growth\",\n    data: [\n      {\n        Variable: \"Innoculant Type (Legumes Only)\",\n        Description:\n          \"Type of inoculant that needs to applied to legume seed to promote N fixation\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Values:\n          \"[none, alfalfa, berseem clover, cowpea, crimson clover, lespedeza, lima bean, pea/vetch, pea/vetch/lentil, peanut, red clover, soybean, sweetclover, white clover]\",\n        Category: \"Growth\",\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select many\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Flowering Trigger\",\n        Description:\n          \"Details about when flowering occurs, triggers for flowering\",\n        Values:\n          \"[Requires vernalization (spring), Intermediate day (11-13 hrs), Long day (>14 hrs), Based on plant size]\",\n        Category: \"Growth\",\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select many\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Early Spring Growth\",\n        Description:\n          \"Speed in the spring at which the cover crop breaks dormancy and grows. No star means that early spring growth is not applicable.\",\n        Category: \"Growth\",\n        \"Cover Crop Goals\": [\n          \"reccbLXAvA9tM3TT1\",\n          \"recNAKTF4fwK3CONR\",\n          \"rech7T61et0rrvgOc\",\n          \"recxUYrkzT3lNknLR\",\n        ],\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Root Depth\",\n        Description:\n          \"How deeply rooted is this cover crop? Consider the relative ability of the roots to go deeper the previous crop was (where residual nitrogen lies).\\n\\nImpacts the following goals: Promote water quality, reduces topsoil compaction, nitrogen scavenging\",\n        Values: \"[Shallow, Medium, Deep]\",\n        Category: \"Growth\",\n        \"Cover Crop Goals\": [\n          \"recNAKTF4fwK3CONR\",\n          \"recFKZEppkGOSk8qE\",\n          \"recPxyjmEenzGEvZj\",\n          \"recxUYrkzT3lNknLR\",\n        ],\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select one\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Establishes Quickly\",\n        Description:\n          \"Speed at which the cover crop establishes once planted.\\n1 - slow to establish\\n5 - quick to establish\",\n        Category: \"Growth\",\n        \"Cover Crop Goals\": [\n          \"recRlVowCsSXpRXN2\",\n          \"recNAKTF4fwK3CONR\",\n          \"recxUYrkzT3lNknLR\",\n          \"recDewfUdf5fLOAVC\",\n          \"recJcA1wm7sdCHzQl\",\n        ],\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Root Architecture\",\n        Description:\n          \"What is the primary root structure: tap or fibrous?\\n\\nImpacts the following goals:  Increase soil aggregation, prevent soil erosion, proote water quality, reduces subsurface soil compaction, reduces topsoil compaction\",\n        Values: \"[Tap, Fibrous]\",\n        Category: \"Growth\",\n        \"Cover Crop Goals\": [\n          \"recu78NjkZLLgegx0\",\n          \"recRlVowCsSXpRXN2\",\n          \"reccbLXAvA9tM3TT1\",\n          \"recNAKTF4fwK3CONR\",\n          \"recFKZEppkGOSk8qE\",\n          \"recPxyjmEenzGEvZj\",\n        ],\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select many\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Growing Window\",\n        Description:\n          \"Relative length of time that is suitable for growing and terminating a cover crop. For example, cover crops with a very short growing window may be suitable for growing and terminating during a very short period (e.g., 6-8 weeks) between cash crops.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Values: \"[Very Short, Short, Medium, Long, Very Long]\",\n        Category: \"Growth\",\n        \"Cover Crop Goals\": [\"recNAKTF4fwK3CONR\"],\n        \"Filter Field\": true,\n        Type: \"string\",\n        \"Units/Details\": \"select one\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Ease of Establishment\",\n        Description:\n          \"Degree of difficulty in getting cover crop established.\\n1 - difficult to establish\\n5 - very easy to establish\",\n        Category: \"Growth\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n    ],\n  },\n  {\n    category: \"Planting\",\n    data: [\n      {\n        Variable: \"Min Germination Temp (F)\",\n        Description:\n          \"Minimum temperature required for cover crop seed to germinate within 5 days.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Planting\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"F\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Seeds per Pound\",\n        Description: \"Average number of cover crop seeds in a pound of seed\",\n        \"Data Source\": [\"USDA PLANTS\"],\n        \"USDA.PLANTS Term\": \"Seeds.per.Pound\",\n        Category: \"Planting\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rounded to the nearest tens\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Drilled Depth Min\",\n        Description: \"Depth to plant seed in fractions of an inch\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Planting\",\n        \"Filter Field\": true,\n        Type: \"float\",\n        \"Units/Details\": \"inches, down to quarter, half, and eigths\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Broadcast Frost Seeding\",\n        Description: \"Cover crop can be seeded when ground is frozen.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Values: \"Yes, No\",\n        Category: \"Planting\",\n        \"Filter Field\": true,\n        Type: \"boolean\",\n        \"Units/Details\": \"checkbox\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Seed Price per Pound\",\n        Description:\n          \"Relative cost of seed per pound. One star is least expensive, 3 stars is most expensive. Rating is relative.\",\n        \"Data Source\": [\"Green Cover Crop Seed\"],\n        \"Team Notes\":\n          \"Each team should recommend a data source for pricing, e.g. green cover crop seed\",\n        Category: \"Planting\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-3\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Can Aerial Seed?\",\n        Description: \"Can aerial seeding methods be used for this crop?\",\n        \"Data Source\": [\"Paul Salon\"],\n        Values: \"Yes, No\",\n        Category: \"Planting\",\n        \"Filter Field\": true,\n        Type: \"boolean\",\n        \"Units/Details\": \"checkbox\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Base Seeding Rate Min (lbs/A)\",\n        Description:\n          \"The base seeding rate (PLS) represents optimal planting time, optimal termination time, optimal planting method (drilled/cultivate and cultipack), conventional tillage method, no planting green, and no interseeding in a monoculture context. Lower limit (min) is approx 30% ground coverage.\",\n        \"Data Source\": [\"Zone Team\"],\n        Category: \"Planting\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"lbs/Acre/year\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Base Seeding Rate Max (lbs/A)\",\n        Description:\n          \"The base seeding rate (PLS)  represents optimal planting time, optimal termination time, optimal planting method (drilled/cultivate and cultipack), conventional tillage method, no planting green, and no interseeding in a monoculture context. Upper limit (Max) is for intensive activity such as weed suppression or forage.\",\n        \"Data Source\": [\"Zone Team\"],\n        Category: \"Planting\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"lbs/Acre/year\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Drilled Depth Max\",\n        Description: \"Depth to plant seed in fractions of an inch\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Planting\",\n        \"Filter Field\": true,\n        Type: \"float\",\n        \"Units/Details\": \"inches, down to quarter, half, and eigths\",\n        \"Information Sheet\": true,\n      },\n    ],\n  },\n  {\n    category: \"Termination\",\n    data: [\n      {\n        Variable: \"Tillage Termination at Vegetative\",\n        Description:\n          \"Likelihood that tillage (i.e. destructive mechanical operations that disturb the soil, as with disking or rotovating) will successfully terminate the cover crop while it is in the vegetative stage. The expert group premises that all cover crops can be terminated with tillage, but that 1 represents hard to terminate with tillage and requires an aggressive technique, where as 5 is easy to terminate with tillage and requires the least aggressive technique. The techniques are categoriezed as follows.\\n\\n5-light disk\\n4-heavy disk\\n3-chisel plow\\n2-rototill\\n1-moldboard\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Values:\n          \"5-light disk 4-heavy disk 3-chisel plow 2-rototill 1-moldboard\",\n        Category: \"Termination\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Planting Green\",\n        Description:\n          \"Planting cash crop then immediately terminating cover crop (prior to cash crop emergence). Note: any crop can be planted green with the correct equipment; this column represents general considerations.\",\n        \"Data Source\": [\"Paul Salon\"],\n        Values: \"Yes, No\",\n        Category: \"Termination\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Freezing Termination at Flowering\",\n        Description:\n          \"Likelihood that conditions below 32 degrees F will successfully terminate the cover crop while it is in the flowering stage.\",\n        Values:\n          \"5. Likely to terminate in mild freeze 1. Requires a very significant freeze to terminate\",\n        Category: \"Termination\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Chemical Termination at Vegetative\",\n        Description:\n          \"Likelihood that herbicide application will successfully terminate the cover crop while it is in the vegetative stage.\",\n        Category: \"Termination\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Tillage Termination at Flowering\",\n        Description:\n          \"Likelihood that tillage (i.e. destructive mechanical operations that disturb the soil, as with disking or rotovating) will successfully terminate the cover crop while it is in the flowering stage. The expert group premises that all cover crops can be terminated with tillage, but that 1 represents hard to terminate with tillage and requires an aggressive technique, where as 5 is easy to terminate with tillage and requires the least aggressive technique. The techniques are categoriezed as follows.\\n\\n5-light disk\\n4-heavy disk\\n3-chisel plow\\n2-rototill\\n1-moldboard\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Values:\n          \"5-light disk 4-heavy disk 3-chisel plow 2-rototill 1-moldboard\",\n        Category: \"Termination\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Freezing Termination at Vegetative\",\n        Description:\n          \"Likelihood that conditions below 32 degrees F will successfully terminate the cover crop while it is in the vegetative stage.\",\n        Values:\n          \"5 likely to terminate in mild freeze  1 requires a very significant freeze to terminate\",\n        Category: \"Termination\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Chemical Termination at Flowering\",\n        Description:\n          \"Likelihood that herbicide application will successfully terminate the cover crop while it is in the flowering stage.\",\n        Category: \"Termination\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Mow Termination at Flowering\",\n        Description:\n          \"Likelihood that mowing (i.e. destructive mechanical operations that do not disturb the soil) will successfully terminate the cover crop while it is in the flowering stage.\",\n        Category: \"Termination\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Roller Crimp Termination at Flowering\",\n        Description:\n          \"Likelihood that roller-crimping will successfully terminate the cover crop while it is in the flowering stage. Termination is most successful at higher crop densities (3+ tons of drymatter per acre).\\n\\nRoller crimping is usually used in tandem with chemical termination outside of organic systems.\",\n        Category: \"Termination\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n    ],\n  },\n  {\n    category: \"Grazers & Pollinators\",\n    data: [\n      {\n        Variable: \"Pollinator Habitat\",\n        Description:\n          \"Extent to which the cover crop can serve as habitat for pollinators.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Grazers & Pollinators\",\n        \"Cover Crop Goals\": [\"recdbvSJ6Q8iT2haq\"],\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Pollinator Food\",\n        Description:\n          \"Extent to which the cover crop provides food (i.e. leaves, nectar, pollen) for pollinators.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Grazers & Pollinators\",\n        \"Cover Crop Goals\": [\"recdbvSJ6Q8iT2haq\"],\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n    ],\n  },\n  {\n    category: \"Weeds\",\n    data: [\n      {\n        Variable: \"Volunteer Establishment\",\n        Description:\n          \"Risk of previous cover crop volunteering in current cash crop due to management (i.e. the previous cover crop setting seed that became part of the soil weed seedbank). 1=rarely volunteers, 5=frequently volunteers\\nShorter-term issue, relies more on management. May be positive if you want it to re-seed. Impact depends on crop rotation.\",\n        Category: \"Weeds\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Persistence\",\n        Description:\n          'Indicator of likelihood that the cover crop seed, once planted, will sit in the soil for an extended time then germinate at an inopportune moment (e.g., during cash crop growth). 1= rarely has hard seed, 5=hard seed is a frequent concern. \\n\"Hardseedness\" in MW tool \"Risk is in the CC seedbag\", long-term issue.',\n        Category: \"Weeds\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n    ],\n  },\n  {\n    category: \"Disease & Non-Weed Pests\",\n    data: [\n      {\n        Variable: \"Discourages Nematodes\",\n        Description:\n          \"Ability of a cover crop to decrease nematode populations (e.g., trap crop). 1=poor choice for discouraging nematodes, 5=excellent choice\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Disease & Non-Weed Pests\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Promotes Nematodes\",\n        Description:\n          \"Ability of a cover crop to increase nematode populations. \\n1=does not support nematode populations, 5=excellent for increasing nematode populations\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Disease & Non-Weed Pests\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Discourages Pest Insects\",\n        Description:\n          \"Ability of a cover crop to decrease insect pest populations. 1=poor choice for discouraging insect pests, 5=excellent choice\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Disease & Non-Weed Pests\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Promotes Pest Insects\",\n        Description:\n          \"Ability of a cover crop to increase insect pest populations. 1=does not promote insect populations, 5=frequently promotes pest insects\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Disease & Non-Weed Pests\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Suppresses Cash Crop Disease\",\n        Description:\n          \"Relative ranking of cover crop's impact in suppressing disease in the following cash crop. \\n1 - does not suppress disease in following cash crop.\\n5 - very likely to suppress disease in following cash crop.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Disease & Non-Weed Pests\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n      {\n        Variable: \"Promotes Cash Crop Disease\",\n        Description:\n          \"Relative ranking of cover crop's impact on promoting disease in the following cash crop. \\n1 - does not promote disease in following cash crop.\\n5 - very likely to promote disease in following cash crop.\",\n        \"Data Source\": [\"MCCC Species Tool\"],\n        Category: \"Disease & Non-Weed Pests\",\n        \"Filter Field\": true,\n        Type: \"integer\",\n        \"Units/Details\": \"rating 1-5\",\n        \"Information Sheet\": true,\n      },\n    ],\n  },\n];\n\nexport const downloadAllPDF = (selectedCropNames) => {\n  let zip = new JSZip();\n  let count = 0;\n  var zipFilename = \"Information-Sheets.zip\";\n  selectedCropNames.forEach((val) => {\n    let filename = val.name + \".pdf\";\n    JSZipUtils.getBinaryContent(val.pdf, (err, data) => {\n      if (err) {\n        throw err; // or handle the error\n      }\n      zip.file(filename, data, { binary: true });\n      count++;\n      if (count === selectedCropNames.length) {\n        zip.generateAsync({ type: \"blob\" }).then(function (content) {\n          saveAs.saveAs(content, zipFilename);\n        });\n      }\n    });\n  });\n};\nexport const downloadAllCSV = (selectedCropNames) => {\n  let zip = new JSZip();\n  let count = 0;\n  var zipFilename = \"Information-Sheets-CSV.zip\";\n  selectedCropNames.forEach((val) => {\n    let filename = val.name + \".csv\";\n    JSZipUtils.getBinaryContent(val.csv, (err, data) => {\n      if (err) {\n        throw err; // or handle the error\n      }\n      zip.file(filename, data, { binary: true });\n      count++;\n      if (count === selectedCropNames.length) {\n        zip.generateAsync({ type: \"blob\" }).then(function (content) {\n          saveAs.saveAs(content, zipFilename);\n        });\n      }\n    });\n  });\n};\n\nexport const RenderSeedPriceIcons = ({ val }) => {\n  switch (parseInt(val)) {\n    case 1:\n      return (\n        <Fragment>\n          <span style={{ color: \"#35999b\" }}>\n            <MonetizationOn />\n          </span>\n          <span style={{ color: \"#35999b\", opacity: 0.2 }}>\n            <MonetizationOn />\n          </span>\n          <span style={{ color: \"#35999b\", opacity: 0.2 }}>\n            <MonetizationOn />\n          </span>\n        </Fragment>\n      );\n    case 2:\n      return (\n        <Fragment>\n          <span style={{ color: \"#35999b\" }}>\n            <MonetizationOn />\n          </span>\n          <span style={{ color: \"#35999b\" }}>\n            <MonetizationOn />\n          </span>\n          <span style={{ color: \"#35999b\", opacity: 0.2 }}>\n            <MonetizationOn />\n          </span>\n        </Fragment>\n      );\n    case 3:\n      return (\n        <Fragment>\n          <span style={{ color: \"#35999b\" }}>\n            <MonetizationOn />\n          </span>\n          <span style={{ color: \"#35999b\" }}>\n            <MonetizationOn />\n          </span>\n          <span style={{ color: \"#35999b\" }}>\n            <MonetizationOn />\n          </span>\n        </Fragment>\n      );\n    default:\n      break;\n  }\n};\n\nexport const CropImage = ({\n  present = true,\n  src = \"\",\n  alt = \"\",\n  view = \"\",\n  className = \"\",\n  onClick = () => {},\n}) => {\n  const placeholder = \"//placehold.it/100x100\";\n  let imageStyle = {};\n\n  switch (view) {\n    case \"calendar\":\n      imageStyle = {\n        width: \"50px\",\n        height: \"50px\",\n        maxWidth: \"50px\",\n        maxHeight: \"50px\",\n      };\n      break;\n    case \"information-sheet\":\n      imageStyle = {\n        // width: \"255px\",\n        height: \"250px\",\n      };\n      break;\n    case \"photo-grid\":\n      imageStyle = {\n        width: \"200px\",\n        height: \"200px\",\n      };\n      break;\n    default:\n      imageStyle = {\n        width: \"100px\",\n        height: \"100px\",\n        maxWidth: \"200px\",\n        // maxHeight: \"100px\",\n      };\n  }\n\n  return (\n    <img\n      className={className ? className : `image-for-${alt}`}\n      onClick={onClick}\n      src={present ? src : placeholder}\n      alt={present ? alt : \"Placeholder\"}\n      style={imageStyle}\n    />\n  );\n};\nexport const ucFirst = (text = \"\") => {\n  return text\n    .toLowerCase()\n    .split(\" \")\n    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n    .join(\" \");\n};\n\nexport const flipCoverCropName = (cropName = \"\") => {\n  if (cropName.toLowerCase() === \"Sorghum-sudangrass\".toLowerCase()) {\n    return \"Sudex\";\n  } else {\n    let cropNames = cropName.split(\",\");\n\n    if (cropNames.length > 1) {\n      return `${cropNames[1]} ${cropNames[0]}`;\n    } else {\n      return cropName;\n    }\n  }\n};\n\nexport const getActiveCropMonths = (crop = {}) => {\n  let activeMonths = [];\n  if (crop[\"Active Growth Period\"].includes(\"Winter\")) {\n    activeMonths.push(\"Dec\");\n    activeMonths.push(\"Jan\");\n    activeMonths.push(\"Feb\");\n  }\n  if (crop[\"Active Growth Period\"].includes(\"Summer\")) {\n    activeMonths.push(\"Jun\");\n    activeMonths.push(\"Jul\");\n    activeMonths.push(\"Aug\");\n  }\n\n  if (crop[\"Active Growth Period\"].includes(\"Fall\")) {\n    activeMonths.push(\"Sep\");\n    activeMonths.push(\"Oct\");\n    activeMonths.push(\"Nov\");\n  }\n\n  if (crop[\"Active Growth Period\"].includes(\"Spring\")) {\n    activeMonths.push(\"Mar\");\n    activeMonths.push(\"Apr\");\n    activeMonths.push(\"May\");\n  }\n  return activeMonths;\n};\n\nexport const RestartPrompt = ({\n  open = false,\n  selectedCrops = [],\n  setOpen = () => {},\n  onAccept = () => {},\n}) => {\n  return (\n    <Dialog disableBackdropClick disableEscapeKeyDown open={open}>\n      <DialogContent dividers>\n        <Typography variant=\"body1\">\n          {selectedCrops.length > 0\n            ? `Restarting will remove all cover crops added to your list. Are you\n        sure you want to restart?`\n            : `Are you sure you want to restart?`}\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          autoFocus\n          onClick={() => {\n            setOpen(false);\n            onAccept(false);\n          }}\n          color=\"secondary\"\n        >\n          No\n        </Button>\n        <Button\n          onClick={() => {\n            onAccept(true);\n          }}\n          color=\"secondary\"\n        >\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport const sudoButtonStyle = {\n  fontWeight: \"500\",\n  lineHeight: \"1.75\",\n  letterSpacing: \"0.02857em\",\n  textTransform: \"uppercase\",\n  fontSize: \"0.875rem\",\n};\n\nexport const sudoButtonStyleWithPadding = {\n  padding: \"6px 8px\",\n  fontWeight: \"500\",\n  lineHeight: \"1.75\",\n  letterSpacing: \"0.02857em\",\n  textTransform: \"uppercase\",\n  fontSize: \"0.875rem\",\n};\n","/*\n  This file contains the CropCalendarViewComponent  \n  The CropCalendarViewComponent shows the crops in calendar format\n*/\n\nimport { Tooltip, Typography } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React, { Fragment, useContext } from \"react\";\nimport { allMonths, getActiveCropMonths } from \"../../shared/constants\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/cropSelectorCalendarView.scss\";\n\nconst CropSelectorCalendarView = ({ from = \"calendar\", data = [] }) => {\n  const {state} = useContext(Context);\n  const cashCropStartDate =\n    state.cashCropData.dateRange.startDate === \"\"\n      ? null\n      : moment(state.cashCropData.dateRange.startDate).toISOString();\n  const cashCropEndDate =\n    state.cashCropData.dateRange.endDate === \"\"\n      ? null\n      : moment(state.cashCropData.dateRange.endDate).toISOString();\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const isThisCashCropMonth = (month = \"January\") => {\n    if (cashCropStartDate === null || cashCropEndDate === null) {\n      return false;\n    } else {\n      var result = new Set();\n      console.log(\"End\", cashCropEndDate);\n      console.log(\"Start\", cashCropStartDate);\n      let start = moment(cashCropStartDate);\n      let end = moment(cashCropEndDate);\n\n      while (start.isBefore(end)) {\n        result.add(start.format(\"MMMM\"));\n\n        start.add(moment.duration(1, \"month\"));\n      }\n\n      if (result.has(month)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n  return from === \"calendar\" ? (\n    <PaintGrowthChart\n      data={data}\n      from=\"calendar\"\n      months={months}\n      isThisCashCropMonth={isThisCashCropMonth}\n    />\n  ) : from === \"listView\" ? (\n    <>\n      <PaintGrowthChart\n        data={data}\n        from=\"listView\"\n        months={months}\n        isThisCashCropMonth={isThisCashCropMonth}\n      />\n\n      <table>\n        <tbody>\n          <tr>\n            {state.selectedGoals.length === 0\n              ? allMonths.map((month, index) => <td key={index}>{month}</td>)\n              : allMonths.map((month, index) =>\n                  month === \"Jan\" || month === \"Dec\" ? (\n                    <td\n                      key={index}\n                      style={index === 11 ? { textAlign: \"right\" } : {}}\n                    >\n                      <Typography variant=\"body1\">{month}</Typography>\n                    </td>\n                  ) : (\n                    <td key={index}></td>\n                  )\n                )}\n          </tr>\n        </tbody>\n      </table>\n    </>\n  ) : (\n    months.map((month, index) => {\n      let earlyStr = `${month}, Early`;\n      let midStr = `${month}, Mid`;\n\n      return (\n        <td\n          key={index}\n          className={\n            isThisCashCropMonth(month)\n              ? `cashCropMonth listView p-0 growthTd`\n              : `p-0 growthTd`\n          }\n          style={\n            getActiveCropMonths(data.fields).includes(\"Jan\")\n              ? {\n                  borderLeft: \"0px solid white\",\n                  borderRight: \"2px solid white\",\n                }\n              : getActiveCropMonths(data.fields).includes(\"Dec\")\n              ? {\n                  borderLeft: \"2px solid white\",\n                  borderRight: \"0px solid white\",\n                }\n              : getActiveCropMonths(data.fields).includes(month.substring(0, 3))\n              ? {\n                  borderLeft: \"2px solid white\",\n                  borderRight: \"2px solid white\",\n                }\n              : {\n                  borderLeft: \"2px solid white\",\n                  borderRight: \"2px solid white\",\n                }\n          }\n        >\n          <div className={`d-flex flex-row w-100 growthCellsWrapper`}>\n            {data.fields[earlyStr] ? (\n              <Tooltip\n                arrow\n                title={\n                  <Fragment>\n                    <Typography color=\"secondary\">\n                      {month.toUpperCase()}, EARLY\n                    </Typography>\n                    {data.fields[earlyStr].map((v, i) => (\n                      <Typography variant=\"body1\" key={i} gutterBottom>\n                        {v}\n                      </Typography>\n                    ))}\n                  </Fragment>\n                }\n              >\n                <div\n                  className={`${data.fields[\n                    earlyStr\n                  ].toString()} w-50 growthCell-20`}\n                ></div>\n              </Tooltip>\n            ) : (\n              <Tooltip\n                arrow\n                title={\n                  <Typography color=\"secondary\">\n                    {month.toUpperCase()}, EARLY\n                  </Typography>\n                }\n              >\n                <div className=\"w-50 basic growthCell-20\"></div>\n              </Tooltip>\n            )}\n            {data.fields[midStr] ? (\n              <Tooltip\n                arrow\n                title={\n                  <Fragment>\n                    <Typography color=\"secondary\">\n                      {month.toUpperCase()}, MID\n                    </Typography>\n                    {data.fields[midStr].map((v, i) => (\n                      <Typography variant=\"body1\" key={i} gutterBottom>\n                        {v}\n                      </Typography>\n                    ))}\n                  </Fragment>\n                }\n              >\n                <div\n                  className={`${data.fields[\n                    midStr\n                  ].toString()} w-50 growthCell-20`}\n                ></div>\n              </Tooltip>\n            ) : (\n              <Tooltip\n                arrow\n                title={\n                  <Fragment>\n                    <Typography color=\"secondary\">\n                      {month.toUpperCase()}, MID\n                    </Typography>\n                  </Fragment>\n                }\n              >\n                <div className=\"w-50 basic growthCell-20\"></div>\n              </Tooltip>\n            )}\n          </div>\n        </td>\n      );\n    })\n  );\n};\n\nexport default CropSelectorCalendarView;\n\nconst PaintGrowthChart = ({\n  size = \"30\",\n  from = \"calendar\",\n  months = [],\n  data = [],\n  isThisCashCropMonth = () => {},\n}) => {\n  if (from === \"listView\") {\n    return (\n      <table className=\"w-100\">\n        <tbody>\n          <tr>\n            {months.map((month, index) => {\n              let earlyStr = `${month}, Early`;\n              let midStr = `${month}, Mid`;\n\n              return (\n                <td\n                  key={index}\n                  className={\n                    isThisCashCropMonth(month)\n                      ? `cashCropMonth listView p-0 growthTd`\n                      : `p-0 growthTd`\n                  }\n                >\n                  <div className={`d-flex flex-row w-100 growthCellsWrapper`}>\n                    {data.fields[earlyStr] ? (\n                      <Tooltip\n                        arrow\n                        title={\n                          <Fragment>\n                            <Typography color=\"secondary\">\n                              {month.toUpperCase()}, EARLY\n                            </Typography>\n                            {data.fields[earlyStr].map((v, i) => (\n                              <Typography variant=\"body1\" key={i} gutterBottom>\n                                {v}\n                              </Typography>\n                            ))}\n                          </Fragment>\n                        }\n                      >\n                        <div\n                          className={`${data.fields[\n                            earlyStr\n                          ].toString()} w-50 growthCell-20`}\n                        ></div>\n                      </Tooltip>\n                    ) : (\n                      <Tooltip\n                        arrow\n                        title={\n                          <Typography color=\"secondary\">\n                            {month.toUpperCase()}, EARLY\n                          </Typography>\n                        }\n                      >\n                        <div className=\"w-50 basic growthCell-20\"></div>\n                      </Tooltip>\n                    )}\n                    {data.fields[midStr] ? (\n                      <Tooltip\n                        arrow\n                        title={\n                          <Fragment>\n                            <Typography color=\"secondary\">\n                              {month.toUpperCase()}, MID\n                            </Typography>\n                            {data.fields[midStr].map((v, i) => (\n                              <Typography variant=\"body1\" key={i} gutterBottom>\n                                {v}\n                              </Typography>\n                            ))}\n                          </Fragment>\n                        }\n                      >\n                        <div\n                          className={`${data.fields[\n                            midStr\n                          ].toString()} w-50 growthCell-20`}\n                        ></div>\n                      </Tooltip>\n                    ) : (\n                      <Tooltip\n                        arrow\n                        title={\n                          <Fragment>\n                            <Typography color=\"secondary\">\n                              {month.toUpperCase()}, MID\n                            </Typography>\n                          </Fragment>\n                        }\n                      >\n                        <div className=\"w-50 basic growthCell-20\"></div>\n                      </Tooltip>\n                    )}\n                  </div>\n                </td>\n              );\n            })}\n          </tr>\n        </tbody>\n      </table>\n    );\n  } else if (from === \"calendar\") {\n    return (\n      <table className=\"w-100\">\n        <tbody>\n          <tr>\n            {months.map((month, index) => {\n              let earlyStr = `${month}, Early`;\n              let midStr = `${month}, Mid`;\n\n              return (\n                <td\n                  key={index}\n                  className={\n                    isThisCashCropMonth(month)\n                      ? `cashCropMonth p-0 growthTd`\n                      : `p-0 growthTd`\n                  }\n                >\n                  <div className={`d-flex flex-row w-100 growthCellsWrapper`}>\n                    {data.fields[earlyStr] ? (\n                      <Tooltip\n                        arrow\n                        title={\n                          <Fragment>\n                            <Typography color=\"secondary\">\n                              {month.toUpperCase()}, EARLY\n                            </Typography>\n                            {data.fields[earlyStr].map((v, i) => (\n                              <Typography variant=\"body1\" key={i} gutterBottom>\n                                {v}\n                              </Typography>\n                            ))}\n                          </Fragment>\n                        }\n                      >\n                        <div\n                          className={`${data.fields[\n                            earlyStr\n                          ].toString()} w-50 growthCell-30`}\n                        ></div>\n                      </Tooltip>\n                    ) : (\n                      <Tooltip\n                        arrow\n                        title={\n                          <Fragment>\n                            <Typography color=\"secondary\">\n                              {month.toUpperCase()}, EARLY\n                            </Typography>\n                          </Fragment>\n                        }\n                      >\n                        <div className=\"w-50 basic growthCell-30\"></div>\n                      </Tooltip>\n                    )}\n                    {data.fields[midStr] ? (\n                      <Tooltip\n                        arrow\n                        title={\n                          <Fragment>\n                            <Typography color=\"secondary\">\n                              {month.toUpperCase()}, MID\n                            </Typography>\n                            {data.fields[midStr].map((v, i) => (\n                              <Typography variant=\"body1\" key={i} gutterBottom>\n                                {v}\n                              </Typography>\n                            ))}\n                          </Fragment>\n                        }\n                      >\n                        <div\n                          className={`${data.fields[\n                            midStr\n                          ].toString()} w-50 growthCell-30`}\n                        ></div>\n                      </Tooltip>\n                    ) : (\n                      <Tooltip\n                        arrow\n                        title={\n                          <Fragment>\n                            <Typography color=\"secondary\">\n                              {month.toUpperCase()}, MID\n                            </Typography>\n                          </Fragment>\n                        }\n                      >\n                        <div className=\"w-50 basic growthCell-30\"></div>\n                      </Tooltip>\n                    )}\n                  </div>\n                </td>\n              );\n            })}\n          </tr>\n        </tbody>\n      </table>\n    );\n  } else {\n    return \"\";\n  }\n};\n","/*\n  Contains photo component used to view crop photo\n  styled using ../../styles/photoComponent.scss\n*/\n\nimport { Typography } from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport \"../../../node_modules/luminous-lightbox/dist/luminous-basic.css\";\nimport { ucFirst } from \"../../shared/constants\";\nimport \"../../styles/photoComponent.scss\";\n\nconst PhotoComponent = ({\n  imageData = {\n    Directory: \"\",\n    Notes: null,\n    \"Key Thumbnail\": \"\",\n    \"Cover Crop\": \"\",\n  },\n}) => {\n  const imagesApiUrl = imageData\n    ? `//covercrop.tools/files.php?dir=${imageData.Directory}`\n    : null;\n  const [imageList, setImageList] = useState([]);\n\n  useEffect(() => {\n    const getImages = async () => {\n      return await Axios({\n        url: imagesApiUrl,\n        method: \"get\",\n      });\n    };\n\n    let imagePromise = getImages();\n    imagePromise\n      .then((response) => {\n        if (response.data.result === \"success\") {\n          if (response.data.data.length === 0) {\n            setImageList([]);\n          }\n          setImageList(response.data.data);\n        }\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }, [imagesApiUrl]);\n\n  return imageData !== null && imageList.length !== 0 ? (\n    <Suspense fallback={<div className=\"col\">Loading..</div>}>\n      {imageList.map((url, index) => {\n        let strippedUrl = \"\";\n        if (url.startsWith(\"images/Cover Crop Photos\")) {\n          let strippedUrlArray = url.split(\"images/Cover Crop Photos\");\n          strippedUrl =\n            \"/images/Cover Crop Photos/200x125\" + strippedUrlArray[1];\n        }\n        return (\n          <div\n            className=\"p-2 d-flex flex-column align-items-center justify-content-center\"\n            key={`Photo${index}`}\n          >\n            <a\n              className=\"Photo rounded\"\n              href={`/${url}`}\n              data-caption={getPhotoCredits(url, imageData[\"Cover Crop\"])}\n            >\n              <img\n                className=\"img rounded\"\n                alt={`${index}`}\n                src={strippedUrl}\n                style={{\n                  height: \"125px\",\n                  maxWidth: \"200px\",\n                }}\n              />\n            </a>\n\n            <div>\n              <Typography variant=\"caption\">\n                {getPhotoCredits(url, imageData[\"Cover Crop\"])}\n              </Typography>\n            </div>\n          </div>\n        );\n      })}\n    </Suspense>\n  ) : (\n    \"Loading..\"\n  );\n};\n\nexport default PhotoComponent;\n\nconst getPhotoCredits = (url = \"\", cropName = \"\") => {\n  // get base file name\n  let fileName = baseName(url);\n\n  let fileNameArray = fileName.split(\"_\");\n\n  // get last value of array\n  const {\n    length,\n    [length - 1]: last,\n    [length - 2]: secondLast,\n    [length - 3]: thirdLast,\n  } = fileNameArray;\n  const year = parseInt(last);\n  if (thirdLast.toLowerCase().includes(\"mirsky\")) {\n    let mirskyLabString = ucFirst(thirdLast + \" \" + secondLast);\n    return `${cropName} - ${mirskyLabString} [${year}]`;\n  } else {\n    return `${cropName} - ${secondLast} [${year}]`;\n  }\n};\n\nconst baseName = (path = \"\") => {\n  let separator = \"/\";\n  const windowsSeparator = \"\\\\\";\n  if (path.includes(windowsSeparator)) {\n    separator = windowsSeparator;\n  }\n  return path.slice(path.lastIndexOf(separator) + 1);\n};\n","/*\n  Contains the soil drainage timeline component in the information \n  styled using CustomStyles from ../../shared/constants\n*/\n\nimport { Typography } from \"@material-ui/core\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport React from \"react\";\nimport { CustomStyles } from \"../../shared/constants\";\n\nconst SoilDrainageTimeline = ({ drainage = [] }) => {\n  const drainageClasses = [\n    \"Very poorly drained\",\n    \"Poorly drained\",\n    \"Somewhat poorly drained\",\n    \"Moderately well drained\",\n    \"Well drained\",\n    \"Excessively drained\",\n    \"Saturated muck\",\n    \"Well drained muck\",\n  ];\n  return (\n    <Timeline align=\"right\">\n      {drainageClasses.map((drainageClass, index) => {\n        const fullLength = drainageClasses.length;\n        return (\n          <TimelineItem key={index}>\n            <TimelineSeparator>\n              {drainage.includes(drainageClass) ? (\n                <TimelineDot\n                  style={{\n                    backgroundColor: CustomStyles().progressColor,\n                  }}\n                />\n              ) : (\n                \"\"\n              )}\n              {index === fullLength ? \"\" : <TimelineConnector />}\n            </TimelineSeparator>\n\n            <TimelineContent className=\"text-capitalize\">\n              {drainage.includes(drainageClass) ? (\n                <Typography variant=\"body1\" className=\"font-weight-bold\">\n                  {drainageClass}\n                </Typography>\n              ) : (\n                <Typography variant=\"body1\">{drainageClass}</Typography>\n              )}\n            </TimelineContent>\n          </TimelineItem>\n        );\n      })}\n    </Timeline>\n  );\n};\n\nexport default SoilDrainageTimeline;\n","/*\n  Creates popups inside info sheet\n  styled using ../../styles/tooltipMaker.scss\n*/\n\nimport { Tooltip } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/tooltipMaker.scss\";\n\nconst TooltipMaker = ({ children, variable }) => {\n  const {state} = useContext(Context);\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const sfilters = state[section];\n\n  const [desc, setDesc] = useState(\"\");\n  const [dict, setDict] = useState([]);\n\n  useEffect(() => {\n    let dictionary;\n    switch (sfilters.zone) {\n      case 7:\n        dictionary = state.zone7Dictionary.filter(\n          (val) => val.Variable === variable\n        );\n        break;\n      case 6:\n        dictionary = state.zone6Dictionary.filter(\n          (val) => val.Variable === variable\n        );\n        break;\n      case 5:\n        dictionary = state.zone5Dictionary.filter(\n          (val) => val.Variable === variable\n        );\n        break;\n      case 4:\n        dictionary = state.zone4Dictionary.filter(\n          (val) => val.Variable === variable\n        );\n        break;\n      default:\n        dictionary = state.zone7Dictionary.filter(\n          (val) => val.Variable === variable\n        );\n        break;\n    }\n\n    // console.log(dictionary);\n    setDict(dictionary);\n  }, [\n    sfilters.zone,\n    state.zone4Dictionary,\n    state.zone5Dictionary,\n    state.zone6Dictionary,\n    state.zone7Dictionary,\n    variable,\n  ]);\n\n  useEffect(() => {\n    if (dict.length === 1) {\n      setDesc(dict[0].Description + \" \" + dict[0][\"Values Description\"]);\n    } else {\n      setDesc(\"No Data\");\n    }\n  }, [dict]);\n\n  return (\n    <Tooltip\n      placement=\"top-end\"\n      title={\n        <div className=\"filterTooltip\">\n          <p>{desc}</p>\n        </div>\n      }\n      interactive\n      arrow\n    >\n      <span className=\"tooltipChildren\">{children}</span>\n    </Tooltip>\n  );\n};\n\nexport default TooltipMaker;\n","/*\n  Contains the top level information sheet popup \n  BasicCrop contains the default crop\n  getMonthDayString gets the start and end dates used in the info sheet\n  RenderExtendedComments returns the extended notes for a crop if they exist\n  styled using makeStyles and withStyles\n*/\n\nimport { AccordionDetails, makeStyles, Typography} from \"@material-ui/core\";\nimport MuiAccordion from \"@material-ui/core/Accordion\";\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { ExpandMore, FiberManualRecord } from \"@material-ui/icons\";\nimport moment from \"moment-timezone\";\nimport React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport {\n  allMonths,\n  getActiveCropMonths,\n  getRating,\n  RenderSeedPriceIcons,\n} from \"../../shared/constants\";\nimport { Context } from \"../../store/Store\";\nimport CropSelectorCalendarView from \"../CropSelector/CropSelectorCalendarView\";\nimport PhotoComponent from \"./PhotoComponent\";\nimport SoilDrainageTimeline from \"./SoilDrainageTimeline\";\nimport sources from \"./sources.json\";\nimport TooltipMaker from \"./TooltipMaker\";\n\nconst Accordion = withStyles({\n  root: {\n    boxShadow: \"none\",\n    \"&:not(:last-child)\": {\n      borderBottom: 0,\n    },\n    \"&:before\": {\n      display: \"none\",\n    },\n    \"&$expanded\": {\n      margin: \"auto\",\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n  root: {\n    borderBottom: \"1px solid #2b7b79\",\n    marginBottom: -1,\n    minHeight: 56,\n    \"&$expanded\": {\n      minHeight: 56,\n    },\n  },\n  content: {\n    \"&$expanded\": {\n      margin: \"4px 0\",\n    },\n  },\n  expanded: {},\n})(MuiAccordionSummary);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  expanded: {\n    \"&$expanded\": {\n      margin: \"4px 0\",\n    },\n  },\n}));\n\nconst InformationSheetContent = (props) => {\n  const InfoGoals = ({attribute, alternate}) => (\n    crop[attribute] ? (\n      <div className=\"col-6 mb-2 row\">\n        <span className=\"col\">\n          <TooltipMaker\n            variable={attribute}\n            zone={crop[\"Zone\"]}\n          >\n            <Typography variant=\"body1\">\n              {attribute}\n            </Typography>\n          </TooltipMaker>\n        </span>\n        <span>\n          {getRating(crop[attribute] || crop[alternate])}\n        </span>\n      </div>\n    ) : null\n  ) // InfoGoals\n\n  const InfoWeeds = ({attribute}) => (\n    <>\n      <div className=\"col-9 mb-2\">\n        <TooltipMaker\n          variable={attribute}\n          zone={crop[\"Zone\"]}\n        >\n          <Typography variant=\"body1\">\n            {attribute}\n          </Typography>\n        </TooltipMaker>\n      </div>\n      <div className=\"mb-2\">\n        {getRating(crop[attribute])}\n      </div>\n    </>\n  ) // InfoWeeds\n\n  const InfoEnvironmentalTermination = ({attribute, text=attribute.replace(/\\bat\\b/, 'At'), variable}) => (\n    <>\n      <div className=\"col-8 mb-2\">\n        <TooltipMaker\n          variable={variable}\n          zone={crop[\"Zone\"]}\n        >\n          <Typography variant=\"body1\">{text}</Typography>\n        </TooltipMaker>\n      </div>\n      <div className=\"mb-2\">\n        {getRating(crop[attribute])}\n      </div>\n    </>\n  ) // InfoEnvironmentalTermination\n\n  const {state} = useContext(Context);\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const zone = state[section].zone;\n  const crop = props.crop;\n  const classes = useStyles();\n  const [currentSources, setCurrentSources] = useState([{}]);\n\n  const [pdf, setPDF] = useState(false);\n\n  useEffect(() => {\n    document.title = crop['Cover Crop Name'] + ' Zone ' + zone;\n    fetch(`/pdf/${document.title}.pdf`)\n      .then(response => response.text())\n      .then(data => {\n        if (data.includes('PDF')) {\n          setPDF(true);\n        }\n      });\n\n    const regex = /(?!\\B\"[^\"]*),(?![^\"]*\"\\B)/g;\n    const removeDoubleQuotes = /^\"(.+(?=\"$))\"$/;\n    const relevantZones = sources.filter((source, index) => {\n      let zones = source.Zone.split(\",\").map((item) => item.trim());\n      const coverCrops = source[\"Cover Crops\"]\n        .split(regex)\n        .map((item) => item.replace(removeDoubleQuotes, \"$1\"))\n        .map((item) => item.trim());\n\n      return (\n        zones.includes(`Zone ${zone}`) &&\n        coverCrops.includes(crop[\"Cover Crop Name\"])\n      );\n    });\n\n    setCurrentSources(relevantZones);\n    document.body.classList.add('InfoSheet');\n\n    return () => {\n      document.title = 'Cover Crop Explorer';\n      document.body.classList.remove('InfoSheet');\n    }\n  }, [crop, zone]);\n\n  return Object.keys(crop).length > 0 ? (\n    <>\n      {\n        pdf && (\n          <>\n            <iframe id=\"PDF\" title=\"pdf\" src={`/pdf/${document.title}.pdf`}/>\n          </>\n        )\n      }\n      <div className=\"row coverCropDescriptionWrapper avoidPage\">\n        <div className=\"col-12 p-0\">\n          <Typography variant=\"h6\" className=\"text-uppercase px-3 py-2\">\n            Cover Crop Description\n          </Typography>\n\n          <Typography variant=\"body1\" className=\"p-3\">\n            {crop[\"Cover Crop Description\"]\n              ? crop[\"Cover Crop Description\"]\n              : crop[\"Crop Description\"]}\n          </Typography>\n        </div>\n      </div>\n      \n      <div\n        className=\"d-flex justify-content-center mt-2 mb-2 photosWrapper avoidPage\"\n        style={{\n          overflowX: \"auto\",\n          whiteSpace: \"nowrap\",\n          flexWrap: \"nowrap\",\n          WebkitOverflowScrolling: \"touch\",\n        }}\n      >\n        <PhotoComponent\n          imageData={crop[\"Image Data\"] ? crop[\"Image Data\"] : null}\n        />\n      </div>\n      \n      <div className=\"row mt-2 coverCropGoalsWrapper avoidPage\">\n        <div className=\"col-12 p-0\">\n          <Accordion defaultExpanded>\n            <AccordionSummary\n              expandIcon={<ExpandMore />}\n              classes={{ expanded: classes.expanded }}\n            >\n              <Typography variant=\"h6\" className=\"text-uppercase px-3 py-2\">\n                Goals\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <div className=\"row col-12 text-right\">\n                <div className=\"col-6 mb-2 row\">\n                  <span className=\"col\">\n                    <TooltipMaker variable=\"Growing Window\" zone={crop[\"Zone\"]}>\n                      <Typography variant=\"body1\">Growing Window</Typography>\n                    </TooltipMaker>\n                  </span>\n                  {/* <span className=\"col-3\">{crop[\"Growing Window\"]}</span> */}\n                  <span>\n                    <div className=\"blue-bg\">\n                      <div\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          height: \"20px\",\n                        }}\n                      >\n                        <Typography variant=\"body1\">\n                          {crop[\"Growing Window\"]}\n                        </Typography>\n                      </div>\n                    </div>\n                  </span>\n                </div>\n                <InfoGoals attribute=\"Penetrates Plow Pan\" />\n                <InfoGoals attribute=\"Nitrogen Scavenging\" />\n                <InfoGoals attribute=\"Reduces Surface Compaction\" />\n                <InfoGoals attribute=\"Lasting Residue\" />\n                <InfoGoals attribute=\"Improve Soil Organic Matter\" />\n                <InfoGoals attribute=\"Prevent Fall Soil Erosion\" />\n                <InfoGoals attribute=\"Increase Soil Aggregation\" alternate=\"Improve Soil Aggregation\" />\n                <InfoGoals attribute=\"Prevent Spring Soil Erosion\" />\n                <InfoGoals attribute=\"Good Grazing\" />\n                <InfoGoals attribute=\"Forage Harvest Value\" />\n                <InfoGoals attribute=\"Pollinator Food\" />\n                <InfoGoals attribute=\"Nitrogen Fixation\" />\n              </div>\n            </AccordionDetails>\n          </Accordion>\n        </div>\n      </div>\n\n      <div className=\"row otherRows mb-4 avoidPage\">\n        <div\n          className=\"col-7 col-lg-6 weedsRowWrapper\"\n          style={{ marginTop: \"1em\" }}\n        >\n          <Accordion defaultExpanded style={{ border: \"1px solid #2b7b79\" }}>\n            <AccordionSummary\n              expandIcon={<ExpandMore />}\n              classes={{ expanded: classes.expanded }}\n            >\n              <div className=\"col-12 otherHeaderRow p-0\">\n                <Typography variant=\"h6\" className=\"px-3 py-2 text-uppercase\">\n                  Weeds\n                </Typography>\n              </div>\n            </AccordionSummary>\n            <AccordionDetails>\n              <div className=\"row col-12 text-right\">\n                <InfoWeeds attribute=\"Residue Suppresses Summer Annual Weeds\" />\n                <InfoWeeds attribute=\"Outcompetes Summer Annual Weeds\" />\n                <InfoWeeds attribute=\"Suppresses Winter Annual Weeds\" />\n                <InfoWeeds attribute=\"Persistence\" />\n                <InfoWeeds attribute=\"Volunteer Establishment\" />\n              </div>\n            </AccordionDetails>\n          </Accordion>\n        </div>\n\n        <div\n          className=\"col-5 col-lg-6 envTolWrapper\"\n          style={{ marginTop: \"1em\" }}\n        >\n          <Accordion defaultExpanded style={{ border: \"1px solid #2b7b79\" }}>\n            <AccordionSummary\n              expandIcon={<ExpandMore />}\n              classes={{ expanded: classes.expanded }}\n            >\n              <div className=\"col-12 otherHeaderRow p-0\">\n                <Typography variant=\"h6\" className=\"px-3 py-2 text-uppercase\">\n                  Environmental&nbsp;Tolerances\n                </Typography>\n              </div>\n            </AccordionSummary>\n            <AccordionDetails>\n              <div className=\"row col-12 text-right\">\n                <InfoEnvironmentalTermination attribute=\"Low Fertility\" variable=\"Low Fertility Tolerance\" />\n                <InfoEnvironmentalTermination attribute=\"Drought\"       variable=\"Drought Tolerance\" />\n                <InfoEnvironmentalTermination attribute=\"Heat\"          variable=\"Heat Tolerance\" />\n                <InfoEnvironmentalTermination attribute=\"Shade\"         variable=\"Shade Tolerance\" />\n                <InfoEnvironmentalTermination attribute=\"Flood\"         variable=\"Flood Tolerance\" />\n                <InfoEnvironmentalTermination attribute=\"Salinity\"      variable=\"Salinity Tolerance\" />\n              </div>\n            </AccordionDetails>\n          </Accordion>\n        </div>\n      </div>\n\n      <div className=\"row otherRows mb-4 avoidPage\">\n        <div className=\"col-7 col-lg-6 basicAgWrapper\">\n          <div\n            className=\"col-12 otherHeaderRow p-0\"\n            style={{ marginTop: \"1em\", float: \"left\" }}\n          >\n            <Accordion defaultExpanded style={{ border: \"1px solid #2b7b79\"}}>\n              <AccordionSummary\n                expandIcon={<ExpandMore />}\n                classes={{ expanded: classes.expanded }}\n              >\n                <Typography\n                  variant=\"h6\"\n                  className=\"px-3 py-2\"\n                  style={{ border: \"0px\" }}\n                >\n                  Growth Traits\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <div className=\"row col-12 text-right\">\n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker variable=\"Duration\" zone={crop[\"Zone\"]}>\n                      <Typography variant=\"body1\">Duration</Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div\n                      className={`blue-bg ${\n                        crop[\"Duration\"].includes(\"Short-lived Perennial\")\n                          ? `shrt_perennial`\n                          : ``\n                      }`}\n                    >\n                      <Typography variant=\"body1\">\n                        {crop[\"Duration\"].toString()}\n                      </Typography>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker variable=\"Zone Use\" zone={crop[\"Zone\"]}>\n                      <Typography variant=\"body1\">Zone Use</Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Zone Use\"]}\n                      </Typography>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker\n                      variable=\"Shape & Orientation\"\n                      zone={crop[\"Zone\"]}\n                    >\n                      <Typography variant=\"body1\">\n                        Shape And Orientation\n                      </Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div\n                      className={`blueBgFlex ${\n                        crop[\"Shape & Orientation\"].length > 1\n                          ? `borderWrapped`\n                          : ``\n                      }`}\n                    >\n                      {crop[\"Shape & Orientation\"].map((val, index) => (\n                        <div className=\"blue-bg bordered\" key={index}>\n                          <Typography variant=\"body1\">{val}</Typography>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">C:N</Typography>\n                  </div>\n                  <div className=\"col-3 mb-2\">\n                    {getRating(crop[\"C to N Ratio\"])}\n                  </div> */}\n\n                  <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">\n                      Dry Matter (Lbs/A/Yr)\n                    </Typography>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {`${crop[\"Dry Matter Min (lbs/A/y)\"]} - ${crop[\"Dry Matter Max (lbs/A/y)\"]}`}\n                      </Typography>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker variable=\"Soil Textures\" zone={crop[\"Zone\"]}>\n                      <Typography variant=\"body1\">Soil Texture</Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2 text-capitalize\">\n                    <div\n                      className={`blueBgFlex ${\n                        crop[\"Soil Textures\"].length > 1 ? `borderWrapped` : ``\n                      }`}\n                    >\n                      {crop[\"Soil Textures\"].map((val, index) => (\n                        <div className=\"blue-bg bordered\" key={index}>\n                          <Typography variant=\"body1\">{val}</Typography>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">Soil pH</Typography>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {`${crop[\"Minimum Tolerant Soil pH\"]} - ${crop[\"Maximum Tolerant Soil pH\"]}`}\n                      </Typography>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker\n                      variable=\"Soil Moisture Use\"\n                      zone={crop[\"Zone\"]}\n                    >\n                      <Typography variant=\"body1\">Soil Moisture Use</Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Soil Moisture Use\"]}\n                      </Typography>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker\n                      variable=\"Hessian Fly-Free Date\"\n                      zone={crop[\"Zone\"]}\n                    >\n                      <Typography variant=\"body1\">\n                        Hessian Fly Free Date?\n                      </Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Hessian Fly Free Date\"]\n                          ? crop[\"Hessian Fly Free Date\"]\n                          : \"No\"}\n                      </Typography>\n                    </div>\n                  </div>\n\n                  {crop[\"Nitrogen Accumulation Max, Legumes (lbs/A/y)\"] ? (\n                    <Fragment>\n                      <div className=\"col-9 mb-2\">\n                        <Typography variant=\"body1\">\n                          Nitrogen Accumulation (Lbs/A/Yr)\n                        </Typography>\n                      </div>\n                      <div className=\"mb-2\">\n                        <div className=\"blue-bg\">\n                          <Typography variant=\"body1\">\n                            {`${crop[\"Nitrogen Accumulation Min, Legumes (lbs/A/y)\"]} - ${crop[\"Nitrogen Accumulation Max, Legumes (lbs/A/y)\"]}`}\n                          </Typography>\n                        </div>\n                      </div>\n                    </Fragment>\n                  ) : (\n                    \"\"\n                  )}\n\n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker\n                      variable=\"Ease of Establishment\"\n                      zone={crop[\"Zone\"]}\n                    >\n                      <Typography variant=\"body1\">\n                        Ease Of Establishment\n                      </Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    {getRating(crop[\"Ease of Establishment\"])}\n                  </div>\n\n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker\n                      variable=\"Establishes Quickly\"\n                      zone={crop[\"Zone\"]}\n                    >\n                      <Typography variant=\"body1\">\n                        Establishes Quickly\n                      </Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    {getRating(crop[\"Establishes Quickly\"])}\n                  </div>\n\n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker\n                      variable=\"Early Spring Growth\"\n                      zone={crop[\"Zone\"]}\n                    >\n                      <Typography variant=\"body1\">\n                        Early Spring Growth\n                      </Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    {getRating(crop[\"Early Spring Growth\"])}\n                  </div>\n\n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker\n                      variable=\"Flowering Trigger\"\n                      zone={crop[\"Zone\"]}\n                    >\n                      <Typography variant=\"body1\">Flowering Trigger</Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Flowering Trigger\"]}\n                      </Typography>\n                    </div>\n                  </div>\n\n                  {/* <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">Root Architecture</Typography>\n                  </div>\n                  <div className=\"col-3 mb-2\">\n                    <div\n                      className={`blueBgFlex ${\n                        crop[\"Root Architecture\"].length > 1\n                          ? `borderWrapped`\n                          : ``\n                      }`}\n                    >\n                      {crop[\"Root Architecture\"].map((val, index) => (\n                        <div className=\"blue-bg bordered\" key={index}>\n                          <Typography\n                            variant=\"body1\"\n                            className=\"text-capitalize\"\n                          >\n                            {val}\n                          </Typography>\n                        </div>\n                      ))}\n                    </div>\n                  </div> */}\n\n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker variable=\"Root Depth\" zone={crop[\"Zone\"]}>\n                      <Typography variant=\"body1\">Root Depth</Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Root Depth\"]}\n                      </Typography>\n                    </div>\n                  </div>\n\n                  {crop[\"Inoculant Type\"][0] !== \"none\" ? (\n                    <Fragment>\n                      <div className=\"col-9 mb-2\">\n                        <TooltipMaker\n                          variable=\"Innoculant Type\"\n                          zone={crop[\"Zone\"]}\n                        >\n                          <Typography variant=\"body1\">\n                            Inoculant Type\n                          </Typography>\n                        </TooltipMaker>\n                      </div>\n                      <div className=\"mb-2\">\n                        <div\n                          className={`blueBgFlex ${\n                            crop[\"Inoculant Type\"].length > 1\n                              ? `borderWrapped`\n                              : ``\n                          }`}\n                        >\n                          {crop[\"Inoculant Type\"].map((val, index) => (\n                            <div\n                              className=\"blue-bg bordered\"\n                              key={index}\n                              style={{ height: \"auto\", maxHeight: \"auto\" }}\n                            >\n                              <Typography\n                                variant=\"body2\"\n                                className=\"text-capitalize\"\n                              >\n                                {val}\n                              </Typography>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </Fragment>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </AccordionDetails>\n            </Accordion>\n          </div>\n        </div>\n\n        <div className=\"col-5 col-lg-6 basicAgWrapper\">\n          <div\n            className=\"col-12 otherHeaderRow p-0\"\n            style={{ marginTop: \"1em\", float: \"left\" }}\n          >\n            <Accordion defaultExpanded style={{ border: \"1px solid #2b7b79\" }}>\n              <AccordionSummary\n                expandIcon={<ExpandMore />}\n                classes={{ expanded: classes.expanded }}\n              >\n                <Typography\n                  variant=\"h6\"\n                  className=\"px-3 py-2\"\n                  style={{ border: \"0px\" }}\n                >\n                  Soil Drainage\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <div className=\"col-12 text-right\">\n                  <SoilDrainageTimeline drainage={crop[\"Soil Drainage\"]} />\n                </div>\n              </AccordionDetails>\n            </Accordion>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"row otherRows mb-4 avoidPage\">\n        <div className=\"col-7 col-lg-6 basicAgWrapper\">\n          <div\n            className=\"col-12 otherHeaderRow p-0\"\n            style={{ marginTop: \"1em\" }}\n          >\n            <Accordion defaultExpanded style={{ border: \"1px solid #2b7b79\" }}>\n              <AccordionSummary\n                expandIcon={<ExpandMore />}\n                classes={{ expanded: classes.expanded }}\n              >\n                <Typography\n                  variant=\"h6\"\n                  className=\"px-3 py-2\"\n                  style={{ border: \"0px\" }}\n                >\n                  Planting\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <div className=\"row col-12 text-right\">\n                  \n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker\n                      variable=\"Seeds per Pound\"\n                      zone={crop[\"Zone\"]}\n                    >\n                      <Typography variant=\"body1\">Seeds Per Lb</Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Seeds per Pound\"]}\n                      </Typography>\n                    </div>\n                  </div>\n\n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker\n                      variable=\"Seed Price per Pound\"\n                      zone={crop[\"Zone\"]}\n                    >\n                      <Typography variant=\"body1\">Seed Price Per Lb</Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg no-bg\">\n                      <RenderSeedPriceIcons\n                        val={crop[\"Seed Price per Pound\"]}\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">\n                      Base Seeding Rate (Lbs/A)\n                    </Typography>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {`${crop[\"Base Seeding Rate Min (lbs/A)\"]} - ${crop[\"Base Seeding Rate Max (lbs/A)\"]}`}\n                      </Typography>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">Drilled Depth</Typography>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {`${crop[\"Drilled Depth Min\"]}\" - ${crop[\"Drilled Depth Max\"]}\"`}\n                      </Typography>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker\n                      variable=\"Can Aerial Seed?\"\n                      zone={crop[\"Zone\"]}\n                    >\n                      <Typography variant=\"body1\">Can Aerial Seed?</Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Aerial Seeding\"] ? \"Yes\" : \"No\"}\n                      </Typography>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker variable=\"Frost Seeding\" zone={crop[\"Zone\"]}>\n                      <Typography variant=\"body1\">Can Frost Seed?</Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Frost Seeding\"] ? \"Yes\" : \"No\"}\n                      </Typography>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-9 mb-2\">\n                    <TooltipMaker\n                      variable=\"Min Germination Temp (F)\"\n                      zone={crop[\"Zone\"]}\n                    >\n                      <Typography variant=\"body1\">\n                        Min Germination Temp (&deg;F)\n                      </Typography>\n                    </TooltipMaker>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Min Germination Temp (F)\"]}\n                      </Typography>\n                    </div>\n                  </div>\n                </div>\n              </AccordionDetails>\n            </Accordion>\n          </div>\n        </div>\n        <div className=\"col-5 col-lg-6 basicAgWrapper\">\n          <div\n            className=\"col-12 otherHeaderRow p-0\"\n            style={{ marginTop: \"1em\" }}\n          >\n            <Accordion defaultExpanded style={{ border: \"1px solid #2b7b79\" }}>\n              <AccordionSummary\n                expandIcon={<ExpandMore />}\n                classes={{ expanded: classes.expanded }}\n              >\n                <Typography\n                  variant=\"h6\"\n                  className=\"px-3 py-2\"\n                  style={{ border: \"0px\" }}\n                >\n                  Termination\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <div className=\"row col-12 text-right\">\n                  <InfoEnvironmentalTermination attribute=\"Tillage at Vegetative\"  variable=\"Tillage Termination at Vegetative\" />\n                  <InfoEnvironmentalTermination attribute=\"Tillage at Flowering\"   variable=\"Tillage Termination at Flowering\" />\n                  <InfoEnvironmentalTermination attribute=\"Freezing at Vegetative\" variable=\"Freezing Termination at Vegetative\" />\n                  <InfoEnvironmentalTermination attribute=\"Freezing at Flowering\"  variable=\"Freezing Termination at Flowering\" />\n                  <InfoEnvironmentalTermination attribute=\"Chemical at Vegetative\" variable=\"Chemical Termination at Vegetative\" />\n                  <InfoEnvironmentalTermination attribute=\"Chemical at Flowering\"  variable=\"Chemical Termination at Flowering\" />\n                  <InfoEnvironmentalTermination attribute=\"Mow at Flowering\"       variable=\"Mow Termination at Flowering\" />\n                  <InfoEnvironmentalTermination \n                    attribute=\"Roller Crimp Termination at Flowering\"\n                    text=\"Roller-Crimp At Flowering\"\n                    variable=\"Roller Crimp Termination at Flowering\" \n                  />\n                </div>\n              </AccordionDetails>\n            </Accordion>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row otherRows mb-4 avoidPage\">\n        <div className=\"col-7 col-lg-6 basicAgWrapper\">\n          <div\n            className=\"col-12 otherHeaderRow p-0\"\n            style={{ marginTop: \"1em\" }}\n          >\n            <Accordion defaultExpanded style={{ border: \"1px solid #2b7b79\" }}>\n              <AccordionSummary\n                expandIcon={<ExpandMore />}\n                classes={{ expanded: classes.expanded }}\n              >\n                <Typography\n                  variant=\"h6\"\n                  className=\"px-3 py-2\"\n                  style={{ border: \"0px\" }}\n                >\n                  Planting and Growth Windows\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <div className=\"row col-12 text-right\">\n                  <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">\n                      <FiberManualRecord style={{ color: \"#2f80ed\" }} />\n                      &nbsp;Frost Seeding\n                    </Typography>\n                  </div>\n                  <div className=\"col-3 mb-2\">\n                    <div className=\"blue-bg shrt_perennial wd-110\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Frost Seeding\"]\n                          ? `${moment(crop[\"Frost Seeding Start\"], \"YYYY-MM-DD\")\n                              .format(\"MM/DD\")\n                              .toString()} - ${moment(\n                              crop[\"Frost Seeding End\"],\n                              \"YYYY-MM-DD\"\n                            )\n                              .format(\"MM/DD\")\n                              .toString()}`\n                          : \"N/A\"}\n                      </Typography>\n                    </div>\n                  </div>\n                  <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">\n                      <FiberManualRecord style={{ color: \"#2d7b7b\" }} />\n                      &nbsp;Reliable Establishment\n                    </Typography>\n                  </div>\n                  <div className=\"mb-2\">\n                    {crop[\"Second Reliable Establishment/Growth Start\"] &&\n                    crop[\"Second Reliable Establishment/Growth End\"] ? (\n                      <div className=\"blueBgFlex borderWrapped wd-112\">\n                        <div className=\"blue-bg shrt_perennial wd-110\">\n                          <Typography variant=\"body1\">\n                            {getMonthDayString(\"reliable\", crop)}\n                          </Typography>\n                        </div>\n                        <div className=\"blue-bg shrt_perennial wd-110\">\n                          <Typography variant=\"body1\">\n                            {getMonthDayString(\"reliable-second\", crop)}\n                          </Typography>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"blue-bg shrt_perennial wd-110\">\n                        <Typography variant=\"body1\">\n                          {getMonthDayString(\"reliable\", crop)}\n                        </Typography>\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">\n                      <FiberManualRecord style={{ color: \"#f2c94c\" }} />\n                      &nbsp;Temperature/Moisture Risk\n                    </Typography>\n                  </div>\n                  <div className=\"mb-2\">\n                    {crop[\n                      \"Second Temperature/Moisture Risk to Establishment Start\"\n                    ] &&\n                    crop[\n                      \"Second Temperature/Moisture Risk to Establishment End\"\n                    ] ? (\n                      <div className=\"blueBgFlex borderWrapped wd-112\">\n                        <div className=\"blue-bg shrt_perennial wd-110\">\n                          <Typography variant=\"body1\">\n                            {getMonthDayString(\"temperature\", crop)}\n                          </Typography>\n                        </div>\n                        <div className=\"blue-bg shrt_perennial wd-110\">\n                          <Typography variant=\"body1\">\n                            {getMonthDayString(\"temperature-second\", crop)}\n                          </Typography>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"blue-bg shrt_perennial wd-110\">\n                        <Typography variant=\"body1\">\n                          {getMonthDayString(\"temperature\", crop)}\n                        </Typography>\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">\n                      <FiberManualRecord style={{ color: \"#598445\" }} />\n                      &nbsp;Active Growth Period\n                    </Typography>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div\n                      className={`blueBgFlex ${\n                        crop[\"Active Growth Period\"].length > 1\n                          ? `borderWrapped`\n                          : ``\n                      }`}\n                    >\n                      {crop[\"Active Growth Period\"].map((val, index) => (\n                        <div className=\"blue-bg bordered\" key={index}>\n                          <Typography variant=\"body1\">{val}</Typography>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">Winter Survival</Typography>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Winter Survival\"]}\n                      </Typography>\n                    </div>\n                  </div>\n\n                  <div className=\"col-9 mb-2\">\n                    <Typography variant=\"body1\">Can Interseed</Typography>\n                  </div>\n                  <div className=\"mb-2\">\n                    <div className=\"blue-bg shrt_perennial wd-110\">\n                      <Typography variant=\"body1\">\n                        {crop[\"Interseed possible\"] ? \"Yes\" : \"N/A\"}\n                      </Typography>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-12 pt-4\">\n                    <table style={{ width: \"100%\", height: \"40px\" }}>\n                      <tbody>\n                        <tr>\n                          {allMonths.map((month, index) => (\n                            <td\n                              style={{\n                                background: getActiveCropMonths(crop).includes(\n                                  month\n                                )\n                                  ? `#598445`\n                                  : `#f0f7eb`,\n                                // width: \"100%\",\n                                height: \"20px\",\n                                borderRight: `${\n                                  month !== \"Dec\" ? `2px solid white` : ``\n                                }`,\n                              }}\n                              key={`growth-${index}`}\n                            ></td>\n                          ))}\n                        </tr>\n                        <tr style={{ borderTop: \"2px solid white\" }}>\n                          {/* {allMonths.map((month, index) => (\n                            <GrowthWindowComponent\n                              from=\"infosheet\"\n                              data={crop}\n                              key={index}\n                              id={`growthCell${index}`}\n                              month={index}\n                            />\n                          ))} */}\n                          <CropSelectorCalendarView\n                            data={{ fields: crop }}\n                            from={\"infosheet\"}\n                          />\n                        </tr>\n                        <tr>\n                          {allMonths.map((month, index) => {\n                            return (\n                              <td\n                                key={index}\n                                className={`${\n                                  month === \"Jan\" || month === \"Dec\"\n                                    ? month === \"Jan\"\n                                      ? `text-center`\n                                      : `text-center`\n                                    : `text-center`\n                                }`}\n                              >\n                                <Typography variant=\"body1\">{month}</Typography>\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </AccordionDetails>\n            </Accordion>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row otherRows mb-4 avoidPage\">\n        <div className=\"col-12 basicAgWrapper\">\n          <div\n            className=\"col-12 otherHeaderRow p-0\"\n            style={{ marginTop: \"1em\" }}\n          >\n            <Accordion defaultExpanded style={{ border: \"1px solid #2b7b79\" }}>\n              <AccordionSummary\n                expandIcon={<ExpandMore />}\n                classes={{ expanded: classes.expanded }}\n              >\n                <Typography\n                  variant=\"h6\"\n                  className=\"px-3 py-2\"\n                  style={{ border: \"0px\" }}\n                >\n                  Extended Comments\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <RenderExtendedComments crop={crop} />\n              </AccordionDetails>\n            </Accordion>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row otherRows mb-4 avoidPage\">\n        <div className=\"col-12 basicAgWrapper\">\n          <div\n            className=\"col-12 otherHeaderRow p-0\"\n            style={{ marginTop: \"1em\" }}\n          >\n            <Accordion defaultExpanded style={{ border: \"1px solid #2b7b79\" }}>\n              <AccordionSummary\n                expandIcon={<ExpandMore />}\n                classes={{ expanded: classes.expanded }}\n              >\n                <Typography\n                  variant=\"h6\"\n                  className=\"px-3 py-2\"\n                  style={{ border: \"0px\" }}\n                >\n                  References & Resources\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Typography variant=\"body1\" className=\"p-3\">\n                  {currentSources.length > 0\n                    ? currentSources.map((source, index) => (\n                        <Fragment key={index}>\n                          <a\n                            style={{\n                              textDecoration: \"underline\",\n                              color: \"black\",\n                              fontWeight: \"bolder\",\n                            }}\n                            href={source[\"URL\"]}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            {source[\"Resource Name\"]}\n                          </a>\n                          , {source[\"Institution or Author\"]}\n                          <br />\n                        </Fragment>\n                      ))\n                    : \"\"}\n                </Typography>\n              </AccordionDetails>\n            </Accordion>\n          </div>\n        </div>\n      </div>\n    </>\n  ) : (\n    \"\"\n  );\n};\n\nexport default InformationSheetContent;\n\nconst getMonthDayString = (type = \"\", crop = {}) => {\n  switch (type) {\n    case \"reliable\": {\n      const startDate = moment(\n        crop[\"Reliable Establishment/Growth Start\"],\n        \"YYYY-MM-DD\"\n      );\n      const endDate = moment(\n        crop[\"Reliable Establishment/Growth End\"],\n        \"YYYY-MM-DD\"\n      );\n\n      return `${startDate.format(\"MM/DD\")} - ${endDate.format(\"MM/DD\")}`;\n    }\n    case \"reliable-second\": {\n      const startDate = moment(\n        crop[\"Second Reliable Establishment/Growth Start\"],\n        \"YYYY-MM-DD\"\n      );\n      const endDate = moment(\n        crop[\"Second Reliable Establishment/Growth End\"],\n        \"YYYY-MM-DD\"\n      );\n\n      return `${startDate.format(\"MM/DD\")} - ${endDate.format(\"MM/DD\")}`;\n    }\n    case \"temperature\": {\n      if (\n        crop[\"Temperature/Moisture Risk to Establishment Start\"] &&\n        crop[\"Temperature/Moisture Risk to Establishment End\"]\n      ) {\n        const startDate = moment(\n          crop[\"Temperature/Moisture Risk to Establishment Start\"],\n          \"YYYY-MM-DD\"\n        );\n        const endDate = moment(\n          crop[\"Temperature/Moisture Risk to Establishment End\"],\n          \"YYYY-MM-DD\"\n        );\n        return `${startDate.format(\"MM/DD\")} - ${endDate.format(\"MM/DD\")}`;\n      } else {\n        return \"N/A\";\n      }\n    }\n    case \"temperature-second\": {\n      const startDate = moment(\n        crop[\"Second Temperature/Moisture Risk to Establishment Start\"],\n        \"YYYY-MM-DD\"\n      );\n      const endDate = moment(\n        crop[\"Second Temperature/Moisture Risk to Establishment End\"],\n        \"YYYY-MM-DD\"\n      );\n      return `${startDate.format(\"MM/DD\")} - ${endDate.format(\"MM/DD\")}`;\n    }\n    default:\n      return \"\";\n  }\n};\n\nconst RenderExtendedComments = ({ crop = {} }) => {\n  const allKeysWithNotes = Object.keys(crop)\n    .filter((key) => key.includes(\"Notes:\"))\n    .map((str) => {\n      return { key: str, name: str.split(\":\")[1].trimStart() };\n    });\n\n  return allKeysWithNotes.length > 0 ? (\n    <div className=\"row\">\n      {allKeysWithNotes.map((obj, index) => (\n        <div key={\"notesKey-\" + index} className=\"col-12\">\n          <Typography variant=\"body1\" className=\"p-3\">\n            <b>{obj.name}:</b> {crop[obj.key]}\n          </Typography>\n        </div>\n      ))}\n    </div>\n  ) : (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <Typography variant=\"body1\" className=\"p-3\">\n          No Data\n        </Typography>\n      </div>\n    </div>\n  );\n};\n","/*\n  Handles the popup on hovering over one of the goal rankings in the crop selector\n  Styles are created using makeStyles\n*/\n\nimport { Backdrop, Button, Fade, makeStyles, Modal, IconButton } from \"@material-ui/core\";\nimport { Close, Print } from \"@material-ui/icons\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { CropImage, zoneIcon } from \"../../shared/constants\";\nimport \"../../styles/cropDetailsModal.scss\";\nimport InformationSheetContent from \"../InformationSheet/InformationSheetContent\";\nimport ReactGA from \"react-ga\";\nimport { Context } from \"../../store/Store\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    height: \"100%\",\n    display: \"block\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: \"0px\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  AccordionSummaryIcon: {\n    \"& div.MuiAccordionSummary-expandIcon.Mui-expanded\": {\n      transform: \"rotate(45deg)\",\n    },\n  },\n}));\n\nconst CropDetailsModalComponent = (props) => {\n  const {state} = useContext(Context);  \n  let crop = props.crop;\n  const classes = useStyles();\n  const [modalData, setModalData] = useState({});\n\n  useEffect(() => {\n    setModalData(crop);\n\n    const kd = (e) => {\n      if (e.key === 'p' && e.ctrlKey) {\n        e.preventDefault();\n        print();\n      }\n    } // kd\n\n    document.addEventListener('keydown', kd);\n\n    return () => {\n      document.removeEventListener('keydown', kd);\n    }\n  }, [crop]);\n\n  useEffect(() => {\n    if (state.consent === true) {\n      ReactGA.initialize('UA-181903489-1');\n      ReactGA.pageview('information sheet');\n    }\n  }, [state.consent]);\n\n  const handleModalClose = () => {\n    props.setModalOpen(!props.modalOpen);\n  };\n\n  const print = () => {\n    if (state.consent === true) {\n      ReactGA.event({\n        category: 'Information Sheet',\n        action: 'Print',\n        label: document.title\n      });\n    }\n    \n    document.querySelector('#PDF').contentWindow.print();\n  } // print\n\n  return (\n    <Modal\n      aria-labelledby=\"cover-crop-modal-title\"\n      aria-describedby=\"cover-crop-modal-description\"\n      className={classes.modal}\n      open={props.modalOpen}\n      onClose={handleModalClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      disableBackdropClick={false}\n      disableEscapeKeyDown={false}\n    >\n      <Fade in={props.modalOpen}>\n        {modalData.fields ? (\n          <div className=\"modalParentWrapper\">\n            <div\n              className={`cropTableModal modalContainer ${classes.paper}`}\n              id={`cropDetailModal-${modalData.fields[\"id\"]}`}\n            >\n              <div className=\"container-fluid\">\n                <div className=\"row\">\n                  <div\n                    className=\"col-12\"\n                    style={{\n                      background: \"#2D7B7B\",\n                      color: \"white\",\n                      height: \"auto\",\n                      borderTopLeftRadius: \"5px\",\n                      borderTopRightRadius: \"5px\",\n                    }}\n                  >\n                    <div className=\"row doclose\">\n                      <div className=\"col-2 offset-10 text-right\">\n                        {\" \"}\n                        <Button\n                          style={{ color: \"white\" }}\n                          onClick={handleModalClose}\n                        >\n                          <Close />\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <div className=\"row\" id=\"coverCropModalPrimary\">\n                          <div className=\"col-12\">\n                            <div className=\"row\">\n                              <div className=\"col mt-2\">\n                                <div>{modalData.fields[\"Cover Crop Group\"]}</div>\n                                <div\n                                  className=\"font-weight-bold\"\n                                  id=\"cover-crop-modal-title\"\n                                >\n                                  {modalData.fields[\"Cover Crop Name\"]}\n                                </div>\n                                <div>{modalData.fields[\"Scientific Name\"]}</div>\n                              </div>\n                              <div\n                                className=\"col\"\n                                style={{\n                                  textAlign: \"right\",\n                                  paddingRight: \"0px\",\n                                  paddingLeft: \"0px\",\n                                }}\n                              >\n                                {crop.fields[\"Image Data\"] ? (\n                                  <CropImage\n                                    present={true}\n                                    src={\n                                      crop.fields[\"Image Data\"][\"Key Thumbnail\"]\n                                        ? `/images/Cover Crop Photos/100x100/${crop.fields[\"Image Data\"][\"Directory\"]}/${crop.fields[\"Image Data\"][\"Key Thumbnail\"]}`\n                                        : \"https://placehold.it/100x100\"\n                                    }\n                                    alt={crop.fields[\"Cover Crop Name\"]}\n                                  />\n                                ) : (\n                                  <CropImage present={false} />\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row zone\" style={{paddingBottom: '1em'}}>\n                          <div\n                            className=\"col-12\"\n                            style={{ background: \"#2D7B7B\", color: \"white\" }}\n                          >\n                            <div className=\"row\">\n                              <div className=\"col-12\">\n                                {zoneIcon(20, 20)}\n                                <strong className=\"pl-2\">\n                                  PLANT HARDINESS ZONE {crop.fields.Zone} DATASET\n                                  <span className=\"noprint\">\n                                    <Button\n                                      style={{ color: \"white\", textTransform: \"none\", marginLeft: \"2em\" }}\n                                      className=\"dataDict\"\n                                      onClick={() => {\n                                        window.open(\"/data-dictionary\", \"_blank\");\n                                      }}\n                                    >\n                                      Data Dictionary\n                                    </Button>\n                                  </span>\n                                  <span className=\"noprint\">\n                                    <IconButton\n                                      title=\"Print\"\n                                      style={{color: \"white\", marginLeft: \"1em\"}}\n                                      onClick={print}\n                                    >\n                                      <Print />\n                                    </IconButton>\n                                  </span>\n                                </strong>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <div id=\"cover-crop-modal-description\">\n                          <InformationSheetContent crop={crop.fields} from=\"modal\" />\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </Fade>\n    </Modal>\n  );\n};\n\nexport default CropDetailsModalComponent;\n","/* \n  Contains the individual crops in a component\n  removeCrop handles removing a crop from the list\n  styled using makeStyles\n*/\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useContext, useState } from \"react\";\nimport { flipCoverCropName, trimString } from \"../../shared/constants\";\nimport { Context } from \"../../store/Store\";\nimport CropDetailsModalComponent from \"../CropSelector/CropDetailsModal\";\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 345,\n    width: 230,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst MyCoverCropCardsComponent = (props) => {\n  const {state, dispatch} = useContext(Context);\n  const data = props.data;\n  const btnId = props.btnId;\n  const classes = useStyles();\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalData, setModalData] = useState({});\n  const { enqueueSnackbar } = useSnackbar();\n  const handleModalOpen = () => {\n    // put data inside modal\n\n    setModalData({ fields: data });\n\n    setModalOpen(true);\n  };\n\n  const removeCrop = (cropName) => {\n    var removeIndex = state.selectedCrops\n      .map(function (item) {\n        return item.id;\n      })\n      .indexOf(`${btnId}`);\n\n    if (removeIndex === -1) {\n      // element not in array\n      // not possible ?\n    } else {\n      let selectedCropsCopy = state.selectedCrops;\n\n      selectedCropsCopy.splice(removeIndex, 1);\n      dispatch({\n        type: \"SELECTED_CROPS_MODIFIER\",\n        data: {\n          selectedCrops: selectedCropsCopy,\n          snackOpen: false,\n          snackMessage: `Removed`,\n        },\n      });\n      enqueueSnackbar(`${cropName} Removed`);\n    }\n  };\n  return (\n    <div className={`${props.cardNo === 1 ? `pl-0 pr-2 pt-2 pb-2` : `p-2`}`}>\n      <Card className={classes.card}>\n        <CardMedia\n          image={\n            data[\"Image Data\"][\"Key Thumbnail\"]\n              ? `/images/Cover Crop Photos/250/${data[\"Image Data\"][\"Key Thumbnail\"]}`\n              : \"https://placehold.it/100x100?text=Placeholder\"\n          }\n          className={classes.media}\n          title={data[\"Cover Crop Name\"]}\n        />\n        <CardContent>\n          <div\n            className=\"font-weight-bold text-muted text-uppercase\"\n            style={{ fontSize: \"10pt\" }}\n          >\n            {`Zone ${data[\"Zone\"]}`}\n          </div>\n          <div\n            className=\"font-weight-bold text-muted text-uppercase\"\n            style={{ fontSize: \"10pt\" }}\n          >\n            {data[\"Family Common Name\"]}\n          </div>\n          <Typography\n            variant=\"h6\"\n            className=\"font-weight-bold text-capitalize text-truncate\"\n          >\n            {flipCoverCropName(data[\"Cover Crop Name\"])}\n          </Typography>\n          <small className=\"font-italic text-muted\">\n            {trimString(data[\"Scientific Name\"], 25)}\n          </small>\n          <div>\n            <small className=\"text-muted\">\n              <a\n                style={{\n                  textDecoration: \"underline\",\n                  color: \"rgb(53, 153, 155)\",\n                }}\n                onClick={() => handleModalOpen()}\n                // href=\"/#\"\n              >\n                View Crop Details\n              </a>\n            </small>\n          </div>\n        </CardContent>\n\n        <CardActionArea\n          style={{\n            backgroundColor: \"#e3f2f4\",\n            textAlign: \"center\",\n            padding: \"0.5em\",\n          }}\n          onClick={() => removeCrop(data[\"Cover Crop Name\"])}\n        >\n          <Typography\n            variant=\"body2\"\n            className=\"text-uppercase\"\n            style={{\n              color: \"black\",\n              fontWeight: \"bold\",\n            }}\n          >\n            REMOVE\n          </Typography>\n        </CardActionArea>\n      </Card>\n      <CropDetailsModalComponent\n        modalOpen={modalOpen}\n        setModalOpen={setModalOpen}\n        crop={modalData}\n      />\n    </div>\n  );\n};\n\nexport default MyCoverCropCardsComponent;\n","/* \n  Contains the comparison tool for my cover crop list\n  removeCrop handles removing a crop from the list\n  TopBar contains the blue bar for adding crops\n  RenderRelevantData updates the filtered values\n  RenderSeedingData updates seeding data\n  GetAverageGoalRating calculates the average of all the scores \n  styled using ../../styles/cropComparisonView.scss\n*/\n\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  Cancel,\n  KeyboardArrowLeft,\n  KeyboardArrowRight,\n} from \"@material-ui/icons\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  DataTooltip,\n  flipCoverCropName,\n  getRating,\n  RenderSeedPriceIcons,\n  trimString,\n} from \"../../shared/constants\";\nimport sidebarDefinitionsz4 from \"../../shared/json/zone4/data-dictionary.json\";\nimport sidebarDefinitionsz5 from \"../../shared/json/zone5/data-dictionary.json\";\nimport sidebarDefinitionsz6 from \"../../shared/json/zone6/data-dictionary.json\";\nimport sidebarDefinitionsz7 from \"../../shared/json/zone7/data-dictionary.json\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/cropComparisonView.scss\";\nimport \"../../styles/MyCoverCropComparisonComponent.scss\";\nimport CropDetailsModalComponent from \"../CropSelector/CropDetailsModal\";\n\nconst lightBorder = {\n  border: \"1px solid #35999b\",\n  padding: \"5px\",\n  marginBottom: \"5px\",\n  borderTopLeftRadius: \"10px\",\n  borderBottomLeftRadius: \"10px\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n};\nconst lightBG = {\n  border: \"1px solid white\",\n  backgroundColor: \"#f1f7eb\",\n  padding: \"5px\",\n  marginBottom: \"5px\",\n  textAlign: \"center\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  fontWeight: \"bold\",\n  minHeight: \"36px\",\n};\n\nconst MyCoverCropComparisonComponent = (props) => {\n  const {state, dispatch} = useContext(Context);\n  const { enqueueSnackbar } = useSnackbar();\n  const { comparisonKeys } = state;\n  const section = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const zone = state[section].zone;\n\n  const [sidebarDefs, setSidebarDefs] = useState(sidebarDefinitionsz7);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalData, setModalData] = useState({});\n  const selectedCrops = props.selectedCrops\n    ? props.selectedCrops\n    : state.selectedCrops;\n\n  const handleModalOpen = (crop) => {\n    // put data inside modal\n\n    setModalData(crop);\n\n    setModalOpen(true);\n  };\n\n  useEffect(() => {\n    switch (parseInt(zone)) {\n      case 7: {\n        setSidebarDefs(sidebarDefinitionsz7);\n        break;\n      }\n      case 6: {\n        setSidebarDefs(sidebarDefinitionsz6);\n        break;\n      }\n      case 5: {\n        setSidebarDefs(sidebarDefinitionsz5);\n        break;\n      }\n      case 4: {\n        setSidebarDefs(sidebarDefinitionsz4);\n        break;\n      }\n      default: {\n        setSidebarDefs(sidebarDefinitionsz7);\n        break;\n      }\n    }\n  }, [zone]);\n\n  const removeCrop = (id, cropName) => {\n    var removeIndex = state.selectedCrops\n      .map(function (item) {\n        return item.id;\n      })\n      .indexOf(`${id}`);\n\n    if (removeIndex === -1) {\n      // element not in array\n      // not possible ?\n    } else {\n      let selectedCropsCopy = state.selectedCrops;\n\n      selectedCropsCopy.splice(removeIndex, 1);\n      dispatch({\n        type: \"SELECTED_CROPS_MODIFIER\",\n        data: {\n          selectedCrops: selectedCropsCopy,\n          snackOpen: false,\n          snackMessage: `Removed`,\n        },\n      });\n      enqueueSnackbar(`${cropName} Removed`);\n    }\n  };\n\n  const getTooltipData = (keyName = \"\") => {\n    const exactObject = sidebarDefs.find((keys) => keys.Variable === keyName);\n\n    if (exactObject) {\n      return exactObject.Description;\n    } else {\n      return \"No Data\";\n    }\n  };\n  const [showScrollArrows, setShowScrollArrow] = useState(false);\n  const [showLeftScrollArrow, setShowLeftScrollArrow] = useState(false);\n  const scrollContainer = (direction = \"right\", amount = 100) => {\n    let parent = document.getElementById(\"scrollContainer\");\n    if (direction === \"right\") {\n      parent.scrollLeft += amount;\n    } else {\n      parent.scrollLeft -= amount;\n    }\n  };\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        {/* Placeholder for empty white space */}\n        <div className=\"col-xl-3 col-lg-4 col-md-4\">\n          <div className=\"row pt-3\">\n            <div className=\"col-12\">\n              <Card style={{ width: \"100%\", boxShadow: \"none\" }}>\n                <CardMedia\n                  children={\n                    <img\n                      src=\"https://via.placeholder.com/10/FFFFFF/FFFFFF\"\n                      style={{ opacity: 0 }}\n                      alt=\"placeholder\"\n                    />\n                  }\n                  style={{ width: \"100%\", height: \"100px\" }}\n                />\n                <CardContent>\n                  <div\n                    className=\"font-weight-bold text-uppercase\"\n                    style={{\n                      fontSize: \"10pt\",\n                      color: \"white\",\n                      visibility: \"hidden\",\n                    }}\n                  >\n                    {`Zone`}\n                  </div>\n                  <div\n                    className=\"font-weight-bold text-uppercase\"\n                    style={{\n                      fontSize: \"10pt\",\n                      color: \"white\",\n                      visibility: \"hidden\",\n                    }}\n                  >\n                    {\"Family Common Name\"}\n                  </div>\n                  <div\n                    className=\"font-weight-bold \"\n                    style={{\n                      fontSize: \"16pt\",\n                      color: \"white\",\n                      visibility: \"hidden\",\n                    }}\n                  >\n                    {\"Cover Crop Name\"}\n                  </div>\n                  <small\n                    className=\"font-italic\"\n                    style={{ color: \"white\", visibility: \"hidden\" }}\n                  >\n                    {\"Scientific Name\"}\n                  </small>\n                  <div>\n                    <small className=\"text-muted\">\n                      <a\n                        style={{\n                          textDecoration: \"underline\",\n                          color: \"white\",\n                          visibility: \"hidden\",\n                        }}\n                        // href=\"/#\"\n                      >\n                        View Crop Details\n                      </a>\n                    </small>\n                  </div>\n                </CardContent>\n                <hr\n                  style={{\n                    borderTop: \"1px solid rgba(0,0,0,0)\",\n                    visibility: \"hidden\",\n                  }}\n                />\n                <CardContent\n                  style={{ paddingRight: \"0px\", paddingLeft: \"0px\" }}\n                >\n                  {comparisonKeys.map((keys, index) => {\n                    return (\n                      <div\n                        style={lightBorder}\n                        key={index}\n                        id={`comparisonLabel-${keys.split(\" \").join(\"\")}`}\n                      >\n                        <span>\n                          <DataTooltip\n                            data={getTooltipData(keys)}\n                            interactive={false}\n                            placement=\"top-start\"\n                          />\n                        </span>\n                        <span>\n                          <Typography\n                            variant=\"body2\"\n                            className=\"text-capitalize\"\n                          >\n                            {keys === \"Cover Crop Group\"\n                              ? \"Cover Crop Type\"\n                              : keys}\n                          </Typography>\n                        </span>\n                      </div>\n                    );\n                  })}\n\n                  {/* Average Goal Rating: Show only if goals are selected */}\n                  {state.selectedGoals.length > 0 ? (\n                    <div style={lightBorder}>\n                      <span>\n                        <DataTooltip\n                          data={\"Average rating of all selected goals\"}\n                          interactive={false}\n                          placement=\"top-start\"\n                        />\n                      </span>\n                      <span>\n                        <Typography variant=\"body2\">\n                          Average Goal Rating\n                        </Typography>\n                      </span>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n        {/* Actual crops show up from here */}\n        <div className=\"col-xl-9 col-lg-8 col-md-8 comparisonContainer\">\n          {showScrollArrows || selectedCrops.length > 4 ? (\n            <>\n              {showLeftScrollArrow ? (\n                <div className=\"arrowLeftContainer\">\n                  <IconButton\n                    size=\"medium\"\n                    title=\"Scroll Left\"\n                    aria-label=\"Scroll Left\"\n                    onClick={() => scrollContainer(\"left\", 150)}\n                  >\n                    <KeyboardArrowLeft fontSize=\"large\" />\n                  </IconButton>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              <div className=\"arrowRightContainer\">\n                <IconButton\n                  size=\"medium\"\n                  title=\"Scroll Right\"\n                  aria-label=\"Scroll Right\"\n                  onClick={() => scrollContainer(\"right\", 150)}\n                >\n                  <KeyboardArrowRight fontSize=\"large\" />\n                </IconButton>\n              </div>\n            </>\n          ) : (\n            \"\"\n          )}\n\n          <div\n            className=\"row pt-3\"\n            id=\"scrollContainer\"\n            onScroll={() => {\n              // show arrows\n              setShowScrollArrow(true);\n              let a = document.getElementById(\"scrollContainer\").scrollLeft;\n              if (a === 0) {\n                setShowLeftScrollArrow(false);\n              } else {\n                setShowLeftScrollArrow(true);\n              }\n            }}\n          >\n            {selectedCrops.map((crop, index) => (\n              <div className=\"col-xl-3 col-lg-5\" key={index}>\n                <Card className=\"mainComparisonCard\" style={{ width: \"100%\" }}>\n                  <span\n                    onClick={() => removeCrop(crop.id, crop.cropName)}\n                    className=\"cardCloseIcon\"\n                  >\n                    <Cancel titleAccess=\"Remove Crop\" />\n                  </span>\n                  {crop.data[\"Image Data\"] ? (\n                    <CardMedia\n                      image={\n                        crop.data[\"Image Data\"][\"Key Thumbnail\"]\n                          ? `/images/Cover Crop Photos/250/${crop.data[\"Image Data\"][\"Key Thumbnail\"]}`\n                          : \"https://placehold.it/100x100?text=Placeholder\"\n                      }\n                      title={crop.cropName}\n                      style={{ width: \"100%\", height: \"100px\" }}\n                    />\n                  ) : (\n                    <CardMedia\n                      children={\n                        <img\n                          src=\"https://via.placeholder.com/100/?text=Placeholder\"\n                          style={{ width: \"100%\", height: \"100px\" }}\n                          alt=\"Placeholder\"\n                        />\n                      }\n                    />\n                  )}\n\n                  <CardContent>\n                    <div\n                      className=\"font-weight-bold text-muted text-uppercase\"\n                      style={{ fontSize: \"10pt\" }}\n                    >\n                      {`Zone ${crop.data[\"Zone\"]}`}\n                    </div>\n                    <div\n                      className=\"font-weight-bold text-muted text-uppercase\"\n                      style={{ fontSize: \"10pt\" }}\n                    >\n                      {crop.data[\"Family Common Name\"]}\n                    </div>\n                    <div\n                      className=\"font-weight-bold \"\n                      style={{ fontSize: \"16pt\" }}\n                    >\n                      {flipCoverCropName(crop.data[\"Cover Crop Name\"])}\n                    </div>\n                    <small className=\"font-italic text-muted\">\n                      {trimString(crop.data[\"Scientific Name\"], 25)}\n                    </small>\n                    <div>\n                      <small className=\"text-muted\">\n                        <a\n                          style={{\n                            textDecoration: \"underline\",\n                            color: \"rgb(53, 153, 155)\",\n                          }}\n                          onClick={() => handleModalOpen({ fields: crop.data })}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          // href=\"/#\"\n                        >\n                          View Crop Details\n                        </a>\n                      </small>\n                    </div>\n                  </CardContent>\n                  <hr />\n                  <CardContent\n                    style={{\n                      paddingRight: \"0px\",\n                      paddingLeft: \"0px\",\n                      paddingBottom: \"0px\",\n                    }}\n                  >\n                    {comparisonKeys.map((filterKey, index) => (\n                      <RenderRelevantData\n                        key={index}\n                        filterKey={filterKey}\n                        data={crop.data}\n                        index={index}\n                      />\n                    ))}\n                    {/* Show Goal Rating Only IF Goals > 0 */}\n                    {state.selectedGoals.length > 0 ? (\n                      <div style={lightBG}>\n                        <GetAverageGoalRating crop={crop} />\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </CardContent>\n                  <CardActionArea\n                    style={{\n                      backgroundColor: \"#e3f2f4\",\n                      textAlign: \"center\",\n                      padding: \"0.5em\",\n                    }}\n                    onClick={() => removeCrop(crop.id, crop.cropName)}\n                  >\n                    <Typography\n                      variant=\"body2\"\n                      className=\"text-uppercase\"\n                      style={{\n                        color: \"black\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      REMOVE\n                    </Typography>\n                  </CardActionArea>\n                </Card>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <CropDetailsModalComponent\n        modalOpen={modalOpen}\n        setModalOpen={setModalOpen}\n        crop={modalData}\n      />\n    </div>\n  );\n};\n\nconst RenderRelevantData = ({ filterKey = \"\", data = [], index = 0 }) => {\n  if (typeof data[filterKey] === \"number\") {\n    if (data[filterKey].toString().length === 1) {\n      if (filterKey === \"Seed Price per Pound\") {\n        return (\n          <div style={lightBG}>\n            <RenderSeedPriceIcons val={data[\"Seed Price per Pound\"]} />\n          </div>\n        );\n      } else return <div style={lightBG}>{getRating(data[filterKey])}</div>;\n    } else {\n      return (\n        <div style={lightBG}>\n          <Typography variant=\"body2\">{data[filterKey]}</Typography>\n        </div>\n      );\n    }\n  } else {\n    if (filterKey === \"Frost Seeding\" || filterKey === \"Aerial Seeding\") {\n      return (\n        <div style={lightBG}>\n          <RenderSeedingData data={data} filterKey={filterKey} />\n        </div>\n      );\n    } else if (data[filterKey]) {\n      return (\n        <div style={lightBG}>\n          <Typography variant=\"body2\">{data[filterKey].toString()}</Typography>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n};\n\nconst RenderSeedingData = ({ filterKey, data }) => {\n  if (data[filterKey]) {\n    return <Typography variant=\"body2\">Yes</Typography>;\n  } else {\n    return <Typography variant=\"body2\">N/A</Typography>;\n  }\n};\nconst GetAverageGoalRating = ({ crop }) => {\n  const {state} = useContext(Context);\n  let goalRating = 0;\n  if (state.selectedGoals.length > 0) {\n    state.selectedGoals.forEach((goal) => {\n      if (crop.data[goal]) {\n        goalRating += crop.data[goal];\n      }\n    });\n  }\n  return getRating(goalRating / state.selectedGoals.length);\n};\n\nexport default MyCoverCropComparisonComponent;\n","/* \n  Contains the list of crops that the user selected\n  redirectToExplorer is used to handle sending user back to the home page\n  TopBar contains the blue bar for adding crops\n*/\n\nimport { Button, Typography } from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport React, { Fragment, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../../store/Store\";\nimport MyCoverCropCardsComponent from \"./MyCoverCropCardsComponent\";\nimport MyCoverCropComparisonComponent from \"./MyCoverCropComparisonComponent\";\nimport ReactGA from \"react-ga\";\n\nconst MyCoverCropList = (props) => {\n  const {state, dispatch} = useContext(Context);\n  const comparisonView = props.comparisonView ? props.comparisonView : false;\n  const from = props.from ? props.from : \"state\";\n  const history = useHistory();\n  const redirectToSpeciesSelector = () => {\n    history.replace(\"/species-selector\");\n    dispatch({\n      type: \"ACTIVATE_SPECIES_SELECTOR_TILE\",\n      data: {\n        speciesSelectorActivationFlag: true,\n        myCoverCropActivationFlag: false,\n      },\n    });\n  };\n\n  const redirectToExplorer = () => {\n    history.replace(\"/\");\n  };\n\n  useEffect(() => {\n    if (state.consent === true) {\n      console.log(\"viewing list\");\n      ReactGA.initialize(\"UA-181903489-1\");\n\n      ReactGA.pageview(\"cover crop list\");\n    }\n  }, [state.consent]);\n\n  const TopBar = ({ comparisonView }) => {\n    return (\n      <div className=\"row\">\n        <div\n          className=\"col-12 myCoverCropsBlueBar\"\n          style={{\n            backgroundColor: \"#35999b\",\n            height: \"40px\",\n            borderTopLeftRadius: \"5px\",\n            borderTopRightRadius: \"5px\",\n          }}\n        >\n          <div className=\"row\">\n            {comparisonView ? (\n              <div className=\"col-8\">\n                <Button\n                  style={{ color: \"white\" }}\n                  onClick={\n                    from === \"myCoverCropListStatic\"\n                      ? redirectToExplorer\n                      : redirectToSpeciesSelector\n                  }\n                >\n                  <Add /> <span className=\"pl-2\">ADD A CROP</span>\n                </Button>\n              </div>\n            ) : (\n              <div className=\"col-8\">\n                <Button\n                  style={{ color: \"white\" }}\n                  onClick={\n                    from === \"myCoverCropListStatic\"\n                      ? redirectToExplorer\n                      : redirectToSpeciesSelector\n                  }\n                >\n                  <Add /> <span className=\"pl-2\">ADD A CROP</span>\n                </Button>\n              </div>\n            )}\n\n            <div className=\"col-6\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div className=\"container-fluid\">\n      {state.selectedCrops.length === 0 ? (\n        <Typography variant=\"body1\">\n          Your list is empty.{\" \"}\n          <Button\n            onClick={\n              from === \"myCoverCropListStatic\"\n                ? redirectToExplorer\n                : redirectToSpeciesSelector\n            }\n          >\n            Add Crops\n          </Button>\n        </Typography>\n      ) : comparisonView ? (\n        <Fragment>\n          <TopBar comparisonView={comparisonView} />\n          <div className=\"row mt-2\">\n            <MyCoverCropComparisonComponent\n              selectedCrops={state.selectedCrops}\n            />\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <TopBar comparisonView={comparisonView} />\n          <div className=\"row\">\n            <div className=\"d-flex flex-wrap mt-2\">\n              {state.selectedCrops.map((crop, index) => (\n                <MyCoverCropCardsComponent\n                  key={index}\n                  cardNo={index + 1}\n                  data={crop.data}\n                  btnId={crop.id}\n                  itemNo={index}\n                />\n              ))}\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default MyCoverCropList;\n","/*\n  This file contains the CropLegendModal and it's styles\n  The CropLegendModal shows the color legend for the calendar view\n  Styles are created using makeStyles\n*/\n\nimport {\n  Backdrop,\n  Button,\n  Fade,\n  makeStyles,\n  Modal,\n  Typography,\n} from \"@material-ui/core\";\nimport { CloseRounded, FiberManualRecord } from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: \"1em\",\n    width: \"30%\",\n  },\n}));\n\nconst CropLegendModal = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Modal\n      open={props.legendModal}\n      onClose={props.handleLegendModal}\n      BackdropComponent={Backdrop}\n      disableBackdropClick={props.disableBackdropClick}\n      className={classes.modal}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={props.legendModal}>\n        <div className={`modalLegendPaper ${classes.paper}`}>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-6\">\n                <Typography variant=\"h4\">LEGEND</Typography>\n              </div>\n              <div className=\"col-6 text-right\">\n                <Button onClick={props.handleLegendModal}>\n                  <CloseRounded />\n                </Button>\n              </div>\n            </div>\n            <div className=\"row mt-5\">\n              <div className=\"col-12 legendModalRow\">\n                <Typography variant=\"body1\">\n                  <FiberManualRecord className=\"reliable\" />\n                  <span className=\"pl-3\">{\"Reliable Establishment\"}</span>\n                </Typography>\n              </div>\n              <div className=\"col-12 legendModalRow\">\n                <Typography variant=\"body1\">\n                  <FiberManualRecord className=\"temperatureRisk\" />\n                  <span className=\"pl-3\">\n                    {\"Temperature Risk To Establishment\"}\n                  </span>\n                </Typography>\n              </div>\n              <div className=\"col-12 legendModalRow\">\n                <Typography variant=\"body1\">\n                  <FiberManualRecord className=\"frostPossible\" />\n                  <span className=\"pl-3\">{\"Frost Seeding Possible\"}</span>\n                </Typography>\n              </div>\n              <div className=\"col-12 legendModalRow\">\n                <Typography variant=\"body1\">\n                  <FiberManualRecord className=\"cashCrop\" />\n                  <span className=\"pl-3\">\n                    {\"Previous Cash Crop Growth Window\"}\n                  </span>\n                </Typography>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  );\n};\n\nexport default CropLegendModal;\n","/*\n  This file contains the CropCalendarViewComponent  \n  The CropCalendarViewComponent shows the crops in calendar format\n  Styles are created using makeStyles\n*/\n\nimport {\n  Button,\n  CircularProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  AcUnit,\n  AddCircle,\n  Eco,\n  LocalFlorist,\n  WbSunny,\n} from \"@material-ui/icons\";\nimport React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport {\n  allMonths,\n  CropImage,\n  CustomStyles,\n  flipCoverCropName,\n  getRating,\n  LightButton,\n  sudoButtonStyle,\n  sudoButtonStyleWithPadding,\n  trimString,\n} from \"../../shared/constants\";\nimport { AirtableBearerKey } from \"../../shared/keys\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/cropCalendarViewComponent.scss\";\nimport CropDetailsModalComponent from \"./CropDetailsModal\";\nimport CropLegendModal from \"./CropLegendModal\";\nimport CropSelectorCalendarView from \"./CropSelectorCalendarView\";\n\nconst growthIcon = {\n  color: \"white\",\n};\n\nconst CropCalendarViewComponent = (props) => {\n  const { activeCropData } = props;\n  const {state, dispatch} = useContext(Context);\n  const [legendModal, setLegendModal] = useState(false);\n  const selectedBtns = state.selectedCrops.map((crop) => {\n    return crop.id;\n  });\n\n  const handleLegendModal = () => {\n    setLegendModal(!legendModal);\n  };\n\n  const addCropToBasket = (cropId, cropName, btnId, cropData) => {\n    let selectedCrops = {};\n    var cropArray = [];\n    selectedCrops[\"id\"] = cropId;\n    selectedCrops[\"cropName\"] = cropName;\n    selectedCrops[\"btnId\"] = btnId;\n    selectedCrops[\"data\"] = cropData;\n    cropArray = selectedCrops;\n\n    // // check if crop id exists inside state, if yes then remove it\n    if (state.selectedCrops.length > 0) {\n      // DONE: Remove crop from basket\n      var removeIndex = state.selectedCrops\n        .map(function (item) {\n          return item.btnId;\n        })\n        .indexOf(`${btnId}`);\n      if (removeIndex === -1) {\n        // element not in array\n        dispatch({\n          type: \"SELECTED_CROPS_MODIFIER\",\n          data: {\n            selectedCrops: [...state.selectedCrops, selectedCrops],\n            snackOpen: true,\n            snackMessage: `${cropName} Added`,\n          },\n        });\n      } else {\n        let selectedCropsCopy = state.selectedCrops;\n        selectedCropsCopy.splice(removeIndex, 1);\n        dispatch({\n          type: \"SELECTED_CROPS_MODIFIER\",\n          data: {\n            selectedCrops: selectedCropsCopy,\n            snackOpen: true,\n            snackMessage: `${cropName} Removed`,\n          },\n        });\n      }\n    } else {\n      // DONE: add the selected crop to state and change the state, show snackbar\n\n      dispatch({\n        type: \"SELECTED_CROPS_MODIFIER\",\n        data: {\n          selectedCrops: [cropArray],\n          snackOpen: true,\n          snackMessage: `${cropName} Added`,\n        },\n      });\n    }\n  };\n\n  const headers = new Headers();\n  headers.append(\"Authorization\", `Bearer ${AirtableBearerKey}`);\n\n  const getAverageGoalRating = (selectedGoals, crop) => {\n    // get goal rating for each crop and calculate+render rating\n    let goalRating = 0;\n    selectedGoals.forEach((goal) => {\n      if (crop.fields[goal]) {\n        goalRating += crop.fields[goal];\n      }\n    });\n\n    return getRating(goalRating / selectedGoals.length);\n  };\n\n  const [activeGrowthPeriodState, setActiveGrowthPeriodState] = useState(\n    state.activeGrowthPeriod\n  );\n\n  useEffect(() => {\n    setActiveGrowthPeriodState(state.activeGrowthPeriod);\n  }, [state]);\n\n  const checkIfGrowthMonth = (month) => {\n    if (activeGrowthPeriodState.length !== 0) {\n      if (activeGrowthPeriodState.includes(month)) return true;\n      else return false;\n    } else {\n      return false;\n    }\n  };\n\n  const sortReset = (from = \"cropName\") => {\n    // reset to default\n    const { selectedGoals } = state;\n    let activeCropDataShadow = props.activeCropData;\n    selectedGoals\n      .slice()\n      .reverse()\n      .forEach((goal) => {\n        activeCropDataShadow.sort((a, b) => {\n          if (a.fields[goal] && b.fields[goal]) {\n            if (a.fields[goal] > b.fields[goal]) {\n              return -1;\n            } else {\n              return 1;\n            }\n          }\n          return 0;\n        });\n      });\n    props.setActiveCropData(activeCropDataShadow);\n  };\n  const sortCropsByName = () => {\n    let activeCropDataShadow = props.activeCropData;\n    sortReset(\"cropName\");\n\n    if (nameSortFlag) {\n      if (activeCropDataShadow.length > 0) {\n        activeCropDataShadow.sort((a, b) => {\n          var firstCropName = flipCoverCropName(\n            a.fields[\"Cover Crop Name\"].toLowerCase()\n          ).replace(/\\s+/g, \"\");\n          var secondCropName = flipCoverCropName(\n            b.fields[\"Cover Crop Name\"].toLowerCase()\n          ).replace(/\\s+/g, \"\");\n          return firstCropName.localeCompare(secondCropName);\n        });\n\n        props.setActiveCropData(activeCropDataShadow);\n      }\n    } else {\n      if (activeCropDataShadow.length > 0) {\n        activeCropDataShadow.sort((a, b) => {\n          var firstCropName = flipCoverCropName(\n            a.fields[\"Cover Crop Name\"].toLowerCase()\n          ).replace(/\\s+/g, \"\");\n          var secondCropName = flipCoverCropName(\n            b.fields[\"Cover Crop Name\"].toLowerCase()\n          ).replace(/\\s+/g, \"\");\n          if (firstCropName < secondCropName) {\n            return 1;\n          }\n          if (firstCropName > secondCropName) {\n            return -1;\n          }\n          return 0;\n        });\n\n        props.setActiveCropData(activeCropDataShadow);\n      }\n\n    }\n\n    setNameSortFlag(!nameSortFlag);\n  };\n\n  const sortBySelectedCrops = () => {\n    sortReset(\"selectedCrops\");\n    let selectedCropsShadow = state.selectedCrops;\n    let activeCropDataShadow = props.activeCropData;\n    if (selectedCropsSortFlag) {\n      if (selectedCropsShadow.length > 0) {\n        let selectedCropIds = [];\n        selectedCropsShadow.forEach((crop) => {\n          selectedCropIds.push(crop.id);\n        });\n        let newActiveShadow = activeCropDataShadow.map((crop) => {\n          if (selectedCropIds.includes(crop.fields.id)) {\n            crop[\"inCart\"] = true;\n          } else {\n            crop[\"inCart\"] = false;\n          }\n          return crop;\n        });\n\n        if (newActiveShadow.length > 0) {\n          newActiveShadow.sort((a) => {\n            if (a.inCart) {\n              return -1;\n            } else {\n              return 1;\n            }\n          });\n\n          props.setActiveCropData(newActiveShadow);\n        }\n      }\n    } else {\n      // sort back to original values\n      sortReset(\"selectedCrops\");\n    }\n    setSelectedCropsSortFlag(!selectedCropsSortFlag);\n  };\n  const [nameSortFlag, setNameSortFlag] = useState(true);\n  const [selectedCropsSortFlag, setSelectedCropsSortFlag] = useState(true);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalData, setModalData] = useState([{}]);\n\n  const RenderCrops = ({ cropData, active = true }) => {\n    return cropData.map((crop, index) => {\n      if (crop.fields[\"Zone Decision\"] === \"Include\")\n        return (\n          <TableRow\n            key={`cropRow${index}`}\n            style={active ? {} : { opacity: \"0.2\" }}\n          >\n            <TableCell\n              className=\"calendarTableCell\"\n              style={{\n                paddingBottom: \"0px\",\n              }}\n            >\n              <div className=\"tdContainer d-flex justify-content-between flex-nowrap\">\n                {crop.fields[\"Image Data\"] ? (\n                  <Button\n                    size=\"small\"\n                    onClick={() => {\n                      setModalData(crop);\n                      setModalOpen(!modalOpen);\n                    }}\n                  >\n                    <CropImage\n                      view={\"calendar\"}\n                      present={true}\n                      src={\n                        crop.fields[\"Image Data\"][\"Key Thumbnail\"]\n                          ? `/images/Cover Crop Photos/${crop.fields[\"Image Data\"][\"Directory\"]}/${crop.fields[\"Image Data\"][\"Key Thumbnail\"]}`\n                          : \"https://placehold.it/100x100\"\n                      }\n                      alt={crop.fields[\"Cover Crop Name\"]}\n                    />\n                  </Button>\n                ) : (\n                  <Button\n                    size=\"small\"\n                    onClick={() => {\n                      setModalData(crop);\n                      setModalOpen(!modalOpen);\n                    }}\n                  >\n                    <CropImage view={\"calendar\"} present={false} />\n                  </Button>\n                )}\n\n                <Button\n                  size=\"small\"\n                  onClick={() => {\n                    setModalData(crop);\n                    setModalOpen(!modalOpen);\n                  }}\n                >\n                  {crop.fields[\"Cover Crop Name\"] !== \"Sorghum-sudangrass\"\n                    ? flipCoverCropName(crop.fields[\"Cover Crop Name\"])\n                    : trimString(\n                        flipCoverCropName(crop.fields[\"Cover Crop Name\"]),\n                        15\n                      )}\n                </Button>\n              </div>\n            </TableCell>\n            {state.selectedGoals.length === 0 ? (\n              \"\"\n            ) : (\n              <TableCell\n                style={{\n                  paddingBottom: \"0px\",\n                  textAlign: \"center\",\n                }}\n              >\n                {getAverageGoalRating(state.selectedGoals, crop)}\n              </TableCell>\n            )}\n            <TableCell colSpan=\"12\">\n              <CropSelectorCalendarView from=\"calendar\" data={crop} />\n            </TableCell>\n\n            <TableCell\n              style={{\n                paddingBottom: \"0px\",\n              }}\n            >\n              {\" \"}\n              <LightButton\n                id={`cartBtn${index}`}\n                style={{\n                  borderRadius: \"0px\",\n                  width: \"130px\",\n                }}\n                className={\n                  selectedBtns.includes(crop.fields.id)\n                    ? \"activeCartBtn\"\n                    : \"inactiveCartBtn\"\n                }\n                onClick={() => {\n                  addCropToBasket(\n                    crop.fields[\"id\"],\n                    crop.fields[\"Cover Crop Name\"],\n                    `cartBtn${index}`,\n                    crop.fields\n                  );\n                }}\n              >\n                {selectedBtns.includes(crop.fields.id)\n                  ? \"ADDED\"\n                  : \"ADD TO LIST\"}\n              </LightButton>\n            </TableCell>\n          </TableRow>\n        );\n      else return <Fragment />;\n    });\n  };\n  return (\n    <Fragment>\n      {state.ajaxInProgress ? (\n        <div className=\"circularCentered\">\n          <CircularProgress size={\"6em\"} />\n        </div>\n      ) : (\n        <TableContainer\n          component=\"div\"\n          className=\"table-responsive calendarTableViewWrapper\"\n          style={{ lineHeight: \"0.5\" }}\n        >\n          <Table\n            stickyHeader\n            className=\"table calendarViewTable table-sm table-borderless\"\n            style={{}}\n          >\n            <TableHead className=\"tableHeadWrapper\">\n              <TableRow className=\"calFirstHeadRow\">\n                <TableCell\n                  colSpan={state.activeGrowthPeriod.length === 0 ? 2 : 1}\n                  style={{ backgroundColor: \"white\" }}\n                ></TableCell>\n                {state.activeGrowthPeriod.length === 0 ? (\n                  <TableCell\n                    colSpan=\"12\"\n                    style={{\n                      borderBottom: \"5px solid white\",\n                    }}\n                  >\n                    <div className=\"container-fluid\">\n                      <div className=\"row\">\n                        <div className=\"col-6\">\n                          <Typography variant=\"body1\">\n                            <div style={sudoButtonStyleWithPadding}>\n                              COVER CROP GROWTH WINDOW\n                            </div>\n                          </Typography>\n                        </div>\n                        <div className=\"col-6\">\n                          <Typography variant=\"body1\">\n                            <Button\n                              startIcon={<AddCircle />}\n                              onClick={handleLegendModal}\n                            >\n                              Legend\n                            </Button>\n                          </Typography>\n                        </div>\n                      </div>\n                    </div>\n                  </TableCell>\n                ) : (\n                  <Fragment>\n                    <TableCell\n                      colSpan=\"1\"\n                      style={{\n                        borderBottom: \"5px solid white\",\n                        borderRight: \"5px solid white\",\n                      }}\n                    >\n                      <div style={sudoButtonStyleWithPadding}>\n                        ACTIVE GROWTH PERIOD\n                      </div>\n                    </TableCell>\n                    {state.activeGrowthPeriod.includes(\"Jan\") ? (\n                      <Tooltip placement=\"top\" title=\"Winter\">\n                        <TableCell\n                          className=\"activeGrowthMonth growthMonthSeparator\"\n                          style={{\n                            backgroundColor: CustomStyles().darkGreen,\n                          }}\n                          colSpan=\"2\"\n                        >\n                          <Typography variant=\"body1\">\n                            <AcUnit style={growthIcon} />\n                          </Typography>\n                        </TableCell>\n                      </Tooltip>\n                    ) : (\n                      <TableCell\n                        style={{ borderBottom: \"5px solid white\" }}\n                        colSpan=\"2\"\n                      ></TableCell>\n                    )}\n                    {state.activeGrowthPeriod.includes(\"Mar\") ? (\n                      <Tooltip placement=\"top\" title=\"Spring\">\n                        <TableCell\n                          className=\"activeGrowthMonth growthMonthSeparator\"\n                          style={{\n                            backgroundColor: CustomStyles().darkGreen,\n                          }}\n                          colSpan=\"3\"\n                        >\n                          <Typography variant=\"body1\">\n                            <LocalFlorist style={growthIcon} />\n                          </Typography>\n                        </TableCell>\n                      </Tooltip>\n                    ) : (\n                      <TableCell\n                        style={{ borderBottom: \"5px solid white\" }}\n                        colSpan=\"3\"\n                      ></TableCell>\n                    )}\n                    {state.activeGrowthPeriod.includes(\"Jun\") ? (\n                      <Tooltip placement=\"top\" title=\"Summer\">\n                        <TableCell\n                          className=\"activeGrowthMonth growthMonthSeparator\"\n                          style={{\n                            backgroundColor: CustomStyles().darkGreen,\n                          }}\n                          colSpan=\"3\"\n                        >\n                          <Typography variant=\"body1\">\n                            <WbSunny style={growthIcon} />\n                          </Typography>\n                        </TableCell>\n                      </Tooltip>\n                    ) : (\n                      <TableCell\n                        style={{ borderBottom: \"5px solid white\" }}\n                        colSpan=\"3\"\n                      ></TableCell>\n                    )}\n                    {state.activeGrowthPeriod.includes(\"Sep\") ? (\n                      <Tooltip placement=\"top\" title=\"Fall\">\n                        <TableCell\n                          className=\"activeGrowthMonth growthMonthSeparator\"\n                          style={{\n                            backgroundColor: CustomStyles().darkGreen,\n                          }}\n                          colSpan=\"3\"\n                        >\n                          <Typography variant=\"body1\">\n                            <Eco style={growthIcon} />\n                          </Typography>\n                        </TableCell>\n                      </Tooltip>\n                    ) : (\n                      <TableCell\n                        style={{ borderBottom: \"5px solid white\" }}\n                        colSpan=\"3\"\n                      ></TableCell>\n                    )}\n                    {state.activeGrowthPeriod.includes(\"Dec\") ? (\n                      <Tooltip placement=\"top\" title=\"Winter\">\n                        <TableCell\n                          className=\"activeGrowthMonth growthMonthSeparator\"\n                          style={{\n                            backgroundColor: CustomStyles().darkGreen,\n                          }}\n                          colSpan=\"1\"\n                        >\n                          <Typography variant=\"body1\">\n                            <AcUnit style={growthIcon} />\n                          </Typography>\n                        </TableCell>\n                      </Tooltip>\n                    ) : (\n                      <TableCell\n                        style={{ borderBottom: \"5px solid white\" }}\n                        colSpan=\"1\"\n                      ></TableCell>\n                    )}\n                  </Fragment>\n                )}\n                {state.activeGrowthPeriod.length > 0 ? (\n                  <TableCell\n                    style={{\n                      borderLeft: \"5px solid white\",\n                      borderBottom: \"5px solid white\",\n                    }}\n                  >\n                    <div className=\"col-12\">\n                      <Typography variant=\"body1\">\n                        <Button\n                          startIcon={<AddCircle />}\n                          onClick={handleLegendModal}\n                        >\n                          Legend\n                        </Button>\n                      </Typography>\n                    </div>\n                  </TableCell>\n                ) : (\n                  <TableCell style={{ backgroundColor: \"white\" }}></TableCell>\n                )}\n              </TableRow>\n              <TableRow className=\"calSecondHeadRow\">\n                <TableCell\n                  style={{ width: \"17%\", borderRight: \"5px solid white\" }}\n                >\n                  <Button onClick={sortCropsByName}>COVER CROPS</Button>\n                </TableCell>\n                {state.selectedGoals.length === 0 ? (\n                  \"\"\n                ) : (\n                  <TableCell\n                    style={{ width: \"13%\", borderRight: \"5px solid white\" }}\n                  >\n                    <Button onClick={sortReset}>AVERAGE GOAL RATING</Button>\n                  </TableCell>\n                )}\n\n                {allMonths.map((month, index) => {\n                  const growthMonth = checkIfGrowthMonth(month);\n                  const growthMonthSeparator = growthMonth\n                    ? month === \"Feb\" ||\n                      month === \"May\" ||\n                      month === \"Aug\" ||\n                      month === \"Nov\"\n                      ? true\n                      : false\n                    : false;\n\n                  return (\n                    <TableCell\n                      key={`monthskey${index}`}\n                      className={`calendarSecondHeadMonth ${\n                        growthMonth ? `activeGrowthMonth` : ``\n                      } ${growthMonthSeparator ? `growthMonthSeparator` : ``}`}\n                    >\n                      <div style={sudoButtonStyle}>{month}</div>\n                    </TableCell>\n                  );\n                })}\n\n                <TableCell\n                  style={{ width: \"10%\", borderLeft: \"5px solid white\" }}\n                >\n                  <Button onClick={sortBySelectedCrops}>\n                    MY LIST <br />\n                    {`[${state.selectedCrops.length} CROPS]`}\n                  </Button>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody className=\"calendarTableBodyWrapper\">\n              {activeCropData.length > 0 ? (\n                <RenderCrops active={true} cropData={activeCropData} />\n              ) : (\n                \"\"\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        // </div>\n      )}\n      <CropLegendModal\n        legendModal={legendModal}\n        handleLegendModal={handleLegendModal}\n        disableBackdropClick={false}\n      />\n      <CropDetailsModalComponent\n        modalOpen={modalOpen}\n        setModalOpen={setModalOpen}\n        crop={modalData}\n      />\n    </Fragment>\n  );\n};\n\nexport default CropCalendarViewComponent;\n","export const AirtableBearerKey = \"***REMOVED***\";\r\nexport const owner = \"ag-informatics\";\r\nexport const repo = \"covercrops\";\r\nexport const accessToken = \"***REMOVED***\";\r\nexport const googleApiKey = \"***REMOVED***\";","/* \n  Handles rendering the goals and updating them when selected\n*/\n\nimport {\n  Checkbox,\n  Collapse,\n  FormControlLabel,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\nimport React, { Fragment } from \"react\";\nconst RenderFilters = ({\n  filterValues = [],\n  toggleSidebarFilterItems = () => {},\n  classes = {},\n  comparisonKeys = [],\n  dispatch = () => {},\n}) => {\n  const updateCheckboxStatus = (name = \"\") => {\n    let comparisonKeysCopy = comparisonKeys;\n    let indexOfValue = comparisonKeysCopy.indexOf(name);\n    if (indexOfValue === -1) {\n      // doesn't exist\n      comparisonKeysCopy.push(name);\n    } else {\n      comparisonKeysCopy.splice(indexOfValue, 1);\n    }\n\n    dispatch({\n      type: \"UPDATE_COMPARISON_KEYS\",\n      data: {\n        comparisonKeys: comparisonKeysCopy,\n      },\n    });\n  };\n\n  return filterValues.map((filter, index) => {\n    if (\n      filter.name === \"Soil Conditions\" ||\n      filter.name === \"Disease & Non Weed Pests\" ||\n      filter.name === \"Beneficials\"\n    ) {\n      return null;\n    } else {\n      return (\n        <Fragment key={`filters-outer-${index}`}>\n          {filter.description !== null ? (\n            <Tooltip\n              interactive\n              arrow\n              placement=\"right-start\"\n              title={\n                <div className=\"filterTooltip\">\n                  <p>{filter.description}</p>\n                </div>\n              }\n              key={`tooltip-outer-${index}`}\n            >\n              <ListItem\n                button\n                className={\n                  filterValues[index].open ? \"filterOpen\" : \"filterClose\"\n                }\n                component=\"div\"\n                onClick={() => toggleSidebarFilterItems(index)}\n              >\n                <ListItemText\n                  primary={\n                    <Typography variant=\"body2\">\n                      {filter.name.toUpperCase()}\n                    </Typography>\n                  }\n                />\n                {filterValues[index].open ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n            </Tooltip>\n          ) : (\n            <ListItem\n              button\n              className={\n                filterValues[index].open ? \"filterOpen\" : \"filterClose\"\n              }\n              component=\"div\"\n              onClick={() => toggleSidebarFilterItems(index)}\n            >\n              <ListItemText\n                primary={\n                  <Typography variant=\"body2\">\n                    {filter.name.toUpperCase()}\n                  </Typography>\n                }\n              />\n              {filterValues[index].open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n          )}\n\n          <Collapse in={filterValues[index].open} timeout=\"auto\">\n            <List component=\"div\" disablePadding>\n              <ListItem component=\"div\" className={classes.subNested}>\n                <Grid container spacing={1}>\n                  {filter.name === \"Cover Crop Type\" ? (\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          //   checked={checkIfSelected(val.name)}\n                          checked={comparisonKeys.includes(\"Cover Crop Group\")}\n                          //   onChange={handleChange}\n                          onChange={() => {\n                            let comparisonKeysCopy = comparisonKeys;\n                            let indexOfValue =\n                              comparisonKeysCopy.indexOf(\"Cover Crop Group\");\n                            if (indexOfValue === -1) {\n                              // doesn't exist\n                              comparisonKeysCopy.push(\"Cover Crop Group\");\n                            } else {\n                              comparisonKeysCopy.splice(indexOfValue, 1);\n                            }\n\n                            dispatch({\n                              type: \"UPDATE_COMPARISON_KEYS\",\n                              data: {\n                                comparisonKeys: comparisonKeysCopy,\n                              },\n                            });\n                          }}\n                          name={filter.name}\n                          color=\"primary\"\n                        />\n                      }\n                      label={<small>{filter.name}</small>}\n                    />\n                  ) : (\n                    filter.values.map((val, index2) =>\n                      val.name !== \"Roller Crimp at Flowering\" ? (\n                        <Grid item xs={12} key={`filter-inner-${index2}`}>\n                          <Tooltip\n                            interactive\n                            arrow\n                            placement=\"right\"\n                            title={\n                              <div className=\"filterTooltip\">\n                                <p\n                                  dangerouslySetInnerHTML={{\n                                    __html: val.description,\n                                  }}\n                                ></p>\n                              </div>\n                            }\n                            key={`tooltip${index}`}\n                          >\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={comparisonKeys.includes(\n                                    val.alternateName\n                                      ? val.alternateName\n                                      : val.name\n                                  )}\n                                  onChange={() => {\n                                    updateCheckboxStatus(\n                                      val.alternateName\n                                        ? val.alternateName\n                                        : val.name\n                                    );\n                                  }}\n                                  name={val.name}\n                                  color=\"primary\"\n                                />\n                              }\n                              label={<small>{val.name}</small>}\n                            />\n                          </Tooltip>\n                        </Grid>\n                      ) : (\n                        \"\"\n                      )\n                    )\n                  )}\n                </Grid>\n              </ListItem>\n            </List>\n          </Collapse>\n        </Fragment>\n      );\n    }\n  });\n};\n\nexport default RenderFilters;\n","/* \n  Handles rendering the goals and updating them when selected\n*/\n\nimport {\n  Checkbox,\n  Collapse,\n  FormControlLabel,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\nimport React, { Fragment } from \"react\";\nconst RenderGoals = ({\n  goals = [],\n  setGoals = () => {},\n  goalsOpen,\n  setGoalsOpen = () => {},\n  classes = {},\n  comparisonKeys = [],\n  dispatch = () => {},\n}) => {\n  return (\n    <Fragment>\n      <ListItem\n        button\n        // className={classes.nested}\n        className={goalsOpen ? \"filterOpen\" : \"filterClose\"}\n        component=\"div\"\n        onClick={() => setGoalsOpen(!goalsOpen)}\n      >\n        <ListItemText\n          primary={<Typography variant=\"body2\">COVER CROP GOALS</Typography>}\n        />\n        {goalsOpen ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n\n      <Collapse in={goalsOpen} timeout=\"auto\">\n        <List component=\"div\" disablePadding>\n          <ListItem component=\"div\">\n            <Grid container spacing={1}>\n              {goals.map((goal, index) => (\n                <Grid item xs={12} key={`goals-inner-${index}`}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        //   checked={checkIfSelected(val.name)}\n                        checked={comparisonKeys.includes(goal.name)}\n                        //   onChange={handleChange}\n                        onChange={() => {\n                          // check if value exists, add else remove if exists\n                          let comparisonKeysCopy = comparisonKeys;\n                          let indexOfValue = comparisonKeysCopy.indexOf(\n                            goal.name\n                          );\n                          if (indexOfValue === -1) {\n                            // doesn't exist\n                            comparisonKeysCopy.push(goal.name);\n                          } else {\n                            comparisonKeysCopy.splice(indexOfValue, 1);\n                          }\n\n                          dispatch({\n                            type: \"UPDATE_COMPARISON_KEYS\",\n                            data: {\n                              comparisonKeys: comparisonKeysCopy,\n                            },\n                          });\n                        }}\n                        name={goal.name}\n                        color=\"primary\"\n                      />\n                    }\n                    label={<small>{goal.name}</small>}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </ListItem>\n        </List>\n      </Collapse>\n    </Fragment>\n  );\n};\n\nexport default RenderGoals;\n","/* \n  Shows the comparison bar in the crop list component \n  filteredGoals shows which goals are selected\n  filteredVals shows the other filters that are selected\n  toggleSidebarFilterItems toggles the vlaue of a specific filter item\n  resetAllFilters resets all selected items in the sidebar\n  showAllVariables selects all filters\n*/\n\nimport {\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport RenderFilters from \"./RenderFilters\";\nimport RenderGoals from \"./RenderGoals\";\n\nconst ComparisonBar = (props) => {\n  const [filterValues, setFilterValues] = useState([]);\n  const [goalsOpen, setGoalsOpen] = useState(false);\n  const [goals, setGoals] = useState([]);\n  useEffect(() => {\n    const filteredVals = props.filterData.map((filter) => {\n      const vals = filter.values.map((val) => {\n        return {\n          ...val,\n          selected: false,\n        };\n      });\n      return {\n        name: filter.name,\n        description: filter.description || null,\n        open: false,\n        values: vals,\n      };\n    });\n    const filteredGoals = props.goals.map((goal) => {\n      return {\n        name: goal,\n        selected: false,\n      };\n    });\n    setFilterValues(filteredVals);\n    setGoals(filteredGoals);\n  }, [props.filterData, props.goals]);\n\n  const toggleSidebarFilterItems = (index) => {\n    const newSidebarFilterVals = filterValues.map((obj, index2) => {\n      if (index2 === index) return { ...obj, open: !obj.open };\n      else return { ...obj };\n    });\n    setFilterValues(newSidebarFilterVals);\n  };\n  const resetAllFilters = () => {\n    if (props.comparisonKeys.length > 0) {\n      props.dispatch({\n        type: \"UPDATE_COMPARISON_KEYS\",\n        data: {\n          comparisonKeys: [],\n        },\n      });\n    }\n  };\n  const showAllVariables = () => {\n    setGoalsOpen(true);\n    let allGoals = [];\n    allGoals.push(\"Cover Crop Group\");\n    const filteredGoals = props.goals.map((goal) => {\n      return {\n        name: goal,\n        selected: true,\n      };\n    });\n    const filteredVals = props.filterData.map((filter) => {\n      const vals = filter.values.map((val) => {\n        return {\n          ...val,\n          selected: true,\n        };\n      });\n      return {\n        name: filter.name,\n        description: filter.description || null,\n        open: true,\n        values: vals,\n      };\n    });\n\n    const filterKeysAppend = filteredVals.map((val, index) => {\n      if (\n        index !== 0 &&\n        val.name !== \"Soil Conditions\" &&\n        val.name !== \"Disease & Non Weed Pests\" &&\n        val.name !== \"Beneficials\" &&\n        val.name !== \"Disease & Non Weed Pests\"\n      ) {\n        return val.values.map((v) => {\n          if (v.name !== \"Roller Crimp at Flowering\") {\n            return v.alternateName ? v.alternateName : v.name;\n          } else return [];\n        });\n      } else return [];\n    });\n\n    const filterGoalsAppend = filteredGoals.map((v) => v.name);\n\n    allGoals.push(filterKeysAppend.flat(2));\n    allGoals.push(filterGoalsAppend.flat());\n    setFilterValues(filteredVals);\n    setGoals(filteredGoals);\n\n    props.dispatch({\n      type: \"UPDATE_COMPARISON_KEYS\",\n      data: {\n        comparisonKeys: allGoals.flat(2),\n      },\n    });\n  };\n  return props.comparisonView ? (\n    <List\n      component=\"nav\"\n      classes={{ root: props.classes.listRoot }}\n      aria-labelledby=\"nested-list-subheader\"\n      subheader={\n        <ListSubheader\n          classes={{ root: props.classes.listSubHeaderRoot }}\n          component=\"div\"\n          id=\"nested-list-subheader\"\n        >\n          COMPARE BY\n        </ListSubheader>\n      }\n      className={props.classes.root}\n    >\n      {props.comparisonKeys.length > 0 ? (\n        <ListItem onClick={() => {}}>\n          <ListItemText\n            primary={\n              <Typography\n                variant=\"button\"\n                className=\"text-uppercase text-left text-danger font-weight-bold\"\n                onClick={resetAllFilters}\n                style={{ cursor: \"pointer\" }}\n              >\n                Clear Variables\n              </Typography>\n            }\n          />\n        </ListItem>\n      ) : (\n        <ListItem></ListItem>\n      )}\n      <ListItem>\n        <ListItemText\n          primary={\n            <Button\n              size=\"small\"\n              className=\"text-uppercase text-left\"\n              onClick={showAllVariables}\n            >\n              Show All\n            </Button>\n          }\n        />\n      </ListItem>\n      {goals.length > 0 ? (\n        <RenderGoals\n          goals={goals}\n          setGoals={setGoals}\n          goalsOpen={goalsOpen}\n          setGoalsOpen={setGoalsOpen}\n          classes={props.classes}\n          comparisonKeys={props.comparisonKeys}\n          dispatch={props.dispatch}\n        />\n      ) : (\n        \"\"\n      )}\n\n      <RenderFilters\n        filterValues={filterValues}\n        toggleSidebarFilterItems={toggleSidebarFilterItems}\n        classes={props.classes}\n        comparisonKeys={props.comparisonKeys}\n        dispatch={props.dispatch}\n      />\n    </List>\n  ) : (\n    \"\"\n  );\n};\n\nexport default ComparisonBar;\n","/*\n  This file contains the DateRangeDialog component\n  The DateRangeDialog is the component that handles the calendar dialogue\n  Styles are created using makeStyles\n*/\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport DateRangePicker from \"react-daterange-picker\";\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\nimport { CustomStyles } from \"../../shared/constants\";\n\nconst stateDefinitions = {\n  available: {\n    color: null,\n    label: \"Available\",\n  },\n  selected: {\n    color: CustomStyles().lightGreen,\n    label: \"Selected\",\n  },\n};\n\nconst DateRangeDialog = ({\n  open = false,\n  onChange = () => {},\n  close = () => {},\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return (\n    <Dialog\n      maxWidth={\"md\"}\n      fullScreen={fullScreen}\n      open={open}\n      onClose={close}\n      aria-labelledby=\"planting-to-harvest-title\"\n    >\n      <DialogTitle id=\"planting-to-harvest-title\">\n        Cash Crop Growth Window\n      </DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body1\">\n          Specify the Cash Crop Growth Window by selecting the Cash Crop\n          Planting Date then selecting its Harvest Date.\n        </Typography>\n      </DialogContent>\n      <DialogContent>\n        <DateRangePicker\n          firstOfWeek={1}\n          numberOfCalendars={2}\n          selectionType=\"range\"\n          stateDefinitions={stateDefinitions}\n          defaultState=\"available\"\n          value={null}\n          onSelect={(e) => {\n            let startDate = e.start.format(\"YYYY-MM-DD\").toString();\n            let endDate = e.end.format(\"YYYY-MM-DD\").toString();\n            onChange({ startDate: startDate, endDate: endDate });\n            close();\n          }}\n        />\n\n        <DialogActions>\n          <Button onClick={close}>Close</Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default DateRangeDialog;\n","import { Chip, Grid, Tooltip } from '@material-ui/core';\n\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nimport React, {\n  forwardRef,\n  useEffect,\n  useContext,\n  // useImperativeHandle,\n  useState,\n} from 'react';\n\nimport { Context } from \"../../../store/Store\";\n\nconst DollarsAndRatings = ({ data, filter, handleChange }) => {\n  const {state, change} = useContext(Context);  \n  const sfilters = window.location.href.includes('species') ? state.selector : state.explorer;\n\n  // if (!data) return <Fragment></Fragment>;\n  \n  let style =\n    filter.symbol === 'dollar'\n      ? {}\n      : {\n          transform: 'scale(0.8)',\n          transformOrigin: 'top left',\n          width: '150%',\n        };\n\n  return (\n    <div style={style}>\n      {new Array(filter.maxSize)\n        .fill(0)\n        .map((_, i) => i + 1)\n        .map((i) => {\n          const filterKey = filter.name + ': ' + i;\n\n          // const selected = data.includes(i);\n\n          const selected = sfilters[filterKey];\n\n          return (\n            <Chip\n              key={filter.name + i}\n              label={filter.symbol === 'dollar' ? '$'.repeat(i) : i + ' \\u2605'}\n              style={{\n                marginRight: 2,\n                marginBottom: 3,\n              }}\n              color={selected ? 'primary' : 'secondary'}\n              onClick={() => {\n                if (filter.symbol === 'dollar') {\n                  if (selected) {\n                    change('FILTER_OFF', null, filter.name + ': ' + i);\n                    // data = data.filter((d) => d !== i);\n                  } else {\n                    change('FILTER_ON', null, filter.name + ': ' + i);\n                    // data.push(i);\n                  }\n                  // handleChange(filter.name || filter.alternateName, data);\n                  handleChange(filter.name || filter.alternateName);\n                } else {\n                  if (selected) {\n                    change('FILTER_OFF', null, filterKey);\n                    // data = data.filter((j) => j !== i);\n                  } else {\n                    for (let j = 1; j <= filter.maxSize; j++) {\n                      if (j < i) {\n                        change('FILTER_OFF', null, filter.name + ': ' + j);\n                      } else {\n                        change('FILTER_ON', null, filter.name + ': ' + j);\n                      }\n\n                      // if (!data.includes(j)) {\n                      //   data.push(j);\n                      // }\n                    }\n\n                    // for (let j = i; j <= filter.maxSize; j++) {\n                    //   if (!data.includes(j)) {\n                    //     data.push(j);\n                    //   }\n                    // }\n                  }\n                  // handleChange(filter.name || filter.alternateName, data.sort());\n                  handleChange(filter.name || filter.alternateName);\n                }\n              }}\n            />\n          );\n        })}\n    </div>\n  );\n}; // DollarsAndRatings\n\nconst Chips = ({state, filter, handleChange}) => {\n  const sfilters = window.location.href.includes('species') ? state.selector : state.explorer;\n\n  // let { sidebarFilterOptions } = props;\n\n  return filter.values.map((val) => {\n    // const selected = sidebarFilterOptions[filter.name].includes(val);\n\n    const selected = sfilters[filter.name + ': ' + val];\n\n    return (\n      <Chip\n        key={filter.name + val}\n        onClick={() => handleChange(filter.name, val)}\n        component=\"li\"\n        size=\"medium\"\n        label={val}\n        style={{\n          marginRight: 3,\n          marginBottom: 3,\n        }}\n        color={selected ? 'primary' : 'secondary'}\n      />\n    );\n  });\n}; // Chips\n\nconst Tip = ({ filter, omitHeading }) => {\n  let [open, setOpen] = useState(false);\n\n  return (\n    <Tooltip\n      interactive\n      arrow\n      placement=\"right\"\n      disableFocusListener\n      disableHoverListener\n      disableTouchListener\n      open={open}\n      onClick={() => setOpen(!open)}\n      onMouseOut={() => setOpen(false)}\n      title={\n        <div className=\"filterTooltip\">\n          <p dangerouslySetInnerHTML={{__html: filter.description}} />\n        </div>\n      }\n    >\n      <small style={{ whiteSpace: 'nowrap' }}>\n        {omitHeading ? '' : filter.name}\n        <HelpOutlineIcon\n          style={{ cursor: 'pointer', transform: 'scale(0.7)' }}\n        />\n      </small>\n    </Tooltip>\n  )\n}; // Tip\n\nconst Filters = forwardRef(({ props }, ref) => {\n  const {state, change} = useContext(Context);\n\n  let { filters, setSidebarFilterOptions, sidebarFilterOptions } = props;\n\n  // const options = filters.values.reduce(function (acc, cur, i) {\n  //   acc[cur.name || cur.alternateName] = [];\n  //   return acc;\n  // }, {});\n\n  // const [selected, setSelected] = useState(options);\n  const [selected, setSelected] = useState({});\n\n  const setProps = (selected) => {\n    setSidebarFilterOptions({\n      ...sidebarFilterOptions,\n      ...selected,\n    });\n  };\n\n  useEffect(() => {\n    setProps(selected);\n  }, [selected]);\n\n//  useImperativeHandle(ref, () => ({\n//    resetFilters() {\n//      setSelected(options);\n//    },\n//  }));\n\n  const dollarsAndRatingsChange = (filtername, val) => {\n    // setSelected({ ...selected, [filtername]: val });\n    setSelected({ ...selected, whatever: 'rerender' });\n  };\n\n  const chipChange = (filtername, val) => {\n    change('FILTER_TOGGLE', null, filtername + ': ' + val);\n    // change('FILTER_TOGGLE', filtername, val);\n    setSelected({ ...selected, whatever: 'rerender' });\n    // setSelected({ ...selected, [filtername]: val });\n\n    // if (selected[filtername].includes(val)) {\n    //   let filtered = selected[filtername].filter((vals) => vals !== val);\n    //   setSelected({ ...selected, [filtername]: filtered });\n    // } else {\n    //   let added = selected[filtername];\n    //   added.push(val);\n    //   setSelected({ ...selected, [filtername]: added });\n    // }\n  };\n\n  return (\n    <Grid container spacing={2}>\n      {filters.values.map((filter, i) => {\n        if (filter.type === 'chip' || filters.type === 'chips-only') {\n          if (filter.values && filter.values.length === 1) {\n            return (\n              <Grid item>\n                <Chips\n                  state={state}\n                  filter={filter}\n                  props={props}\n                  handleChange={chipChange}\n                />\n                {\n                  filter.description &&\n                  <Tip filter={filter} omitHeading={true} />\n                }\n              </Grid>\n            );\n          } else {\n            return (\n              <Grid item key={i}>\n                {\n                  filter.description &&\n                  <>\n                    <Tip filter={filter} />\n                    <br/>\n                  </>\n                }                \n                <Chips\n                  state={state}\n                  filter={filter}\n                  props={props}\n                  handleChange={chipChange}\n                />\n              </Grid>\n            );\n          }\n        } else {\n          // let data = sidebarFilterOptions[filter.name || filter.alternateName];\n\n          return (\n            <Grid item xs={12}>\n              <Tip filter={filter} />\n              <br />\n              <DollarsAndRatings\n                state={state}\n                filter={filter}\n                // data={data}\n                handleChange={dollarsAndRatingsChange}\n              />\n            </Grid>\n          );\n        }\n      })}\n    </Grid>\n  );\n}); // Filters\n\nexport { Filters };\n","/*\n  TODO\n  Works for everything except SoilConditions(?)\n  Hope to get rid of forwardRef and move this into CropSidebar\n*/\n\nimport React, { forwardRef } from 'react';\nimport { Filters } from './Filters';\nimport '../../../styles/filters.scss';\n\nconst ForwardFilter = forwardRef((props, ref) => (\n  <Filters props={props} ref={ref} />\n));\n\nexport default ForwardFilter;\n","/*\n  This file contains the CropSidebar and its styles\n  The CropSidebar is the sidebar which contains the filtering and calendar view components\n  Styles are created using makeStyles\n*/\n\nimport {\n  Button,\n  Checkbox,\n  Chip,\n  Collapse,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  IconButton,\n  InputAdornment,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  CalendarToday,\n  CalendarTodayRounded,\n  Clear,\n  Compare,\n  ExpandLess,\n  ExpandMore,\n} from \"@material-ui/icons\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport moment from \"moment\";\nimport React, {\n  Fragment,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { arrayMove, List as ListMovable } from \"react-movable\";\nimport { CustomStyles } from \"../../shared/constants\";\n// import filterData from \"../../shared/sidebar-dictionary.json\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/cropSidebar.scss\";\nimport ComparisonBar from \"../MyCoverCropList/ComparisonBar/ComparisonBar\";\nimport DateRangeDialog from \"./DateRangeDialog\";\nimport ForwardFilter from \"./Filters/ForwardFilter\";\nimport sidebarCategoriesData from \"../../shared/json/sidebar/sidebar-categories.json\";\nimport sidebarFiltersData from \"../../shared/json/sidebar/sidebar-filters.json\";\n// import SoilConditions from \"./Filters/SoilConditions\";  // TODO May be obsolete???  rh\n\nconst _ = require(\"lodash\");\n\nconst useStyles = makeStyles((theme) => ({\n  listItemRoot: {\n    borderTop: '0px',\n    border: '1px solid ' + CustomStyles().primaryProgressBtnBorderColor,\n  },\n  formControlLabel: {},\n  listSubHeaderRoot: {\n    backgroundColor: CustomStyles().lightGreen,\n    color: 'black',\n    textAlign: 'center',\n    height: '50px',\n  },\n  nested: {\n    paddingLeft: theme.spacing(3),\n  },\n  subNested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst CropSidebarComponent = (props) => {\n  let {\n    comparisonView,\n    isListView,\n    from,\n    setGrowthWindow,\n    toggleComparisonView,\n    toggleListView,\n    clearCoverCropSearch,\n    style,\n  } = props;\n\n  const classes = useStyles();\n  const {state, dispatch, change} = useContext(Context);\n\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const debug = window.location.href.includes('localhost');\n\n  const sfilters = state[section];\n\n  const [loading, setLoading] = useState(true);\n\n  // TODO: When is showFilters false?\n  const [showFilters, setShowFilters] = useState(\n    window.location.pathname === \"/\"\n      ? from === \"table\"\n        ? state.speciesSelectorActivationFlag\n          ? true\n          : comparisonView\n          ? true\n          : false\n        : true\n      : true\n  );\n\n  useEffect(() => {\n    const value = \n      window.location.pathname === '/'\n        ? from === 'table'\n          ? state.speciesSelectorActivationFlag\n            ? true\n            : comparisonView\n            ? true\n            : false\n          : true\n        : true;\n\n    if (debug && !value) {\n      alert('RICK: useEffect value IS false');\n    }\n    setShowFilters(value);\n  }, [debug, state.speciesSelectorActivationFlag, from, comparisonView]);\n\n  const [cashCropVisible, setCashCropVisible] = useState(true);  // TODO: buggy(?)\n\n  const [dateRange, setDateRange] = useState({\n    startDate: null,\n    endDate: null,\n  });\n\n  const [sidebarFilters, setSidebarFilters] = useState([]);\n\n  const dateRangeModalOpen = () => {\n    change('TRUE', null, 'dateRangeOpen');\n  };\n\n  // make an exhaustive array of all params in array e.g. cover crop group and use includes in linq\n  const [sidebarFilterOptions, setSidebarFilterOptions] = useState(() => {\n    const sidebarStarter = {};\n    sidebarFiltersData.forEach((row) => sidebarStarter[row.name] = []);\n    return sidebarStarter;\n  });\n\n  const areCommonElements = (arr1, arr2) => {\n    const arr2Set = new Set(arr2);\n    return arr1.some((el) => arr2Set.has(el));\n  } // areCommonElements\n\n  useEffect(() => {\n    const sfo = {};\n\n    Object.keys(sfilters).forEach(key => {\n      if (sfilters[key]) {\n        const [k, value] = key.split(': ');\n        if (value) {\n          sfo[k] = sfo[k] || [];\n          sfo[k].push(+value || value);\n        }\n      }\n    });\n\n    let crop_data = state.cropData.filter((crop) => crop.fields['Zone Decision'] === 'Include');\n\n    let search = sfilters.cropSearch.toLowerCase().match(/\\w+/g);\n\n    crop_data = state.cropData.filter((crop) => {\n      const match = (parm) => {\n        const m = crop.fields[parm].toLowerCase().match(/\\w+/g);\n\n        return !search || search.every((s) => m.some((t) => t.includes(s)));\n      };\n\n      return match('Cover Crop Name') || match('Scientific Name');\n    });\n\n    const nonZeroKeys2 = Object.keys(sfo).map((key) => {\n      if (sfo[key].length !== 0) {\n        return { [key]: sfo[key] };\n      } else {\n        return '';\n      }\n    });\n\n    // console.log(JSON.stringify(sfo));\n    // console.log(JSON.stringify(nonZeroKeys2));\n\n    let growthArray = [];\n\n    if (sfilters['Active Growth Period: Fall']) {\n      growthArray.push('Sep', 'Oct', 'Nov');\n    }\n    if (sfilters['Active Growth Period: Winter']) {\n      growthArray.push('Dec', 'Jan', 'Feb');\n    }\n    if (sfilters['Active Growth Period: Spring']) {\n      growthArray.push('Mar', 'Apr', 'May');\n    }\n    if (sfilters['Active Growth Period: Summer']) {\n      growthArray.push('Jun', 'Jul', 'Aug');\n    }\n\n    // dispatch({\n    //   type: 'UPDATE_ACTIVE_GROWTH_PERIOD',\n    //   data: {\n    //     activeGrowthPeriod: growthArray,\n    //   },\n    // });\n\n    const arrayKeys = [\n      'Duration',\n      'Active Growth Period',\n      'Winter Survival',\n      'Flowering Trigger',\n      'Root Architecture',\n    ];\n    const booleanKeys = ['Aerial Seeding', 'Frost Seeding'];\n\n    const filtered = crop_data.filter((crop) => {\n      const totalActiveFilters = Object.keys(nonZeroKeys2).length;\n      let i = 0;\n      nonZeroKeys2.forEach((keyObject) => {\n        const key = Object.keys(keyObject);\n        const vals = keyObject[key];\n\n        if (areCommonElements(arrayKeys, key)) {\n          // Handle array type havlues\n          if (_.intersection(vals, crop.fields[key]).length > 0) {\n            i++;\n          }\n        } else if (areCommonElements(booleanKeys, key)) {\n          //  Handle boolean types\n          if (crop.fields[key]) {\n            i++;\n          }\n        } else if (vals.includes(crop.fields[key])) {\n          i++;\n        }\n      });\n\n      return i === totalActiveFilters;\n    });\n\n    dispatch({\n      type: 'UPDATE_ACTIVE_CROP_DATA',\n      data: {\n        value: filtered,\n      },\n    });\n  }, [state.changedFilters, sfilters.cropSearch, state.cropData, dispatch, sfilters]);\n\n  const filtersSelected = Object.keys(sfilters).filter(key => sfilters[key]).length > 1;\n\n  const resetAllFilters = () => {\n    change('CLEAR_FILTERS');\n  };\n\n  useEffect(() => {\n    let dictionary = [];\n\n    const generateSidebarObject = async (dataDictionary) => {\n      sidebarCategoriesData.forEach((category) => {\n        let newCategory = {\n          name        : category.name,\n          description : category.description,\n          type        : category.type\n        };\n        switch (category.type) {\n          case 'rating-only':\n            newCategory.values = category.filters.map((f) => {\n              const data = sidebarFiltersData.filter(\n                (dictFilter) => dictFilter.__id === f\n              )[0];\n\n              let obj = {\n                name: data.name,\n                alternateName: data.dataDictionaryName,\n                symbol: data.symbol,\n                maxSize: data.maxSize,\n              };\n\n              const field = dataDictionary.filter(\n                (item) => item.Variable === data.dataDictionaryName\n              );\n\n              const description = field[0].Description;\n              const valuesDescription = field[0]['Values Description'];\n\n              obj.description = `${description}${\n                valuesDescription ? ' <br><br>' : ''\n              }${valuesDescription ? valuesDescription : ''}`;\n              \n              return obj;\n            });\n            break;\n          case 'chips-only':\n            if (category.name === 'Cover Crop Type') {\n              const data = sidebarFiltersData.filter(\n                (dictFilter) => dictFilter.__id === category.filters[0]\n              )[0];\n\n              newCategory.values = [{\n                name: data.name,\n                alternateName: data.dataDictionaryName,\n                symbol: null,\n                maxSize: data.maxSize,\n                values: data.values.split(/\\s*,\\s*/),\n              }];\n            } else {\n              newCategory.description = null;\n              newCategory.values = category.filters.map((f) => {\n                const data = sidebarFiltersData.filter(\n                  (dictFilter) => dictFilter.__id === f\n                )[0];\n\n                let obj = {\n                  name: data.name,\n                  alternateName: data.dataDictionaryName,\n                  symbol: null,\n                  maxSize: data.maxSize,\n                  values: [data.values],\n                };\n\n                const field = dataDictionary.filter(\n                  (item) => item.Variable === data.dataDictionaryName\n                );\n\n                const description = field[0].Description;\n                const valuesDescription = field[0]['Values Description'];\n\n                obj.description = `${description}${\n                  valuesDescription ? \"<br><br>\" : \"\"\n                }${valuesDescription ? valuesDescription : ''}`;\n                return obj;\n              });\n            }\n            break;\n          case 'chips-rating':\n            newCategory.values = category.filters.map((f) => {\n              const data = sidebarFiltersData.filter(\n                (dictFilter) => dictFilter.__id === f\n              )[0];\n              let obj = {\n                name: data.name,\n                type: data.type,\n                maxSize: null,\n                description: '',\n              };\n\n              if (data.type === 'chip') {\n                obj.values = data.values.split(',').map((val) => val.trim());\n              } else if (data.type === 'rating') {\n                obj.values = [];\n                obj.maxSize = data.maxSize;\n              }\n\n              const field = dataDictionary.filter(\n                (item) => item.Variable === data.dataDictionaryName\n              );\n\n              const description = field[0].Description;\n              const valuesDescription = field[0]['Values Description'];\n\n              obj.description = `${description}${\n                valuesDescription ? \"<br><br>\" : \"\"\n              }${valuesDescription ? valuesDescription : ''}`;\n              return obj;\n            });\n            break;\n          default:\n            break;\n        }\n\n        dictionary.push(newCategory);\n      });\n    };\n\n    const setData = async () => {\n      setSidebarFilters(dictionary);\n    };\n    \n    switch (sfilters.zone) {\n      case 7:\n        setLoading(true);\n        generateSidebarObject(state.zone7Dictionary)\n          .then(() => setData())\n          .then(() => setLoading(false));\n        break;\n      case 6:\n        setLoading(true);\n        generateSidebarObject(state.zone6Dictionary)\n          .then(() => setData())\n          .then(() => setLoading(false));\n        break;\n      case 5:\n        setLoading(true);\n        generateSidebarObject(state.zone5Dictionary)\n          .then(() => setData())\n          .then(() => setLoading(false));\n        break;\n      case 4:\n        setLoading(true);\n        generateSidebarObject(state.zone4Dictionary)\n          .then(() => setData())\n          .then(() => setLoading(false));\n        break;\n      default:\n        break;\n    }\n  }, [\n    sfilters.zone,\n    state.zone4Dictionary,\n    state.zone5Dictionary,\n    state.zone6Dictionary,\n    state.zone7Dictionary,\n  ]);\n\n  const updateSelectedGoals = (newGoalArr, oldIndex, newIndex) => {\n    let newGoals = arrayMove(newGoalArr, oldIndex, newIndex);\n\n    dispatch({\n      type: 'DRAG_GOALS',\n      data: {\n        selectedGoals: newGoals,\n        snackOpen: true,\n        snackMessage: 'Goal Priority Changed',\n      },\n    });\n  } // updateSelectedGoals\n\n  const changeProgress = (type) => {  // TODO: type is only decrement?\n    dispatch({\n      type: 'UPDATE_PROGRESS',\n      data: {\n        type: type.toUpperCase(),\n      },\n    });\n  } // changeProgress\n\n  useEffect(() => {\n    if (from === 'table') {\n      if (dateRange.startDate !== null && dateRange.endDate !== null) {\n        dispatch({\n          type: 'UPDATE_DATE_RANGE',\n          data: {\n            startDate: moment(new Date(dateRange.startDate).toISOString()).format('YYYY-MM-DD'),\n            endDate: moment(new Date(dateRange.endDate).toISOString()).format('YYYY-MM-DD'),\n          },\n        });\n      }\n\n      setGrowthWindow(true);\n    }\n  }, [dateRange, from, setGrowthWindow, dispatch]);\n\n  const [tableHeight, setTableHeight] = useState(0);\n\n  useEffect(() => {  \n    if (\n      document.querySelector('.MuiTableRow-root.theadFirst.MuiTableRow-head')  // TODO:  When is this true?\n    ) {\n      const totalHt = document\n        .querySelector('.MuiTableRow-root.theadFirst.MuiTableRow-head')\n        .getBoundingClientRect().height;\n      const btnHt = document\n        .querySelector('.dynamicToggleBtn')\n        .getBoundingClientRect().height;\n\n      const ht = totalHt - btnHt;\n\n      setTableHeight(ht);\n    }\n  }, []);\n\n  // TODO: Can we use Reducer instead of localStorage?\n  useEffect(() => {\n    if (state.cashCropData.dateRange.startDate) {\n      window.localStorage.setItem(\n        'cashCropDateRange',\n        JSON.stringify(state.cashCropData.dateRange)\n      );\n    }\n  }, [state.cashCropData.dateRange]);\n\n  useEffect(() => {\n    if (state.myCoverCropActivationFlag) {  // TODO: When does this happen?\n      if (comparisonView) {\n        if (filtersSelected) {\n          resetAllFilters();\n        }\n      }\n    }\n  }, [comparisonView, state.myCoverCropActivationFlag]);\n\n  const Filter = (Component, filter) => {\n    return (\n      <Grid container spacing={1}>\n        <Grid item>\n          <Component\n            filters={filter}\n            sidebarFilterOptions={sidebarFilterOptions}\n            setSidebarFilterOptions={setSidebarFilterOptions}\n            resetAllFilters={resetAllFilters}\n            {...props}\n          />\n        </Grid>\n      </Grid>\n    )\n  } // Filter\n\n  const output = (filter) => {\n    return Filter(ForwardFilter, filter);  // SoilConditions???\n  } // output\n\n  const filters = () => (\n    sidebarFilters.map((filter, index) => {\n      return (\n        <Fragment key={index}>\n          {filter.description !== null ? (\n            <Tooltip\n              interactive\n              arrow\n              placement=\"right-start\"\n              title={\n                <div className=\"filterTooltip\">\n                  <p>{filter.description}</p>\n                </div>\n              }\n              key={`tooltip${index}`}\n            >\n              <ListItem\n                // className={classes.nested}\n                className={\n                  state[section + filter.name]\n                    ? \"filterOpen\"\n                    : \"filterClose\"\n                }\n                component=\"div\"\n                onClick={() => change('TOGGLE', null, section + filter.name)}\n              >\n                <ListItemText\n                  primary={\n                    <Typography variant=\"body2\">\n                      {filter.name.toUpperCase()}\n                    </Typography>\n                  }\n                />\n                {state[section + filter.name] ? (\n                  <ExpandLess />\n                ) : (\n                  <ExpandMore />\n                )}\n              </ListItem>\n            </Tooltip>\n          ) : (\n            <ListItem\n              // className={classes.nested}\n              className={\n                state[section + filter.name]\n                  ? \"filterOpen\"\n                  : \"filterClose\"\n              }\n              component=\"div\"\n              onClick={() => change('TOGGLE', null, section + filter.name)}\n            >\n              <ListItemText\n                primary={\n                  <Typography variant=\"body2\">\n                    {filter.name.toUpperCase()}\n                  </Typography>\n                }\n              />\n              {state[section + filter.name] ? (\n                <ExpandLess />\n              ) : (\n                <ExpandMore />\n              )}\n            </ListItem>\n          )}\n\n          <Collapse\n            in={state[section + filter.name]}\n            timeout=\"auto\"\n          >\n            <List component=\"div\" disablePadding>\n              <ListItem\n                // className={classes.subNested}\n                // title={filter.description}\n                component=\"div\"\n              >\n                {output(filter)}\n              </ListItem>\n            </List>\n          </Collapse>\n        </Fragment>\n      );\n    })\n  ); // filters\n\n  const filtersList = () => (\n    <List component=\"div\" disablePadding className=\"cropFilters\">\n      {filtersSelected ? (\n        <ListItem>\n          <ListItemText\n            primary={\n              <Typography\n                variant=\"button\"\n                className=\"text-uppercase text-left text-danger font-weight-bold\"\n                onClick={resetAllFilters}\n                style={{ cursor: \"pointer\" }}\n              >\n                Clear Filters\n              </Typography>\n            }\n          />\n        </ListItem>\n      ) : (\n        <ListItem></ListItem>\n      )}\n      {filters()}\n    </List>\n  ); // filterList\n\n  if (!loading) {\n    return from === \"myCoverCropListStatic\" ? (\n      <div className=\"row\">\n        <div className=\"col-12 mb-3\">\n          <Button\n            className=\"dynamicToggleBtn\"\n            fullWidth\n            variant=\"contained\"\n            onClick={toggleComparisonView}\n            size=\"large\"\n            color=\"secondary\"\n            startIcon={\n              comparisonView ? (\n                <ListIcon style={{ fontSize: \"larger\" }} />\n              ) : (\n                <Compare style={{ fontSize: \"larger\" }} />\n              )\n            }\n          >\n            {comparisonView ? \"LIST VIEW\" : \"COMPARISON VIEW\"}\n          </Button>\n        </div>\n        {comparisonView ? (\n          <div className=\"col-12\">\n            <ComparisonBar\n              {...props}\n              classes={classes}\n              filterData={sidebarFilters}\n              goals={state.selectedGoals.length > 0 ? state.selectedGoals : []}\n              comparisonKeys={state.comparisonKeys}\n              dispatch={dispatch}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    ) : (\n      <div className=\"row\">\n        {state.myCoverCropActivationFlag && from === \"table\" ? (\n          <div\n            className={`col-12 ${\n              !state.speciesSelectorActivationFlag ? `mb-3` : ``\n            }`}\n            style={\n              state.speciesSelectorActivationFlag\n                ? {\n                    paddingBottom: tableHeight,\n                  }\n                : {}\n            }\n          >\n            {/* <div className=\"iconToggle\"> */}\n            <Button\n              className=\"dynamicToggleBtn\"\n              fullWidth\n              variant=\"contained\"\n              onClick={toggleComparisonView}\n              size=\"large\"\n              color=\"secondary\"\n              startIcon={\n                comparisonView ? (\n                  <ListIcon style={{ fontSize: \"larger\" }} />\n                ) : (\n                  <Compare style={{ fontSize: \"larger\" }} />\n                )\n              }\n            >\n              {comparisonView ? \"LIST VIEW\" : \"COMPARISON VIEW\"}\n            </Button>\n          </div>\n        ) : from === \"table\" ? (\n          <div\n            className=\"col-12\"\n            style={{\n              paddingBottom: tableHeight,\n            }}\n          >\n            <Button\n              className=\"dynamicToggleBtn\"\n              fullWidth\n              variant=\"contained\"\n              onClick={toggleListView}\n              size=\"large\"\n              color=\"secondary\"\n              startIcon={\n                isListView ? (\n                  <CalendarToday style={{ fontSize: \"larger\" }} />\n                ) : (\n                  <ListIcon style={{ fontSize: \"larger\" }} />\n                )\n              }\n            >\n              {isListView ? \"CALENDAR VIEW\" : \"LIST VIEW\"}\n            </Button>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {state.speciesSelectorActivationFlag || from === \"explorer\" ? (\n          <div className=\"col-12\" id=\"Filters\">\n            <List\n              component=\"nav\"\n              classes={{ root: classes.listRoot }}\n              aria-labelledby=\"nested-list-subheader\"\n              subheader={\n                <ListSubheader\n                  classes={{ root: classes.listSubHeaderRoot }}\n                  component=\"div\"\n                  id=\"nested-list-subheader\"\n                >\n                  FILTER\n                </ListSubheader>\n              }\n              className={classes.root}\n            >\n              {from === \"table\" ? (\n                <Fragment>\n                  {showFilters &&\n                  state.speciesSelectorActivationFlag &&\n                  isListView ? (\n                    <ListItem>\n                      <ListItemText>\n                        <TextField\n                          fullWidth\n                          color=\"secondary\"\n                          label=\"Cover Crop Name\"\n                          helperText=\"Search by cover crop name\"\n                          value={sfilters.cropSearch}\n                          onChange={(e) => change('CROP_SEARCH', e)}\n                          InputProps={{\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                <IconButton\n                                  onClick={clearCoverCropSearch}\n                                  size=\"small\"\n                                >\n                                  {sfilters.cropSearch.length > 0 && <Clear fontSize=\"inherit\" />}\n                                </IconButton>\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </ListItemText>\n                    </ListItem>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {isListView ? (\n                    <Fragment>\n                      {\" \"}\n                      <ListItem\n                        button\n                        onClick={() => change('TOGGLE', null, 'goalsOpen')}\n                        style={\n                          state.goalsOpen\n                            ? {\n                                backgroundColor: CustomStyles().lightGreen,\n                                borderTop: \"4px solid white\",\n                              }\n                            : {\n                                backgroundColor: \"inherit\",\n                                borderTop: \"4px solid white\",\n                              }\n                        }\n                      >\n                        <ListItemText primary=\"COVER CROP GOALS\" />\n                        {state.goalsOpen ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse in={state.goalsOpen} timeout=\"auto\" unmountOnExit>\n                        {state.selectedGoals.length === 0 ? (\n                          <List component=\"div\" disablePadding>\n                            <ListItem button className={classes.nested}>\n                              <ListItemText primary=\"No Goals Selected\" />\n                            </ListItem>\n                            <ListItem className={classes.nested}>\n                              <Button onClick={() => changeProgress('decrement')}>\n                                click to edit\n                              </Button>\n                            </ListItem>\n                          </List>\n                        ) : (\n                          <Fragment>\n                            <List component=\"div\" disablePadding>\n                              <ListItem className={classes.nested}>\n                                <ListItemText\n                                  primary={\n                                    <div>\n                                      <div>\n                                        <Typography variant=\"body1\">\n                                          {\" \"}\n                                          Goal Priority Order\n                                        </Typography>\n                                      </div>\n                                      <div>\n                                        <Typography\n                                          variant=\"body2\"\n                                          style={{\n                                            fontWeight: \"normal\",\n                                            fontSize: \"10pt\",\n                                          }}\n                                        >\n                                          Click & drag to reorder\n                                        </Typography>\n                                      </div>\n                                    </div>\n                                  }\n                                />\n                              </ListItem>\n                            </List>\n                            <ListMovable\n                              values={state.selectedGoals}\n                              onChange={({ oldIndex, newIndex }) =>\n                                updateSelectedGoals(\n                                  state.selectedGoals,\n                                  oldIndex,\n                                  newIndex\n                                )\n                              }\n                              renderList={({ children, props, isDragged }) => (\n                                <ol\n                                  className=\"goalsListFilter\"\n                                  {...props}\n                                  style={{\n                                    cursor: isDragged ? \"grabbing\" : undefined,\n                                  }}\n                                >\n                                  {children}\n                                </ol>\n                              )}\n                              renderItem={({\n                                value,\n                                props,\n                                isDragged,\n                                isSelected,\n                                index,\n                              }) => (\n                                <li\n                                  {...props}\n                                  style={{\n                                    ...style,\n                                  }}\n                                >\n                                  <div className=\"d-flex w-100 flex-row justify-content-between align-items-center\">\n                                    <div>\n                                      <Typography\n                                        variant=\"body1\"\n                                        style={{\n                                          cursor: isDragged ? \"grabbing\" : \"grab\",\n                                          fontSize: \"10pt\",\n                                          fontWeight:\n                                            isDragged || isSelected\n                                              ? \"700\"\n                                              : \"normal\",\n                                          color: \"#48a8ab\",\n                                          width: \"100%\",\n                                        }}\n                                      >\n                                        {`${index + 1}. ${value}`}\n                                      </Typography>\n                                    </div>\n                                  </div>\n                                </li>\n                              )}\n                            />\n\n                            <ListItem className={classes.nested}>\n                              <ListItemText disableTypography>\n                                <Typography\n                                  variant=\"button\"\n                                  className=\"text-uppercase text-left text-danger font-weight-bold\"\n                                  onClick={() => changeProgress('decrement')}\n                                  style={{ cursor: \"pointer\" }}\n                                >\n                                  &nbsp;Click To Edit\n                                </Typography>\n                              </ListItemText>\n                            </ListItem>\n                          </Fragment>\n                        )}\n                      </Collapse>\n                    </Fragment>\n                  ) : (\n                    \"\"\n                  )}\n\n                  <ListItem\n                    button\n                    onClick={() => change('TOGGLE', null, 'cashCropOpen')}\n                    style={\n                      state.cashCropOpen\n                        ? { backgroundColor: CustomStyles().lightGreen }\n                        : { backgroundColor: \"inherit\" }\n                    }\n                  >\n                    <ListItemText primary=\"PREVIOUS CASH CROP\" />\n                    {state.cashCropOpen ? <ExpandLess /> : <ExpandMore />}\n                  </ListItem>\n                  <Collapse in={state.cashCropOpen} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\">\n                      <ListItem className={classes.nested}>\n                        <TextField\n                          fullWidth\n                          label=\"Previous Cash Crop\"\n                          id=\"outlined-margin-dense\"\n                          defaultValue=\"\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                        />\n                      </ListItem>\n                      <ListItem className={classes.nested}>\n                        <TextField\n                          label=\"Planting to Harvest\"\n                          value={`${\n                            state.cashCropData.dateRange.startDate\n                              ? moment(\n                                  state.cashCropData.dateRange.startDate\n                                ).format(\"MM/D\")\n                              : \"\"\n                          } - ${\n                            state.cashCropData.dateRange.endDate\n                              ? moment(\n                                  state.cashCropData.dateRange.endDate\n                                ).format(\"MM/D\")\n                              : \"\"\n                          }`}\n                          fullWidth\n                          onClick={() => dateRangeModalOpen()}\n                          margin=\"dense\"\n                          aria-haspopup=\"true\"\n                          variant=\"outlined\"\n                          InputProps={{\n                            readOnly: true,\n                            endAdornment: (\n                              <InputAdornment>\n                                <IconButton\n                                  size=\"small\"\n                                  onClick={() => dateRangeModalOpen()}\n                                >\n                                  <CalendarTodayRounded />\n                                </IconButton>\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </ListItem>\n                      <ListItem className={classes.nested}>\n                        <FormGroup>\n                          <FormControlLabel\n                            classes={{ root: classes.formControlLabel }}\n                            control={\n                              <Checkbox\n                                checked={cashCropVisible}\n                                onChange={(e) => {\n                                  if (e.target.checked) {\n                                    let cashCropDateRange = JSON.parse(\n                                      window.localStorage.getItem('cashCropDateRange')\n                                    );\n                                    dispatch({\n                                      type: 'UPDATE_DATE_RANGE',\n                                      data: {\n                                        startDate: cashCropDateRange.startDate,\n                                        endDate: cashCropDateRange.endDate,\n                                      },\n                                    });\n                                  } else {\n                                    dispatch({\n                                      type: 'UPDATE_DATE_RANGE',\n                                      data: {\n                                        startDate: '',\n                                        endDate: '',\n                                      },\n                                    });\n                                  }\n                                  setCashCropVisible(!cashCropVisible);\n                                }}\n                                value=\"Show Cash Crop Growth Window\"\n                              />\n                            }\n                            label={\n                              <Typography variant=\"body2\">\n                                Show Previous Cash Crop Growth Window\n                              </Typography>\n                            }\n                          />\n                        </FormGroup>\n                      </ListItem>\n                    </List>\n                  </Collapse>\n                  {state.dateRangeOpen ? (\n                    <DateRangeDialog\n                      open={true}\n                      close={() => change('TOGGLE', null, 'dateRangeOpen')}\n                      onChange={(range) => setDateRange(range)}\n                      range={[]}\n                    />\n                  ) : (\n                    \"\"\n                  )}\n                </Fragment>\n              ) : (\n                \"\"\n              )}\n\n              {showFilters ? (\n                <Fragment>\n                  {from === \"explorer\" ? (\n                    <Fragment>\n                      <List component=\"div\" disablePadding>\n                        <ListItem button onClick={(e) => change('ZONE_TOGGLE', e, !state.zoneToggle)}>\n                          <ListItemText\n                            primary={\n                              <Typography\n                                variant=\"body2\"\n                                className=\"text-uppercase\"\n                              >\n                                Plant Hardiness Zone\n                              </Typography>\n                            }\n                          />\n                          {state.zoneToggle ? <ExpandLess /> : <ExpandMore />}\n                        </ListItem>\n                      </List>\n                      <Collapse in={state.zoneToggle}>\n                        <List component=\"div\" disablePadding>\n                          <ListItem component=\"div\">\n                            <Grid container spacing={1}>\n                              {[4, 5, 6, 7].map((zone, index) => (\n                                <Grid item key={index}>\n                                  <Chip\n                                    onClick={(e) => change('UPDATE_ZONE', e, {zoneText: `Zone ${zone}`, zone: zone})}\n                                    component=\"li\"\n                                    size=\"medium\"\n                                    label={`Zone ${zone}`}\n                                    color={\n                                      parseInt(sfilters.zone) === zone\n                                        ? \"primary\"\n                                        : \"secondary\"\n                                    }\n                                  />\n                                </Grid>\n                              ))}\n                            </Grid>\n                          </ListItem>\n                        </List>\n                      </Collapse>\n                      <ListItem>\n                        <ListItemText>\n                          <TextField\n                            fullWidth\n                            color=\"secondary\"\n                            label=\"Cover Crop Name\"\n                            helperText=\"Search by cover crop name\"\n                            value={sfilters.cropSearch}\n                            onChange={(e) => change('CROP_SEARCH', e)}\n                          />\n                        </ListItemText>\n                      </ListItem>\n                    </Fragment>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {from === 'explorer' ?\n                    filtersList()\n                    : (\n                    <>\n                      <ListItem\n                        button\n                        onClick={() => change('TOGGLE', null, 'cropFiltersOpen')}\n                        style={\n                          from === \"table\"\n                            ? state.cropFiltersOpen\n                              ? { backgroundColor: CustomStyles().lightGreen }\n                              : { backgroundColor: \"inherit\" }\n                            : { backgroundColor: CustomStyles().lightGreen }\n                        }\n                      >\n                        <ListItemText primary=\"COVER CROP PROPERTIES\" />\n                        {state.cropFiltersOpen ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse in={state.cropFiltersOpen} timeout=\"auto\">\n                        {filtersList()}\n                      </Collapse>\n                    </>\n                  )}\n                </Fragment>\n              ) : (\n                ''\n              )}\n            </List>\n          </div>\n        ) : (\n          <div className=\"col-12\">\n            <ComparisonBar\n              {...props}\n              classes={classes}\n              filterData={sidebarFilters}\n              goals={state.selectedGoals.length > 0 ? state.selectedGoals : []}\n              comparisonKeys={state.comparisonKeys}\n              dispatch={dispatch}\n            />\n          </div>\n        )}\n      </div>\n    );\n  } else return <Fragment />;\n};\n\nexport default CropSidebarComponent;\n","/*\n  This file contains the CropTable component\n  The CropTable is the \n  addCropToBasket manages adding crops to cart\n  Styles are created using makeStyles\n*/\n\nimport {\n  Button,\n  CircularProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\n\nimport {\n  AddCircle,\n  CloseRounded,\n  FiberManualRecord,\n  Sort,\n} from '@material-ui/icons';\n\nimport { useSnackbar } from 'notistack';\n\nimport React, { Fragment, useContext, useEffect, useState } from 'react';\n\nimport {\n  CropImage,\n  CustomStyles,\n  flipCoverCropName,\n  getRating,\n  LightButton,\n  sudoButtonStyle,\n  trimString,\n} from '../../shared/constants';\n\nimport { Context } from '../../store/Store';\nimport '../../styles/cropCalendarViewComponent.scss';\nimport '../../styles/cropTable.scss';\nimport CropDetailsModalComponent from './CropDetailsModal';\nimport CropLegendModal from './CropLegendModal';\nimport CropSelectorCalendarView from './CropSelectorCalendarView';\n\nconst CropTableComponent = (props) => {\n  const cropData = props.cropData || [];\n  let activeCropData = props.activeCropData || [];\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const {state, dispatch} = useContext(Context);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalData, setModalData] = useState({});\n  const selectedBtns = state.selectedCrops.map((crop) => {\n    return crop.id;\n  });\n\n  const handleModalOpen = (crop) => {\n    setModalData(crop);\n    setModalOpen(true);\n  };\n\n  const [showGrowthWindow, setShowGrowthWindow] = useState(true);\n  const [legendModal, setLegendModal] = useState(false);\n  const handleLegendModal = () => {\n    setLegendModal(!legendModal);\n  };\n\n  useEffect(() => {\n    props.showGrowthWindow\n      ? setShowGrowthWindow(true)\n      : setShowGrowthWindow(false);\n  }, [props.showGrowthWindow]);\n\n  const addCropToBasket = (cropId, cropName, btnId, cropData) => {\n    let selectedCrops = {};\n    var cropArray = [];\n    selectedCrops.id = cropId;\n    selectedCrops.cropName = cropName;\n    selectedCrops.btnId = btnId;\n    selectedCrops.data = cropData;\n    cropArray = selectedCrops;\n    // // check if crop id exists inside state, if yes then remove it\n\n    if (state.selectedCrops.length > 0) {\n      var removeIndex = state.selectedCrops\n        .map(function (item) {\n          return item.id;\n        })\n        .indexOf(`${cropId}`);\n      if (removeIndex === -1) {\n        dispatch({\n          type: 'SELECTED_CROPS_MODIFIER',\n          data: {\n            selectedCrops: [...state.selectedCrops, selectedCrops],\n            snackOpen: false,\n            snackMessage: `${cropName} Added`,\n          },\n        });\n        enqueueSnackbar(`${cropName} Added`);\n      } else {\n        // element exists, remove\n        let selectedCropsCopy = state.selectedCrops;\n\n        selectedCropsCopy.splice(removeIndex, 1);\n\n        dispatch({\n          type: 'SELECTED_CROPS_MODIFIER',\n          data: {\n            selectedCrops: selectedCropsCopy,\n            snackOpen: false,\n            snackMessage: `${cropName} Removed`,\n          },\n        });\n        enqueueSnackbar(`${cropName} Removed`);\n      }\n    } else {\n      dispatch({\n        type: 'SELECTED_CROPS_MODIFIER',\n        data: {\n          selectedCrops: [cropArray],\n          snackOpen: false,\n          snackMessage: `${cropName} Added`,\n        },\n      });\n      enqueueSnackbar(`${cropName} Added`);\n    }\n  };\n\n  const getCardFlex = (crop, indexKey) => {\n    let goalsLength = state.selectedGoals.length;\n\n    return (\n      <Fragment>\n        {goalsLength > 0\n          ? state.selectedGoals.map((goal, index) => (\n              <TableCell\n                style={{ textAlign: 'center' }}\n                key={index}\n                className=\"goalCells\"\n              >\n                <div>\n                  <Tooltip\n                    arrow\n                    placement=\"bottom\"\n                    title={\n                      <div className=\"filterTooltip text-capitalize\">\n                        <p>\n                          {`Goal ${index + 1}`}\n                          {': '}\n                          {goal}\n                        </p>\n                      </div>\n                    }\n                  >\n                    {getRating(crop.fields[goal])}\n                  </Tooltip>\n                </div>\n              </TableCell>\n            ))\n          : ''}\n        {showGrowthWindow ? (\n          <TableCell style={goalsLength === 0 ? { width: '50%' } : {}}>\n            <CropSelectorCalendarView data={crop} from={\"listView\"} />\n          </TableCell>\n        ) : (\n          null\n        )}\n        <TableCell style={{ maxWidth: '150px', textAlign: 'center' }}>\n          <div className=\"d-flex w-100 justify-content-center align-items-center flex-column\">\n            <LightButton\n              id={`cartBtn${indexKey}`}\n              style={{\n                borderRadius: CustomStyles().nonRoundedRadius,\n                width: '150px',\n              }}\n              className={\n                selectedBtns.includes(crop.fields.id)\n                  ? 'activeCartBtn'\n                  : 'inactiveCartBtn'\n              }\n              onClick={() => {\n                addCropToBasket(\n                  crop.fields['id'],\n                  crop.fields['Cover Crop Name'],\n                  `cartBtn${indexKey}`,\n                  crop.fields\n                );\n              }}\n            >\n              {selectedBtns.includes(crop.fields.id) ? 'ADDED' : 'ADD TO LIST'}\n            </LightButton>{' '}\n            <Button size=\"small\" onClick={() => handleModalOpen(crop)}>\n              View Details\n            </Button>\n          </div>\n        </TableCell>\n      </Fragment>\n    );\n  };\n\n  const activeCropPresent = () => {\n    return activeCropData.length > 0;\n  };\n\n  const hasGoalRatingTwoOrLess = (crop = []) => {\n    const { selectedGoals } = state;\n\n    return selectedGoals.every((rating) => crop.fields[rating] <= 2);\n  };\n\n  const RenderActiveInactiveCropData = () => {\n    return (\n      <Fragment>\n        {activeCropPresent ? (\n          activeCropData.map((crop, index) => {\n            if (\n              crop.fields['Zone Decision'] === 'Include' && !hasGoalRatingTwoOrLess(crop)\n            )\n              return (\n                <Fragment key={index}>\n                  <TableRow\n                    className={\n                      hasGoalRatingTwoOrLess(crop) ? `inactiveCropRow` : ''\n                    }\n                    key={`croprow${index}`}\n                    id={crop.fields['id']}\n                    style={\n                      hasGoalRatingTwoOrLess(crop) ? { opacity: '0.2' } : {}\n                    }\n                  >\n                    <TableCell style={{height: 'auto'}}>\n                      <div className=\"container-fluid\">\n                        <div className=\"row\">\n                          <div className=\"col-auto pl-md-0\">\n                            {crop.fields['Image Data'] ? (\n                              <CropImage\n                                present={true}\n                                src={\n                                  crop.fields['Image Data']['Key Thumbnail']\n                                    ? `/images/Cover Crop Photos/100x100/${crop.fields['Image Data']['Directory']}/${crop.fields['Image Data']['Key Thumbnail']}`\n                                    : 'https://placehold.it/100x100'\n                                }\n                                alt={crop.fields['Cover Crop Name']}\n                              />\n                            ) : (\n                              <CropImage present={false} />\n                            )}\n                          </div>\n                          <div className=\"col-auto pl-md-0\">\n                            <div className=\"col-12 p-md-0\">\n                              <Typography variant=\"h6\">\n                                {flipCoverCropName(\n                                  crop.fields['Cover Crop Name']\n                                )}\n                              </Typography>\n                            </div>\n                            <div className=\"col-12 p-md-0\">\n                              <Typography\n                                variant=\"body1\"\n                                style={{\n                                  color: 'gray',\n                                  fontWeight: 'normal',\n                                  fontStyle: 'italic',\n                                  fontSize: 'small',\n                                }}\n                              >\n                                {trimString(crop.fields['Scientific Name'], 25)}\n                              </Typography>\n                            </div>\n                            <div className=\"col-12 p-md-0\">\n                              <Typography\n                                variant=\"subtitle2\"\n                                className=\"text-uppercase\"\n                                style={{ color: 'gray' }}\n                              >\n                                {crop.fields['Cover Crop Group']}\n                              </Typography>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell\n                      style={{ textAlign: 'left', verticalAlign: 'middle' }}\n                    >\n                      <table>\n                        <tbody>\n                          {crop.fields['Cover Crop Group'].toLowerCase() === 'legume' ? (\n                            <tr>\n                              <td>\n                                <Typography\n                                  variant=\"subtitle2\"\n                                  component=\"b\"\n                                  className=\"\"\n                                >\n                                  TOTAL N:\n                                </Typography>\n                              </td>\n                              <td>\n                                <Typography variant=\"subtitle2\" component=\"b\">\n                                  {crop.fields['Nitrogen Accumulation Min, Legumes (lbs/A/y)']}-\n                                  {crop.fields['Nitrogen Accumulation Max, Legumes (lbs/A/y)']}\n                                  <span className=\"units\">lbs/A/y</span>\n                                </Typography>\n                              </td>\n                            </tr>\n                          ) : (\n                            null\n                          )}\n                          <tr>\n                            <td>\n                              {' '}\n                              <Typography\n                                variant=\"subtitle2\"\n                                component=\"b\"\n                                className=\"\"\n                              >\n                                DRY MATTER:\n                              </Typography>\n                            </td>\n                            <td>\n                              <Typography variant=\"subtitle2\" component=\"b\">\n                                {crop.fields['Dry Matter Min (lbs/A/y)']}-\n                                {crop.fields['Dry Matter Max (lbs/A/y)']}\n                                <span className=\"units\">lbs/A/y</span>\n                              </Typography>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <Typography\n                                variant=\"subtitle2\"\n                                component=\"b\"\n                                className=\"\"\n                              >\n                                DURATION:\n                              </Typography>\n                            </td>\n                            <td>\n                              <Typography\n                                variant=\"subtitle2\"\n                                component=\"b\"\n                                className=\"text-uppercase\"\n                              >\n                                {crop.fields['Duration']\n                                  .toString()\n                                  .toLowerCase() === 'short-lived perennial'\n                                  ? 'Perennial'\n                                  : crop.fields['Duration'].toString()}\n                              </Typography>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </TableCell>\n                    {getCardFlex(crop, index)}\n                  </TableRow>\n                </Fragment>\n              );\n            else {\n              return '';\n            }\n          })\n        ) : (\n          null\n        )}\n\n        {activeCropPresent\n          ? activeCropData.map((crop, index) => {\n              if (\n                crop.fields['Zone Decision'] === 'Include' &&\n                hasGoalRatingTwoOrLess(crop)\n              ) {\n                return (\n                  <Fragment key={index}>\n                    <TableRow\n                      className={\n                        hasGoalRatingTwoOrLess(crop) ? 'inactiveCropRow' : ''\n                      }\n                      key={`croprow${index}`}\n                      id={crop.fields['id']}\n                      style={\n                        hasGoalRatingTwoOrLess(crop) ? { opacity: '0.2' } : {}\n                      }\n                    >\n                      <TableCell style={{height: 'auto'}}>\n                        <div className=\"container-fluid\">\n                          <div className=\"row\">\n                            <div className=\"col-auto pl-md-0\">\n                              {crop.fields['Image Data'] ? (\n                                <CropImage\n                                  present={true}\n                                  src={\n                                    crop.fields['Image Data']['Key Thumbnail']\n                                      ? `/images/Cover Crop Photos/100x100/${crop.fields['Image Data']['Directory']}/${crop.fields['Image Data']['Key Thumbnail']}`\n                                      : 'https://placehold.it/100x100'\n                                  }\n                                  alt={crop.fields['Cover Crop Name']}\n                                />\n                              ) : (\n                                <CropImage present={false} />\n                              )}\n                            </div>\n                            <div className=\"col-auto pl-md-0\">\n                              <div className=\"col-12 p-md-0\">\n                                <Typography variant=\"h6\">\n                                  {flipCoverCropName(\n                                    crop.fields['Cover Crop Name']\n                                  )}\n                                </Typography>\n                              </div>\n                              <div className=\"col-12 p-md-0\">\n                                <Typography\n                                  variant=\"body1\"\n                                  style={{\n                                    color: 'gray',\n                                    fontWeight: 'normal',\n                                    fontStyle: 'italic',\n                                    fontSize: 'small',\n                                  }}\n                                >\n                                  {trimString(\n                                    crop.fields['Scientific Name'],\n                                    25\n                                  )}\n                                </Typography>\n                              </div>\n                              <div className=\"col-12 p-md-0\">\n                                <Typography\n                                  variant=\"subtitle2\"\n                                  className=\"text-uppercase\"\n                                  style={{ color: 'gray' }}\n                                >\n                                  {crop.fields['Cover Crop Group']}\n                                </Typography>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell\n                        style={{ textAlign: 'left', verticalAlign: 'middle' }}\n                      >\n                        <table>\n                          <tbody>\n                            {crop.fields['Cover Crop Group'].toLowerCase() === 'legume' ? (\n                              <tr>\n                                <td>\n                                  <Typography\n                                    variant=\"subtitle2\"\n                                    component=\"b\"\n                                    className=\"\"\n                                  >\n                                    TOTAL N:\n                                  </Typography>\n                                </td>\n                                <td>\n                                  <Typography variant=\"subtitle2\" component=\"b\">\n                                    {crop.fields['Nitrogen Accumulation Min, Legumes (lbs/A/y)']}-\n                                    {crop.fields['Nitrogen Accumulation Max, Legumes (lbs/A/y)']}\n                                    <span className=\"units\">lbs/A/y</span>\n                                  </Typography>\n                                </td>\n                              </tr>\n                            ) : (\n                              null\n                            )}\n                            <tr>\n                              <td>\n                                {' '}\n                                <Typography\n                                  variant=\"subtitle2\"\n                                  component=\"b\"\n                                  className=\"\"\n                                >\n                                  DRY MATTER:\n                                </Typography>\n                              </td>\n                              <td>\n                                <Typography variant=\"subtitle2\" component=\"b\">\n                                  {crop.fields['Dry Matter Min (lbs/A/y)']}-\n                                  {crop.fields['Dry Matter Max (lbs/A/y)']}\n                                  <span className=\"units\">lbs/A/y</span>\n                                </Typography>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <Typography\n                                  variant=\"subtitle2\"\n                                  component=\"b\"\n                                  className=\"\"\n                                >\n                                  DURATION:\n                                </Typography>\n                              </td>\n                              <td>\n                                <Typography\n                                  variant=\"subtitle2\"\n                                  component=\"b\"\n                                  className=\"text-uppercase\"\n                                >\n                                  {crop.fields['Duration']\n                                    .toString()\n                                    .toLowerCase() === 'short-lived perennial'\n                                    ? 'Perennial'\n                                    : crop.fields['Duration'].toString()}\n                                </Typography>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </TableCell>\n                      {getCardFlex(crop, index)}\n                    </TableRow>\n                  </Fragment>\n                );\n              } else return <Fragment />;\n            })\n          : ''}\n      </Fragment>\n    );\n  };\n\n  const [tbodyHeight, setTbodyHeight] = useState(0);\n  const [theadHeight, setTheadHeight] = useState(0);\n\n  useEffect(() => {\n    if (document.querySelector(\"thead.MuiTableHead-root.tableHeadWrapper\")) {\n      const theadComputedHeight = document\n        .querySelector(\"thead.MuiTableHead-root.tableHeadWrapper\")\n        .getBoundingClientRect().height;\n\n      setTbodyHeight(850 - theadComputedHeight);\n      setTheadHeight(theadComputedHeight);\n    }\n  }, []);\n\n  const [nameSortFlag, setNameSortFlag] = useState(true);\n  const [selectedCropsSortFlag, setSelectedCropsSortFlag] = useState(true);\n  const sortBySelectedCrops = () => {\n    sortReset(\"selectedCrops\");\n    let selectedCropsShadow = state.selectedCrops;\n    let activeCropDataShadow = props.activeCropData;\n\n    if (selectedCropsSortFlag) {\n      if (selectedCropsShadow.length > 0) {\n        let selectedCropIds = [];\n        selectedCropsShadow.forEach((crop) => {\n          selectedCropIds.push(crop.id);\n        });\n        let newActiveShadow = activeCropDataShadow.map((crop) => {\n          crop['inCart'] = selectedCropIds.includes(crop.fields.id);\n          return crop;\n        });\n\n        if (newActiveShadow.length > 0) {\n          newActiveShadow.sort((a) => {\n            if (a.inCart) {\n              return -1;\n            } else {\n              return 1;\n            }\n          });\n\n          props.setActiveCropData(newActiveShadow);\n        }\n      }\n    } else {\n      // sort back to original values\n      sortReset(\"selectedCrops\");\n    }\n    setSelectedCropsSortFlag(!selectedCropsSortFlag);\n  };\n\n  const sortReset = (from = \"cropName\") => {\n    const { selectedGoals } = state;\n    let activeCropDataShadow = props.activeCropData;\n    selectedGoals\n      .slice()\n      .reverse()\n      .forEach((goal) => {\n        activeCropDataShadow.sort((a, b) => {\n          if (a.fields[goal] && b.fields[goal]) {\n            if (a.fields[goal] > b.fields[goal]) {\n              return -1;\n            } else {\n              return 1;\n            }\n          }\n          return 0;\n        });\n      });\n    props.setActiveCropData(activeCropDataShadow);\n  };\n\n  const sortCropsByName = () => {\n    let activeCropDataShadow = props.activeCropData;\n    sortReset(\"cropName\");\n\n    if (nameSortFlag) {\n      if (activeCropDataShadow.length > 0) {\n        activeCropDataShadow.sort((a, b) => {\n          var firstCropName = flipCoverCropName(\n            a.fields['Cover Crop Name'].toLowerCase()\n          ).replace(/\\s+/g, '');\n          var secondCropName = flipCoverCropName(\n            b.fields['Cover Crop Name'].toLowerCase()\n          ).replace(/\\s+/g, '');\n          return firstCropName.localeCompare(secondCropName);\n        });\n\n        props.setActiveCropData(activeCropDataShadow);\n      }\n    } else {\n      if (activeCropDataShadow.length > 0) {\n        activeCropDataShadow.sort((a, b) => {\n          var firstCropName = flipCoverCropName(\n            a.fields['Cover Crop Name'].toLowerCase()\n          ).replace(/\\s+/g, '');\n          var secondCropName = flipCoverCropName(\n            b.fields['Cover Crop Name'].toLowerCase()\n          ).replace(/\\s+/g, '');\n          if (firstCropName < secondCropName) {\n            return 1;\n          }\n          if (firstCropName > secondCropName) {\n            return -1;\n          }\n          return 0;\n        });\n\n        props.setActiveCropData(activeCropDataShadow);\n      }\n    }\n\n    setNameSortFlag(!nameSortFlag);\n  };\n\n  return cropData.length !== 0 ? (\n    <Fragment>\n      <TableContainer\n        className=\"table-responsive calendarViewTableWrapper\"\n        component=\"div\"\n      >\n        <Table\n          stickyHeader\n          className=\"table table-borderless table-sm\"\n          id=\"primaryCropTable\"\n        >\n          <TableHead className=\"tableHeadWrapper\">\n            <TableRow className=\"theadFirst\">\n              <TableCell\n                style={{\n                  backgroundColor: 'white',\n                  color: 'white',\n                  visibility: 'hidden',\n                }}\n                colSpan=\"2\"\n              >\n                blank\n              </TableCell>\n\n              {state.selectedGoals.length > 0 ? (\n                <TableCell\n                  colSpan={state.selectedGoals.length}\n                  style={{\n                    backgroundColor: '#abd08f',\n                    textAlign: 'center',\n                  }}\n                >\n                  <Tooltip\n                    arrow\n                    placement=\"top\"\n                    interactive\n                    title={\n                      <div className=\"filterTooltip\">\n                        <p>See filter bar for cover cropping goals.</p>\n                      </div>\n                    }\n                  >\n                    <Typography variant=\"body2\">\n                      <Button\n                        onClick={() => {\n                          props.sortAllCrops(\n                            props.sortPreference === 'desc' ? 'asc' : 'desc'\n                          );\n                        }}\n                      >\n                        {props.sortPreference === 'asc' ? (\n                          <Sort\n                            style={{\n                              color: CustomStyles().secondaryProgressBtnColor,\n                            }}\n                          />\n                        ) : (\n                          <Sort\n                            style={{\n                              color: CustomStyles().progressColor,\n                              transform: 'rotate(180deg)',\n                            }}\n                          />\n                        )}\n                        &nbsp; COVER CROPPING GOALS\n                      </Button>\n                    </Typography>\n                  </Tooltip>\n                </TableCell>\n              ) : (\n                null\n              )}\n\n              <TableCell\n                style={{\n                  backgroundColor: '#abd08f',\n                  textAlign: 'center',\n                  borderRight: '5px solid white',\n                }}\n              >\n                <Typography variant=\"body2\">\n                  <Button startIcon={<AddCircle />} onClick={handleLegendModal}>\n                    {' '}\n                    LEGEND\n                  </Button>\n                </Typography>\n\n                <div\n                  id=\"legendWrapper\"\n                  className=\"d-none\"\n                  style={{\n                    position: 'fixed',\n                    backgroundColor: 'rgba(171, 208, 143, 0.8)',\n                    bottom: 0,\n                    zIndex: 999,\n                    textAlign: 'left',\n                  }}\n                >\n                  <div className={`modalLegendPaper`}>\n                    <div className=\"container-fluid\">\n                      <div className=\"row\">\n                        <div className=\"col-6\">\n                          <Typography variant=\"h5\">LEGEND</Typography>\n                        </div>\n\n                        <div className=\"col-6 text-right\">\n                          <Button\n                            onClick={() => {\n                              const ele = document.getElementById('legendWrapper');\n                              ele.classList.add('d-none');\n                            }}\n                          >\n                            <CloseRounded />\n                          </Button>\n                        </div>\n                      </div>\n                      <div className=\"row mt-2\">\n                        <div className=\"col-12 legendModalRow\">\n                          <Typography variant=\"body1\">\n                            <FiberManualRecord className=\"reliable\" />\n                            <span className=\"pl-3\">Reliable Establishment</span>\n                          </Typography>\n                        </div>\n                        <div className=\"col-12 legendModalRow\">\n                          <Typography variant=\"body1\">\n                            <FiberManualRecord className=\"temperatureRisk\" />\n                            <span className=\"pl-3\">\n                              Temperature Risk To Establishment\n                            </span>\n                          </Typography>\n                        </div>\n                        <div className=\"col-12 legendModalRow\">\n                          <Typography variant=\"body1\">\n                            <FiberManualRecord className=\"frostPossible\" />\n                            <span className=\"pl-3\">Frost Seeding Possible</span>\n                          </Typography>\n                        </div>\n                        <div className=\"col-12 legendModalRow\">\n                          <Typography variant=\"body1\">\n                            <FiberManualRecord className=\"cashCrop\" />\n                            <span className=\"pl-3\">\n                              Previous Cash Crop Growth Window\n                            </span>\n                          </Typography>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </TableCell>\n              <TableCell\n                style={{\n                  backgroundColor: 'white',\n                  color: 'white',\n                  visibility: 'hidden',\n                }}\n              >\n                blank\n              </TableCell>\n            </TableRow>\n            <TableRow className=\"theadSecond\">\n              <TableCell\n                style={{\n                  minWidth: '320px',\n                  backgroundColor: '#abd08f',\n                  borderRight: '5px solid white',\n                }}\n              >\n                <Typography variant=\"body1\">\n                  <Button onClick={sortCropsByName}>\n                    {nameSortFlag ? (\n                      <Sort\n                        style={{\n                          color: CustomStyles().secondaryProgressBtnColor,\n                        }}\n                      />\n                    ) : (\n                      <Sort\n                        style={{\n                          color: CustomStyles().progressColor,\n                          transform: 'rotate(180deg)',\n                        }}\n                      />\n                    )}\n                    &nbsp; COVER CROPS\n                  </Button>\n                </Typography>\n              </TableCell>\n              <TableCell\n                style={{\n                  minWidth: '240px',\n                  backgroundColor: '#abd08f',\n                  borderRight: '5px solid white',\n                }}\n              >\n                <Typography variant=\"body1\" style={sudoButtonStyle}>\n                  Growth Traits\n                </Typography>\n              </TableCell>\n              {state.selectedGoals.length > 0 ? (\n                state.selectedGoals.map((goal, index) => {\n                  let lastIndex = state.selectedGoals.length - 1;\n                  return (\n                    <TableCell\n                      key={index}\n                      style={{\n                        wordBreak: 'break-word',\n                        maxWidth: '185px',\n                        backgroundColor: '#abd08f',\n                        textAlign: 'center',\n                        borderRight: index === lastIndex ? '5px solid white' : 'none',\n                      }}\n                    >\n                      <Typography variant=\"body1\">\n                        {/* <Button>{goal.toUpperCase()}</Button> */}\n                        <Tooltip\n                          placement=\"bottom\"\n                          arrow\n                          title={\n                            <div className=\"filterTooltip text-capitalize\">\n                              <p>{goal}</p>\n                            </div>\n                          }\n                        >\n                          <div style={sudoButtonStyle}>{`Goal ${\n                            index + 1\n                          }`}</div>\n                        </Tooltip>\n                      </Typography>\n                    </TableCell>\n                  );\n                })\n              ) : (\n                null\n              )}\n\n              {showGrowthWindow ? (\n                <TableCell\n                  style={{\n                    backgroundColor: '#abd08f',\n                    textAlign: 'center',\n                    borderRight: '5px solid white',\n                    width: '180px',\n                  }}\n                >\n                  <Typography variant=\"body1\" style={sudoButtonStyle}>\n                    {\" \"}\n                    PLANTING WINDOW\n                  </Typography>\n                </TableCell>\n              ) : (\n                null\n              )}\n\n              <TableCell\n                style={{\n                  backgroundColor: '#abd08f',\n                  textAlign: 'center',\n                  minWidth: '165px',\n                }}\n              >\n                <Typography variant=\"body1\">\n                  <Button onClick={sortBySelectedCrops}>\n                    {selectedCropsSortFlag ? (\n                      <Sort\n                        style={{\n                          color: CustomStyles().secondaryProgressBtnColor,\n                        }}\n                      />\n                    ) : (\n                      <Sort\n                        style={{\n                          color: CustomStyles().progressColor,\n                          transform: 'rotate(180deg)',\n                        }}\n                      />\n                    )}\n                    &nbsp;MY LIST\n                  </Button>\n                </Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody className=\"tableBodyWrapper\">\n            {activeCropData.length > 0 ? (\n              <Fragment>\n                {activeCropData.length === 0 ? (\n                  <TableRow>\n                    <TableCell colSpan={42}>\n                      <div\n                        style={{\n                          width: '100%',\n                          height: tbodyHeight,\n                          position: 'absolute',\n                          top: theadHeight,\n                          backgroundColor: 'rgba(255,255,255, 0.1)',\n                          zIndex: 1,\n                          display: 'flex',\n                          flexDirection: 'column',\n                          justifyContent: 'center',\n                          alignItems: 'center',\n                        }}\n                      >\n                        <div\n                          style={{\n                            backgroundColor: 'rgba(171, 208, 143, 1)',\n                            minHeight: '100px',\n                            zIndex: 2,\n                          }}\n                          className=\"px-5 py-5 d-flex justify-content-center align-items-center text-center\"\n                        >\n                          <div>\n                            <Typography\n                              variant=\"body1\"\n                              gutterBottom\n                              className=\"pb-2\"\n                            >\n                              No cover crops match your selected Cover Crop Property filters.\n                            </Typography>\n                            <Typography\n                              variant=\"body1\"\n                              gutterBottom\n                              className=\"pb-2\"\n                            >\n                              Consider expanding your Cover Crop Property filter criteria.\n                            </Typography>\n                            <Typography\n                              variant=\"body1\"\n                              gutterBottom\n                              className=\"\"\n                            >\n                              Alternatively, clear all Cover Crop Property filters.\n                            </Typography>\n                          </div>\n                        </div>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  null\n                )}\n                <RenderActiveInactiveCropData />\n              </Fragment>\n            ) : (\n              <TableRow>\n                <TableCell>No cover crops match your selected Cover Crop Property filters.</TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <div className=\"cropGoals\"></div>\n      <CropDetailsModalComponent\n        modalOpen={modalOpen}\n        setModalOpen={setModalOpen}\n        crop={modalData}\n      />\n      <CropLegendModal\n        legendModal={legendModal}\n        handleLegendModal={handleLegendModal}\n        disableBackdropClick={false}\n      />\n    </Fragment>\n  ) : (\n    <div className=\"table-responsive calendarViewTableWrapper\">\n      <div className=\"circularCentered\">\n        <CircularProgress size={\"6em\"} />\n      </div>\n    </div>\n  );\n};\n\nexport default CropTableComponent;\n","/*\n  This file contains the CropSelector and its styles.\n  The CropSelector is the top level component for the crop selector tool and allows users to choose crops based on their needs.\n  Styles are created using makeStyles.\n*/\n\nimport {\n  Button,\n  Fab,\n  makeStyles,\n  useScrollTrigger,\n  Zoom,\n} from \"@material-ui/core\";\nimport { ArrowBack, ArrowForward, KeyboardArrowUp } from \"@material-ui/icons\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/cropSelector.scss\";\nimport MyCoverCropList from \"../MyCoverCropList/MyCoverCropList\";\nimport CropCalendarViewComponent from \"./CropCalendarView\";\nimport CropSidebarComponent from \"./CropSidebar\";\nimport CropTableComponent from \"./CropTable\";\nimport ReactGA from \"react-ga\";\nconst _ = require(\"lodash\");\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst ScrollTop = (props) => {\n  const { children } = props;\n  const classes = useStyles();\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 180,\n  });\n  const handleBackToTopClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \".topHeader\"\n    );\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n  return (\n    <Zoom in={trigger}>\n      <div\n        onClick={handleBackToTopClick}\n        role=\"presentation\"\n        className={classes.root}\n      >\n        {children}\n      </div>\n    </Zoom>\n  );\n};\n\nconst CropSelector = (props) => {\n  const {state, dispatch} = useContext(Context);\n  let [showGrowthWindow, setShowGrowthWindow] = useState(true);\n  const [sortPreference, setSortPreference] = useState(\"desc\");\n  const { selectedGoals } = state;\n\n  const activeCropData = state.activeCropData;\n\n  // toggles list view and calendar view\n  let [isListView, setIsListView] = useState(true);\n\n  const [comparisonView, setComparisonView] = useState(false);\n  // reset back to false\n\n  const [cropData, setCropData] = useState([]);\n  useEffect(() => {\n    if (state.consent === true) {\n      console.log(\"viewing selector\");\n      ReactGA.initialize(\"UA-181903489-1\");\n\n      ReactGA.pageview(\"cover crop selector\");\n    }\n  }, [state.consent]);\n\n  const sortEnvTolCropData = (objDataArr) => {\n    if (cropData.length !== 0) {\n      let crop_data = cropData;\n\n      let objData = objDataArr.map((obj) => {\n        return `fields.${obj}`;\n      });\n\n      if (objData.length > 0) {\n        // some values are truthy\n        let updatedCropData = _.sortBy(crop_data, objData);\n        setCropData(updatedCropData);\n      } else {\n        // reset! none are true\n        const activeObjKeys = [];\n        let { selectedGoals } = state;\n        selectedGoals.forEach((val, index) => {\n          //  Crop Data is inside cropData.fields\n          activeObjKeys[index] = `fields.${val}`;\n        });\n        let updatedCropData = _.orderBy(crop_data, activeObjKeys, [\n          \"desc\",\n          \"desc\",\n          \"desc\",\n        ]);\n\n        setCropData(updatedCropData);\n      }\n    }\n  };\n\n  const [cropDataChanged, setCropDataChanged] = useState(false);\n\n  useEffect(() => {\n    setCropDataChanged((c) => !c);\n  }, [state.cropData]);\n\n  const sortCropsBy = (orderBy) => {\n    if (state.cropData.length > 0) {\n      // const { selectedGoals } = state;\n      if (selectedGoals.length > 0) {\n        let activeCropDataCopy = activeCropData.length > 0 ? activeCropData : state.cropData;\n        let activeObjKeys = [];\n        selectedGoals.forEach((val, index) => {\n          //  Crop Data is inside cropData.fields\n          activeObjKeys[index] = `fields.${val}`;\n        });\n        console.log(activeObjKeys);\n\n        switch (orderBy) {\n          case \"asc\": {\n            if (activeCropDataCopy.length > 0) {\n              let updatedCropData = _.orderBy(\n                activeCropDataCopy,\n                activeObjKeys,\n                [\"asc\", \"asc\", \"asc\"]\n              );\n              dispatch({\n                type: \"UPDATE_ACTIVE_CROP_DATA\",\n                data: {\n                  value: updatedCropData,\n                },\n              });\n            }\n            setSortPreference(\"asc\");\n            break;\n          }\n          case \"desc\": {\n            if (activeCropDataCopy.length > 0) {\n              let updatedCropData = _.orderBy(\n                activeCropDataCopy,\n                activeObjKeys,\n                [\"desc\", \"desc\", \"desc\"]\n              );\n              dispatch({\n                type: \"UPDATE_ACTIVE_CROP_DATA\",\n                data: {\n                  value: updatedCropData,\n                },\n              });\n            }\n            setSortPreference(\"desc\");\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (state.cropData) {\n      if (state.cropData.length > 0) {\n        // sort crop data by goal priority\n\n        if (selectedGoals.length > 0) {\n          let activeCropDataShadow = state.cropData;\n          selectedGoals\n            .slice()\n            .reverse()\n            .forEach((goal) => {\n              activeCropDataShadow.sort((a, b) => {\n                if (a.fields[goal] && b.fields[goal]) {\n                  if (a.fields[goal] > b.fields[goal]) {\n                    return -1;\n                  } else {\n                    return 1;\n                  }\n                }\n                return 0;\n              });\n            });\n          setCropData(activeCropDataShadow);\n        } else {\n          setCropData(state.cropData);\n        }\n      }\n    }\n    return () => {\n      setCropData([]);\n    };\n  }, [state.cropData, selectedGoals]);\n\n  const toggleListView = () => {\n    setIsListView(!isListView);\n  };\n\n  const toggleComparisonView = () => {\n    setComparisonView(!comparisonView);\n  };\n  \n  useEffect(() => {\n    if (state.selectedGoals.length === 0) {\n      dispatch({\n        type: \"UPDATE_PROGRESS\",\n        data: {\n          type: \"DECREMENT\",\n        },\n      });\n    }\n  }, [state.selectedGoals, dispatch]);\n\n  function useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: undefined,\n      height: undefined,\n    });\n\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return windowSize;\n  }\n  const size = useWindowSize();\n  const [showSidebar, setShowSidebar] = useState(true);\n\n  return (\n    <div className=\"container-fluid mt-2\">\n      <div className=\"row cropSelectorRow mt-3\">\n        {/* {Shows Collapsible icon for screen width < 1680px } */}\n        {size.width < 1680 ? (\n          <div className=\"col-12 mb-2\">\n            <Button\n              startIcon={!showSidebar ? <ArrowForward /> : <ArrowBack />}\n              title=\"Toggle Sidebar\"\n              aria-label=\"toggle-sidebar\"\n              onClick={() => setShowSidebar(!showSidebar)}\n            >\n              {!showSidebar ? \"Show Sidebar\" : \"Hide Sidebar\"}\n            </Button>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <div\n          className={`col-md-2 col-sm-12`}\n          style={\n            showSidebar\n              ? { display: \"block\", visibility: \"visible\" }\n              : { display: \"none\", visibility: \"hidden\" }\n          }\n        >\n          <CropSidebarComponent\n            sortEnvTolCropData={sortEnvTolCropData}\n            setGrowthWindow={setShowGrowthWindow}\n            isListView={isListView}\n            cropData={cropData}\n            activeCropData={\n              activeCropData.length > 0 ? activeCropData : cropData\n            }\n            cropDataChanged={cropDataChanged}\n            comparisonView={comparisonView}\n            toggleComparisonView={toggleComparisonView}\n            toggleListView={toggleListView}\n            from={\"table\"}\n          />\n        </div>\n\n        <div\n          className={\n            showSidebar ? `col-md-10 col-sm-12` : `col-md-12 col-sm-12`\n          }\n        >\n          {state.speciesSelectorActivationFlag ? (\n            isListView ? (\n              <CropTableComponent\n                cropData={cropData}\n                setCropData={setCropData}\n                activeCropData={activeCropData}\n                showGrowthWindow={showGrowthWindow}\n                sortAllCrops={sortCropsBy}\n                sortPreference={sortPreference}\n              />\n            ) : (\n              <CropCalendarViewComponent\n                cropData={cropData}\n                activeCropData={activeCropData}\n                showGrowthWindow={showGrowthWindow}\n                sortAllCrops={sortCropsBy}\n                sortPreference={sortPreference}\n              />\n            )\n          ) : (\n            <MyCoverCropList comparisonView={comparisonView} />\n          )}\n        </div>\n        <ScrollTop {...props}>\n          <Fab color=\"secondary\" size=\"medium\" aria-label=\"scroll back to top\">\n            <KeyboardArrowUp />\n          </Fab>\n        </ScrollTop>\n      </div>\n    </div>\n  )\n};\n\nexport default CropSelector;\n","/*\n  This file contains the GoalTag component, helper functions, and styles\n  The GoalTag is individual goal tag inside the goal selector window\n  Styles are created using makeStyles\n*/\n\nimport { Avatar, Chip, Tooltip } from \"@material-ui/core\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Context } from \"../../store/Store\";\n\nconst GoalTag = (props) => {\n  const {state, dispatch} = useContext(Context);\n\n  let goalDescription = props.goalDescription;\n  let goalTitle = props.goaltTitle;\n  let key = props.id;\n  let goal = props.goal;\n  let valuesDescriptions = props.valuesDescriptions;\n\n  useEffect(() => {\n    if (state.selectedGoals.length > 0) {\n      state.selectedGoals.forEach((val, index) => {\n        document\n          .getElementsByClassName(val.toUpperCase())[0]\n          .classList.add(\"active\");\n      });\n    }\n  }, [state.selectedGoals]);\n\n  const updateSelectedGoals = (item, key) => {\n    const goals = [...state.selectedGoals];\n\n    if (goals.indexOf(item.fields[\"Variable\"]) === -1) {\n      // does not exist, dispatch to state and add to local state\n\n      document.getElementById(`chip${key}`).classList.add(\"active\");\n      dispatch({\n        type: \"ADD_SELECTED_GOALS\",\n        data: item.fields[\"Variable\"],\n      });\n    } else {\n      // exists, remove it from the state and update the state\n      let index = goals.indexOf(item.fields[\"Variable\"]);\n      goals.splice(index, 1);\n\n      // make it lighter on the ui\n      document.getElementById(`chip${key}`).classList.remove(\"active\");\n\n      dispatch({\n        type: \"UPDATE_SELECTED_GOALS\",\n        data: goals,\n      });\n    }\n  };\n  return (\n    <Tooltip\n      enterDelay={1000}\n      enterNextDelay={1000}\n      id={`tooltip-${props.id}`}\n      placement=\"top\"\n      arrow\n      title={\n        <div className=\"filterTooltip\">\n          <p>{goalDescription + \" \" + valuesDescriptions}</p>\n        </div>\n      }\n      key={`tooltip${key}`}\n    >\n      <Chip\n        disabled={\n          state.selectedGoals.length >= 3\n            ? state.selectedGoals.includes(goalTitle)\n              ? false\n              : true\n            : false\n        }\n        avatar={\n          state.selectedGoals.length !== 0 &&\n          state.selectedGoals.includes(goalTitle) ? (\n            <Avatar id={`avatar${key}`}>\n              {state.selectedGoals.indexOf(goalTitle) + 1}\n            </Avatar>\n          ) : (\n            <Avatar className=\"d-none\"></Avatar>\n          )\n        }\n        // style={{ textAlign: \"left\" }}\n        label={goalTitle.toUpperCase()}\n        onClick={() => updateSelectedGoals(goal, key)}\n        key={`chip${key}`}\n        id={`chip${key}`}\n        size=\"medium\"\n        variant=\"outlined\"\n        // color={\"primary\"}\n        className={`goal enabled ${goalTitle.toUpperCase()}`}\n      />\n    </Tooltip>\n  );\n};\n\nexport default GoalTag;\n","/*\n  This file contains the GoalsSelector component, helper functions, and styles\n  The GoalsSelector is the window where the user selects their goals\n  Styles are created using makeStyles\n*/\n\n// TODO: Goal tags are not responsive!\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/goalsSelector.scss\";\nimport GoalTag from \"./GoalTag\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst goalSkeletonStyle = {\n  height: \"50px\",\n  width: \"100%\",\n  borderRadius: \"10px\",\n};\n\nconst GoalsSelector = () => {\n  const {state} = useContext(Context);\n  const classes = useStyles();\n  const [allGoals, setAllGoals] = useState([{}]);\n\n  useEffect(() => {\n    if (state.allGoals.length > 0) {\n      const filteredGoals = state.allGoals.filter(\n        (goal) =>\n          goal.fields[\"Variable\"].toLowerCase() !== \"promote water quality\"\n      );\n      setAllGoals(filteredGoals);\n    }\n  }, [state.allGoals]);\n\n  return (\n    <div className=\"container-fluid mt-5\">\n      <div\n        className=\"row boxContainerRow goalsContainer\"\n        style={{ height: \"520px\" }}\n      >\n        <div className=\"col-12 goalsBoxContainer\">\n          <Typography variant=\"h4\" gutterBottom>\n            What are your cover cropping goals?\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            align=\"center\"\n            color=\"secondary\"\n            gutterBottom\n          >\n            Select up to three. Hover for more information\n          </Typography>\n          {allGoals.length === 0 ? (\n            <div className=\"goals col-lg-12\">\n              <div className=\"row\">\n                <div className=\"col-3\">\n                  <Skeleton style={goalSkeletonStyle} />\n                </div>\n                <div className=\"col-3\">\n                  <Skeleton style={goalSkeletonStyle} />\n                </div>\n                <div className=\"col-3\">\n                  <Skeleton style={goalSkeletonStyle} />\n                </div>\n                <div className=\"col-3\">\n                  <Skeleton style={goalSkeletonStyle} />\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div\n              className=\"goals row pt-4\"\n              style={{ justifyContent: \"center\" }}\n            >\n              {allGoals[0].fields ? (\n                allGoals.map((goal, key) => (\n                  <div key={key} className={`${classes.root} col`}>\n                    <GoalTag\n                      goal={goal}\n                      id={key}\n                      goaltTitle={goal.fields[\"Variable\"]}\n                      goalDescription={goal.fields[\"Description\"]}\n                      valuesDescriptions={goal.fields[\"Values Description\"]}\n                    />\n                  </div>\n                ))\n              ) : (\n                <Skeleton style={goalSkeletonStyle} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GoalsSelector;\n","/*\n  This file contains the DateComponent component, helper functions, and styles\n  The DateComponent shows the date in the header\n*/\n\nimport moment from \"moment\";\nimport \"moment-timezone\";\nimport { useEffect, useState } from \"react\";\n\nconst DateComponent = () => {\n  const [date, setDate] = useState(null);\n\n  useEffect(() => {\n    setDate(setTodaysDate);\n  }, []);\n\n  return date;\n};\n\nconst setTodaysDate = () => {\n  let now = moment();\n  let tzdata = moment.tz.guess();\n  return now.tz(tzdata).format(\"LL\");\n};\n\nexport default DateComponent;\n","/*\n  This file contains the ForecastComponent component, helper functions\n  The ForecastComponent shows the forecast in the header\n*/\n\nimport React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport { cloudIcon, ReferenceTooltip } from \"../../shared/constants\";\nimport { Context } from \"../../store/Store\";\n\nconst apiBaseURL = \"https://api.openweathermap.org/data/2.5/weather\";\nconst apiKey = \"***REMOVED***\";\n\nconst ForecastComponent = () => {\n  const {state, dispatch} = useContext(Context);\n  const [showTempIcon, setShowTempIcon] = useState(true);\n  const [temp, setTemp] = useState({\n    min: 0,\n    max: 0,\n    unit: \"F\",\n    iconURL: `https://placehold.it/20x20`,\n    iconDescription: \"No Data\",\n  });\n\n  useEffect(() => {\n    const callWeatherApi = async (url, latlng) => {\n      let fetchData = await fetch(makeURLString(url, latlng));\n      let jsonData = await fetchData.json();\n      return jsonData;\n    };\n\n    const setShowFeatures = () => {\n      if (state.markers.length > 0) {\n        let latlng = [];\n        try {\n          latlng = state.markers[0];\n        } catch (e) {\n          console.trace(\"Forecast Component\", e);\n\n          latlng = [];\n        }\n\n        let apiCall = callWeatherApi(apiBaseURL, latlng);\n\n        apiCall\n          .then((data) => {\n            let iconId = data.weather[0].icon;\n            let iconDescription = data.weather[0].description;\n\n            let tempObj = {\n              min: data.main.temp_min,\n              max: data.main.temp_max,\n              unit: \"F\",\n              iconURL: `https://openweathermap.org/img/w/${iconId}.png`,\n              iconDescription: iconDescription,\n            };\n            setTemp(tempObj);\n            setShowTempIcon(false);\n          })\n          .catch((e) => {\n            console.error(e);\n          });\n\n        if (state.address === \"\") {\n          let data = reverseGEO(latlng[0], latlng[1]);\n          data\n            .then((data) => {\n              if (data.localityInfo.informative) {\n                let lastInfo =\n                  data.localityInfo.informative[\n                    data.localityInfo.informative.length - 1\n                  ];\n                let addressString = `${lastInfo.name}, ${data.city}`;\n                dispatch({\n                  type: \"CHANGE_ADDRESS\",\n                  data: {\n                    address: addressString,\n                    addressVerified: true,\n                  },\n                });\n              }\n              if (data.postcode) {\n                dispatch({\n                  type: \"UPDATE_ZIP_CODE\",\n                  data: {\n                    zipCode: parseInt(data.postcode),\n                  },\n                });\n              }\n            })\n            .catch((e) => {\n              console.error(\"Geocode.xyz:\", e);\n            });\n        }\n      }\n    };\n\n    if (state.markers[0].length > 0) {\n      setShowFeatures();\n    }\n  }, [dispatch, state.address, state.markers, state.progress]);\n\n  const makeURLString = (url, params) => {\n    return `${url}?lat=${params[0]}&lon=${params[1]}&appid=${apiKey}&units=imperial`;\n  };\n\n  const reverseGEO = async (lat, lng) => {\n    let url = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lng}&localityLanguage=en`;\n    let data = await fetch(url);\n    data = data.json();\n\n    return data;\n  };\n\n  return state.progress >= 1 ? (\n    showTempIcon ? (\n      <Fragment>\n        Forecast:&nbsp;\n        {cloudIcon(14, 20)}&nbsp; Loading..\n      </Fragment>\n    ) : (\n      <Fragment>\n        Forecast:\n        <img\n          width=\"50\"\n          height=\"50\"\n          src={temp.iconURL}\n          alt={temp.iconDescription}\n          title={temp.iconDescription}\n        />\n        {Number(temp.max.toFixed(1))} | {Number(temp.min.toFixed(1))}&nbsp;\n        {temp.unit}\n        <span className=\"ml-2\">\n          <ReferenceTooltip\n            source={\"openweathermap.org\"}\n            url={\"https://openweathermap.org/\"}\n          />\n        </span>\n      </Fragment>\n    )\n  ) : (\n    \"\"\n  );\n};\n\nexport default ForecastComponent;\n","/*\n  google maps component which leaflet is wrapped around\n  fetchLocationDetails fetches location data\n  styled using makeStyles\n*/\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport parse from \"autosuggest-highlight/parse\";\nimport throttle from \"lodash/throttle\";\nimport React, { useContext, useEffect } from \"react\";\nimport { googleApiKey } from \"../../shared/keys\";\nimport { Context } from \"../../store/Store\";\n\nconst isNum = (val) => {\n  return /^\\d+$/.test(val);\n};\n\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n\n  const script = document.createElement(\"script\");\n  script.setAttribute(\"async\", \"\");\n  script.setAttribute(\"id\", id);\n  script.src = src;\n  position.appendChild(script);\n}\n\nconst autocompleteService = { current: null };\nconst placeService = { current: null };\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function GoogleAutocomplete({\n  mapInstance,\n  mapsApi,\n  latLng,\n  setLatLng,\n  searchLabel = \"FIND YOUR LOCATION\",\n  setAddress,\n  setCounty,\n  selectedToEditSite,\n  setSelectedToEditSite,\n}) {\n  const {state, dispatch} = useContext(Context);\n  const classes = useStyles();\n  const [value, setValue] = React.useState(null);\n  const [inputValue, setInputValue] = React.useState(\n    state.fullAddress ? state.fullAddress : \"\"\n  );\n  const [options, setOptions] = React.useState([]);\n  const loaded = React.useRef(false);\n\n  useEffect(() => {\n    if (state.addressChangedViaMap) {\n      setValue(state.fullAddress);\n    }\n  }, [state.addressChangedViaMap, state.fullAddress]);\n\n  useEffect(() => {\n    setValue(state.fullAddress);\n  }, [state.fullAddress]);\n\n  if (typeof window !== \"undefined\" && !loaded.current) {\n    if (!document.querySelector(\"#google-maps\")) {\n      loadScript(\n        `https://maps.googleapis.com/maps/api/js?key=${googleApiKey}&libraries=places`,\n        document.querySelector(\"head\"),\n        \"google-maps\"\n      );\n    }\n\n    loaded.current = true;\n  }\n\n  const fetchData = React.useMemo(\n    () =>\n      throttle((request, callback) => {\n        autocompleteService.current.getPlacePredictions(request, callback);\n      }, 200),\n    []\n  );\n\n  const fetchLocalData = {\n    load: (place_id, main_text) => {\n      fetchLocalData.fetchPlaces(place_id).then((res) => {\n        fetchLocalData.setData(res, main_text);\n      });\n    },\n    fetchPlaces: async (place_id) => {\n      placeService.current = new window.google.maps.Geocoder();\n      const placeRequest = {\n        placeId: place_id,\n        region: \"en-US\",\n      };\n      return await new Promise((resolve) =>\n        placeService.current.geocode(placeRequest, (results, status) => {\n          resolve({ results, status });\n        })\n      );\n    },\n    fetchZipFromLatLng: async (lat, lng) => {\n      const geocoder = new window.google.maps.Geocoder();\n      const latlng = new window.google.maps.LatLng(lat, lng);\n\n      return geocoder.geocode({ latLng: latlng });\n    },\n    setData: async ({ results, status }, main_text) => {\n      if (status === \"OK\") {\n        const county = results[0].address_components.filter(\n          (e) => e.types[0] === \"administrative_area_level_2\"\n        );\n        let zipCode = results[0].address_components.filter(\n          (e) => e.types[0] === \"postal_code\"\n        );\n\n        if (zipCode.length === 0) {\n          const lonBounds = results[0].geometry.bounds.Hb;\n          const lonCenter = (lonBounds.g + lonBounds.i) / 2;\n          const latBounds = results[0].geometry.bounds.tc;\n          const latCenter = (latBounds.g + latBounds.i) / 2;\n\n          fetchLocalData\n            .fetchZipFromLatLng(latCenter, lonCenter)\n            .then((zip) => {\n              let zipCode = zip.results[0].address_components.filter(\n                (e) => e.types[0] === \"postal_code\"\n              );\n              if (county.length !== 0) {\n                // If google is able to find the county, pick the first preference!\n                fetchLocalData.fetchGeocode(\n                  results,\n                  county,\n                  main_text,\n                  zipCode\n                );\n              } else {\n                fetchLocalData.fetchGeocode(results, \"\", main_text, zipCode);\n              }\n            });\n        } else if (county.length !== 0) {\n          // If google is able to find the county, pick the first preference!\n          fetchLocalData.fetchGeocode(results, county, main_text, zipCode);\n        } else {\n          fetchLocalData.fetchGeocode(results, \"\", main_text, zipCode);\n        }\n      } else {\n        console.error(\"Google PlaceService Status\", status);\n      }\n    },\n    fetchGeocode: (results, county, main_text, zipCode) => {\n      county = county || [{}];\n\n      dispatch({\n        type: \"CHANGE_ADDRESS_VIA_MAP\",\n        data: {\n          address: results[0].formatted_address.split(\",\")[0],\n          fullAddress: results[0].formatted_address,\n          addressVerified: true,\n        },\n      });\n\n      if (zipCode.length === 0) {\n        setSelectedToEditSite({\n          ...selectedToEditSite,\n          latitude: results[0].geometry.location.lat(),\n          longitude: results[0].geometry.location.lng(),\n          county: county[0].long_name,\n          address: main_text,\n          zipCode: 0,\n        });\n      } else {\n        setSelectedToEditSite({\n          ...selectedToEditSite,\n          latitude: results[0].geometry.location.lat(),\n          longitude: results[0].geometry.location.lng(),\n          county: county[0].long_name,\n          address: main_text,\n          zipCode: parseInt(zipCode[0].long_name),\n        });\n      }\n    } \n  };\n\n  const fetchLocationDetails = ({ place_id, structured_formatting }) => {\n    if (place_id) {\n      fetchLocalData.load(place_id, structured_formatting.main_text);\n    }\n  };\n\n  useEffect(() => {\n    let active = true;\n\n    if (!autocompleteService.current && window.google) {\n      autocompleteService.current =\n        new window.google.maps.places.AutocompleteService();\n    }\n    if (!autocompleteService.current) {\n      return undefined;\n    }\n\n    if (inputValue === \"\") {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n\n    if (isNum(inputValue) && inputValue.length >= 3) {\n      //  probably a zip code?\n      fetchData(\n        {\n          input: inputValue,\n          types: [\"(regions)\"],\n          componentRestrictions: { country: \"US\" },\n        },\n        (results) => {\n          if (active) {\n            let newOptions = [];\n\n            if (value) {\n              newOptions = [value];\n            }\n\n            if (results) {\n              newOptions = [...newOptions, ...results];\n            }\n\n            setOptions(newOptions);\n          }\n        }\n      );\n    } else {\n      fetchData(\n        {\n          input: inputValue,\n\n          componentRestrictions: { country: \"US\" },\n        },\n        (results) => {\n          if (active) {\n            let newOptions = [];\n\n            if (value) {\n              newOptions = [value];\n            }\n\n            if (results) {\n              newOptions = [...newOptions, ...results];\n            }\n\n            setOptions(newOptions);\n          }\n        }\n      );\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue, fetchData]);\n\n  return (\n    <Autocomplete\n      style={{ zIndex: 1000003 }}\n      id=\"google-map-demo\"\n      fullWidth\n      getOptionLabel={(option) =>\n        typeof option === \"string\" ? option : option.description\n      }\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      value={value}\n      onChange={(event, newValue) => {\n        setOptions(newValue ? [newValue, ...options] : options);\n        setValue(newValue);\n        // fetch location details\n        if (newValue) {\n          fetchLocationDetails(newValue);\n        }\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => {\n        return (\n          <TextField\n            {...params}\n            label={searchLabel}\n            variant=\"filled\"\n            fullWidth\n          />\n        );\n      }}\n      renderOption={(option) => {\n        let matches = [];\n        let parts = [];\n        if (option.structured_formatting) {\n          matches = option.structured_formatting.main_text_matched_substrings;\n\n          parts = parse(\n            option.structured_formatting.main_text,\n            matches.map((match) => [match.offset, match.offset + match.length])\n          );\n        }\n\n        return (\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <LocationOnIcon className={classes.icon} />\n            </Grid>\n            <Grid item xs>\n              {parts.map((part, index) => (\n                <span\n                  key={index}\n                  style={{ fontWeight: part.highlight ? 700 : 400 }}\n                >\n                  {part.text}\n                </span>\n              ))}\n\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                {option.structured_formatting\n                  ? option.structured_formatting.secondary_text\n                  : \"\"}\n              </Typography>\n            </Grid>\n          </Grid>\n        );\n      }}\n    />\n  );\n}\n","/*\n  Allows drawing a polygon over the map component \n  updateGlobalMarkers handles the snackbar notifying the user their location is saved\n  setAddress sets the address in google maps based on lat/long\n  onCreated sets up the map\n  styled using ../../styles/map.scss\n*/\n\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  FeatureGroup,\n  Map,\n  Marker,\n  Polygon,\n  TileLayer,\n  Tooltip,\n} from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/map.scss\";\n\n// work around broken icons when using webpack, see https://github.com/PaulLeCam/react-leaflet/issues/255\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl:\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0/images/marker-icon.png\",\n  iconUrl:\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0/images/marker-icon.png\",\n  shadowUrl:\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0/images/marker-shadow.png\",\n});\n\nconst MapContext = ({ width, height, minzoom, maxzoom, from }) => {\n  const {state, dispatch} = useContext(Context);\n  const [show, setShow] = useState(true);\n  const [mapCenter, setMapCenter] = useState([]);\n  const [isPoly, setIsPoly] = useState(false);\n  const [showEditControl, setShowEditControl] = useState(true);\n\n  useEffect(() => {\n    if (from === \"location\") {\n      setShowEditControl(true);\n    } else {\n      setShowEditControl(false);\n    }\n  }, [from]);\n\n  const updateGlobalMarkers = (markersArray, type = \"\") => {\n    if (type === \"marker\") {\n      setIsPoly(false);\n    } else {\n      setIsPoly(true);\n    }\n    dispatch({\n      type: \"UPDATE_MARKER\",\n      data: {\n        markers: markersArray,\n      },\n    });\n\n    dispatch({\n      type: \"SNACK\",\n      data: {\n        snackOpen: true,\n        snackMessage: \"Your location has been saved.\",\n      },\n    });\n  };\n\n  useEffect(() => {\n    setMapCenter(state.markers[0]);\n    if (state.markers.length === 1) {\n      // marker\n      setIsPoly(false);\n    } else {\n      // polygon\n      setIsPoly(true);\n    }\n  }, [state.markers]);\n  const [editableFG, setEditableFG] = useState(null);\n  const onFeatureGroupReady = (reactFGref) => {\n    // store the featureGroup ref for future access to content\n    setEditableFG(reactFGref);\n  };\n\n  const setAddress = (latLng) => {\n    let geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({ location: latLng }, (results, status) => {\n      if (status === \"OK\") {\n        let formattedAddressArray = results[0].formatted_address.split(\",\");\n        let formattedAddressLength = formattedAddressArray.length;\n        let zipString =\n          formattedAddressArray[formattedAddressLength - 2].split(\" \");\n        let zipArray = zipString.filter((a) => parseInt(a));\n\n        dispatch({\n          type: \"CHANGE_ADDRESS_VIA_MAP\",\n          data: {\n            address: results[0].formatted_address.split(\",\")[0],\n            fullAddress: results[0].formatted_address,\n            zip: parseInt(zipArray[0]),\n            addressVerified: true,\n          },\n        });\n      } else {\n        console.error(\"API fetch error\", results);\n      }\n    });\n  };\n  const onCreated = (e) => {\n    const drawnItems = editableFG.leafletElement._layers;\n\n    // if the number of layers is bigger than 1 then delete the first\n    // console.log(drawnItems);\n    if (Object.keys(drawnItems).length > 1) {\n      Object.keys(drawnItems).forEach((layerid, index) => {\n        if (index > 0) return;\n\n        const layer = drawnItems[layerid];\n        editableFG.leafletElement.removeLayer(layer);\n        setShow(false);\n      });\n      if (e.layerType === \"marker\") {\n        const lat = e.layer._latlng.lat;\n        const lng = e.layer._latlng.lng;\n        const latLng = { lat: lat, lng: lng };\n        // reverse geocode\n        setAddress(latLng);\n\n        updateGlobalMarkers([[lat, lng]], \"marker\");\n      } else if (e.layerType === \"polygon\") {\n        const latlngs = e.layer._latlngs;\n        let markers = [];\n        const firstLatLng = { lat: latlngs[0][0].lat, lng: latlngs[0][0].lng };\n        // reverse geocode\n        setAddress(firstLatLng);\n\n        latlngs.forEach((latlngArr) => {\n          latlngArr.forEach((latlng) => {\n            markers.push([latlng.lat, latlng.lng]);\n          });\n        });\n        updateGlobalMarkers(markers, \"poly\");\n      }\n    }\n  };\n\n  return mapCenter.length > 0 ? (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <Map\n          minZoom={minzoom}\n          zoom={15}\n          maxZoom={maxzoom}\n          center={isPoly ? getPolyCenter(state.markers) : mapCenter}\n          style={{ width: width, height: height }}\n        >\n          <TileLayer\n            subdomains={[\"mt0\", \"mt1\", \"mt2\", \"mt3\"]}\n            attribution={`Map data &copy; <a target=\"attr\" href=\"http://googlemaps.com\">Google</a>`}\n            url=\"http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}\"\n          />\n          <FeatureGroup\n            ref={(featureGroupRef) => {\n              onFeatureGroupReady(featureGroupRef);\n            }}\n          >\n            {showEditControl ? (\n              <EditControl\n                edit={{ edit: false }}\n                position=\"topleft\"\n                onEdited={(e) => {\n                  //   console.log(\"edited\", e);\n                }}\n                onCreated={onCreated}\n                onDeleted={(e) => {\n                  console.log(\"deleted\", e);\n                }}\n                draw={{\n                  rectangle: false,\n                  circle: false,\n                  circlemarker: false,\n                  line: false,\n                  polygon: {\n                    allowIntersection: false,\n                    showArea: true,\n                    metric: false,\n                  },\n                  polyline: false,\n                  allowIntersection: false,\n                }}\n              />\n            ) : (\n              \"\"\n            )}\n            {show ? (\n              isPoly ? (\n                <Polygon positions={state.markers}>\n                  <Tooltip>Your Field</Tooltip>\n                </Polygon>\n              ) : (\n                <Marker position={state.markers[0]}>\n                  <Tooltip>Your Field</Tooltip>\n                </Marker>\n              )\n            ) : (\n              \"\"\n            )}\n          </FeatureGroup>\n          {/* <TileLayer\n            attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n          /> */}\n        </Map>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\nexport default MapContext;\n\n// Compute and return center of a polygon\n// accepts [[number][number]...[number]]\n// returns [number, number]\nconst getPolyCenter = (arr) => {\n  var x = arr.map((x) => x[0]);\n  var y = arr.map((x) => x[1]);\n  var cx = (Math.min(...x) + Math.max(...x)) / 2;\n  var cy = (Math.min(...y) + Math.max(...y)) / 2;\n  return [cx, cy];\n};\n","/*\n  This is the main location widget component\n  styled using ../../styles/location.scss\n*/\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  Typography,\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/location.scss\";\nimport GoogleAutocomplete from \"./GoogleAutocomplete\";\nimport MapContext from \"./MapContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst LocationComponent = ({ title, caller }) => {\n  const classes = useStyles();\n  const {state, dispatch} = useContext(Context);\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const sfilters = state[section];\n\n  const [showRestartPrompt, setShowRestartPrompt] = useState(false);\n  const [restartAccept, setRestartAccept] = useState(false);\n  const [zoneSelection, setZoneSelection] = useState(7);\n  useEffect(() => {\n    document.title = title ? title : \"Decision Support Tool\";\n  }, [title]);\n\n  useEffect(() => {\n    if (zoneSelection === 3) {\n      dispatch({\n        type: \"UPDATE_ZONE_TEXT\",\n        data: {\n          zoneText: \"Zone 7\",\n          zone: parseInt(7),\n        },\n      });\n    } else if (zoneSelection === 4) {\n      dispatch({\n        type: \"UPDATE_ZONE_TEXT\",\n        data: {\n          zoneText: \"Zone 4\",\n          zone: parseInt(zoneSelection),\n        },\n      });\n    } else if (zoneSelection === 5) {\n      dispatch({\n        type: \"UPDATE_ZONE_TEXT\",\n        data: {\n          zoneText: \"Zone 5\",\n          zone: parseInt(zoneSelection),\n        },\n      });\n    } else if (zoneSelection === 6) {\n      dispatch({\n        type: \"UPDATE_ZONE_TEXT\",\n        data: {\n          zoneText: \"Zone 6\",\n          zone: parseInt(zoneSelection),\n        },\n      });\n    } else {\n      dispatch({\n        type: \"UPDATE_ZONE_TEXT\",\n        data: {\n          zoneText: \"Zone 7\",\n          zone: parseInt(7),\n        },\n      });\n    }\n  }, [restartAccept, dispatch, zoneSelection]);\n\n  const handleZoneChange = (event) => {\n    if (caller === \"greenbar\") {\n      setShowRestartPrompt(true);\n      setZoneSelection(event.target.value);\n    } else {\n      if (event.target.value === 3) {\n        dispatch({\n          type: \"UPDATE_ZONE_TEXT\",\n          data: {\n            zoneText: \"Zone 7\",\n            zone: parseInt(7),\n          },\n        });\n      } else if (event.target.value === 4) {\n        dispatch({\n          type: \"UPDATE_ZONE_TEXT\",\n          data: {\n            zoneText: \"Zone 4\",\n            zone: parseInt(event.target.value),\n          },\n        });\n      } else if (event.target.value === 5) {\n        dispatch({\n          type: \"UPDATE_ZONE_TEXT\",\n          data: {\n            zoneText: \"Zone 5\",\n            zone: parseInt(event.target.value),\n          },\n        });\n      } else if (event.target.value === 6) {\n        dispatch({\n          type: \"UPDATE_ZONE_TEXT\",\n          data: {\n            zoneText: \"Zone 6\",\n            zone: parseInt(event.target.value),\n          },\n        });\n      } else {\n        dispatch({\n          type: \"UPDATE_ZONE_TEXT\",\n          data: {\n            zoneText: \"Zone 7\",\n            zone: parseInt(7),\n          },\n        });\n      }\n    }\n  };\n  const [selectedToEditSite, setSelectedToEditSite] = useState({});\n  useEffect(() => {\n    let { latitude, longitude, address, zipCode } = selectedToEditSite;\n    if (Object.keys(selectedToEditSite).length === 5) {\n      dispatch({\n        type: \"UPDATE_LOCATION\",\n        data: {\n          address: address,\n          latitude: latitude,\n          longitude: longitude,\n          zip: zipCode,\n        },\n      });\n    }\n  }, [selectedToEditSite, dispatch]);\n  return (\n    <div className=\"container-fluid mt-5\">\n      <div className=\"row boxContainerRow\" style={{ minHeight: \"520px\" }}>\n        <div className=\"col-xl-6 col-lg-12\">\n          <div className=\"container-fluid\">\n            <Typography variant=\"h4\">\n              Where is your field located?\n            </Typography>\n\n            <Typography variant=\"body1\" align=\"left\" className=\"pt-3\">\n              Enter your USDA plant hardiness zone, address, or zip code and\n              hit <Search fontSize=\"inherit\" /> to determine your location.\n            </Typography>\n\n            <div className=\"row pt-3 mt-4\">\n              <div className=\"col-md-9 col-lg-8 col-sm-12 row\">\n                <GoogleAutocomplete\n                  selectedToEditSite={selectedToEditSite}\n                  setSelectedToEditSite={setSelectedToEditSite}\n                />\n              </div>\n              <div className=\"col-md-3 col-lg-4 col-sm-12 col-12\">\n                <FormControl\n                  variant=\"filled\"\n                  style={{ width: \"100%\" }}\n                  className={classes.formControl}\n                >\n                  <InputLabel>PLANT HARDINESS ZONE</InputLabel>\n                  <Select\n                    variant=\"filled\"\n                    labelId=\"plant-hardiness-zone-dropdown-select\"\n                    id=\"plant-hardiness-zone-dropdown-select\"\n                    style={{\n                      textAlign: \"left\",\n                    }}\n                    onChange={handleZoneChange}\n                    value={sfilters.zone}\n                  >\n                    <MenuItem value={4} key={4}>\n                      Zone 4\n                    </MenuItem>\n                    <MenuItem value={5} key={5}>\n                      Zone 5\n                    </MenuItem>\n                    <MenuItem value={6} keuy={6}>\n                      Zone 6\n                    </MenuItem>\n                    <MenuItem value={7} key={7}>\n                      Zone 7\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div\n                className=\"col-md-6 offset-md-6 col-sm-12 row\"\n                style={{ textAlign: \"left\" }}\n              ></div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 offset-md-6 col-sm-12\"></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-6 col-lg-12\">\n          <MapContext\n            width=\"100%\"\n            height=\"400px\"\n            minzoom={4}\n            maxzoom={20}\n            from=\"location\"\n          />\n        </div>\n      </div>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        open={showRestartPrompt}\n      >\n        <DialogContent dividers>\n          <Typography variant=\"body1\">\n            Restarting will remove all cover crops added to your list. Are you\n            sure you want to restart?\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              setShowRestartPrompt(false);\n              setRestartAccept(false);\n            }}\n            color=\"secondary\"\n          >\n            No\n          </Button>\n          <Button\n            onClick={() => {\n              setShowRestartPrompt(false);\n              setRestartAccept(true);\n            }}\n            color=\"secondary\"\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default LocationComponent;\n","/*\n  contains the popup for confirming or altering your soil conditions\n  getDrainageText fetches the drainage info for the crop\n  styled using ../../styles/soilConditions.scss\n*/\n\nimport { Button, Chip, Switch, Typography } from \"@material-ui/core\";\nimport {\n  InvertColors,\n  LocalDrinkOutlined,\n  Terrain,\n  WavesOutlined,\n} from \"@material-ui/icons\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ReferenceTooltip } from \"../../shared/constants\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/soilConditions.scss\";\n\nconst SoilCondition = (props) => {\n  const {state, dispatch} = useContext(Context);\n  const { soilData, soilDataOriginal, markers } = state;\n  const [tilingCheck, setTilingCheck] = useState(false);\n\n  useEffect(() => {\n    const getSSURGOData = (lat, lon) => {\n      let markersCopy = markers;\n\n      let longLatString = \"\";\n\n      markersCopy.forEach((val, i) => {\n        // get long lat formatted as requested by SSURGO (long lat, long lat, ...)\n        // saved as longLatString\n        if (i === markersCopy.length - 1) {\n          longLatString +=\n            markersCopy[i][1] + \" \" + markersCopy[i][0] + \",\" + lon + \" \" + lat;\n        } else {\n          longLatString += markersCopy[i][1] + \" \" + markersCopy[i][0] + \",\";\n        }\n      });\n      let soilDataQuery = \"\";\n\n      if (markersCopy.length > 1) {\n        soilDataQuery = `SELECT mu.mukey AS MUKEY, mu.muname AS Map_Unit_Name, muag.drclassdcd AS Drainage_Class, muag.flodfreqdcd AS Flooding_Frequency, mp.mupolygonkey as MPKEY\n      FROM mapunit AS mu \n      INNER JOIN muaggatt AS muag ON muag.mukey = mu.mukey\n      INNER JOIN mupolygon AS mp ON mp.mukey = mu.mukey\n      WHERE mu.mukey IN (SELECT * from SDA_Get_Mukey_from_intersection_with_WktWgs84('polygon ((${longLatString}))'))\n      AND\n      mp.mupolygonkey IN  (SELECT * from SDA_Get_Mupolygonkey_from_intersection_with_WktWgs84('polygon ((${longLatString}))'))`;\n      } else {\n        // point\n        soilDataQuery = `SELECT mu.mukey AS MUKEY, mu.muname AS Map_Unit_Name, muag.drclassdcd AS Drainage_Class, muag.flodfreqdcd AS Flooding_Frequency, mp.mupolygonkey as MPKEY\n        FROM mapunit AS mu \n        INNER JOIN muaggatt AS muag ON muag.mukey = mu.mukey\n        INNER JOIN mupolygon AS mp ON mp.mukey = mu.mukey\n        WHERE mu.mukey IN (SELECT * from SDA_Get_Mukey_from_intersection_with_WktWgs84('point (${lon} ${lat})'))\n        AND\n        mp.mupolygonkey IN  (SELECT * from SDA_Get_Mupolygonkey_from_intersection_with_WktWgs84('point (${lon} ${lat})'))`;\n      }\n\n      // console.log(soilDataQuery);\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n      var urlencoded = new URLSearchParams();\n      urlencoded.append(\"query\", soilDataQuery);\n      urlencoded.append(\"format\", \"json+columnname\");\n\n      var requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: \"follow\",\n      };\n\n      dispatch({\n        type: \"TOGGLE_SOIL_LOADER\",\n        data: {\n          isSoilDataLoading: true,\n        },\n      });\n\n      fetch(\n        \"https://sdmdataaccess.sc.egov.usda.gov/Tabular/post.rest\",\n        requestOptions\n      )\n        .then((response) => response.json())\n        .then((result) => {\n          if (result !== {}) {\n            let Ponding_Frequency = result[\"Table\"][1][4];\n            let mapUnitString = \"\";\n\n            let stringSplit = [];\n\n            result[\"Table\"].forEach((el, index) => {\n              if (index !== 0) {\n                if (stringSplit.indexOf(el[1].split(\",\")[0]) === -1) {\n                  stringSplit.push(el[1].split(\",\")[0]);\n                }\n              }\n            });\n\n            const filteredArr = stringSplit.filter((elm) => elm);\n            mapUnitString = filteredArr.join(\", \");\n\n            let floodingClasses = [];\n            result[\"Table\"].forEach((el, index) => {\n              if (index === 0 || el.indexOf(\"Water\") === 1) {\n              } else {\n                if (floodingClasses.indexOf(el[3]) === -1) {\n                  floodingClasses.push(el[3]);\n                }\n              }\n            });\n\n            let drainageClasses = [];\n            result[\"Table\"].forEach((el, index) => {\n              if (index !== 0) {\n                if (drainageClasses.indexOf(el[2]) === -1) {\n                  drainageClasses.push(el[2]);\n                }\n              }\n            });\n            drainageClasses = drainageClasses.filter(function (el) {\n              return el != null;\n            });\n\n            dispatch({\n              type: \"UPDATE_SOIL_DATA\",\n              data: {\n                Map_Unit_Name: mapUnitString,\n                Drainage_Class: drainageClasses,\n                Flooding_Frequency: floodingClasses,\n                Ponding_Frequency: Ponding_Frequency,\n                for: { lat: lat, lon: lon },\n              },\n            });\n            dispatch({\n              type: \"UPDATE_SOIL_DATA_ORIGINAL\",\n              data: {\n                Map_Unit_Name: mapUnitString,\n                Drainage_Class: drainageClasses,\n                Flooding_Frequency: floodingClasses,\n                Ponding_Frequency: Ponding_Frequency,\n                for: { lat: lat, lon: lon },\n              },\n            });\n          }\n\n          dispatch({\n            type: \"TOGGLE_SOIL_LOADER\",\n            data: {\n              isSoilDataLoading: false,\n            },\n          });\n        })\n        .catch((error) => console.error(\"SSURGO FETCH ERROR\", error));\n    };\n\n    let lat = markers[0][0];\n    let lon = markers[0][1];\n\n    if (soilDataOriginal.for) {\n      if (\n        !(soilDataOriginal.for.lat === lat && soilDataOriginal.for.lon === lon)\n      ) {\n        getSSURGOData(lat, lon);\n      }\n    } else {\n      getSSURGOData(lat, lon);\n    }\n  }, [dispatch, markers, soilDataOriginal.for]);\n\n  const updateDrainageClass = (label = \"\") => {\n    let drainages = [...state.soilData.Drainage_Class];\n    if (drainages.indexOf(label) === -1) {\n      // does not exist, dispatch to state\n      drainages.push(label);\n      dispatch({\n        type: \"UPDATE_DRAINAGE_CLASS\",\n        data: drainages,\n      });\n    } else {\n      // exists, remove it from state\n      let index = drainages.indexOf(label);\n      drainages.splice(index, 1);\n\n      dispatch({\n        type: \"UPDATE_DRAINAGE_CLASS\",\n        data: drainages,\n      });\n    }\n  };\n\n  const updateFloodingFrequency = (label = \"\") => {\n    let floodings = [...state.soilData.Flooding_Frequency];\n    if (floodings.indexOf(label) === -1) {\n      // does not exist, dispatch to state\n      floodings.push(label);\n      dispatch({\n        type: \"UPDATE_FLOODING_FREQUENCY\",\n        data: floodings,\n      });\n    } else {\n      // exists, remove it from state\n      let index = floodings.indexOf(label);\n      floodings.splice(index, 1);\n\n      dispatch({\n        type: \"UPDATE_FLOODING_FREQUENCY\",\n        data: floodings,\n      });\n    }\n  };\n\n  const resetFloodingOptions = () => {\n    dispatch({\n      type: \"UPDATE_FLOODING_FREQUENCY\",\n      data: soilDataOriginal.Flooding_Frequency,\n    });\n  };\n\n  const resetDrainageClasses = () => {\n    dispatch({\n      type: \"UPDATE_DRAINAGE_CLASS\",\n      data: soilDataOriginal.Drainage_Class,\n    });\n    window.localStorage.setItem(\n      \"drainage\",\n      JSON.stringify(soilDataOriginal.Drainage_Class)\n    );\n    setTilingCheck(false);\n  };\n  const RenderFloodingOptions = ({ flooding = [\"\"] }) => {\n    return (\n      <div className=\"text-left\">\n        <Chip\n          label=\"None\"\n          color={flooding.includes(\"None\") ? \"primary\" : \"secondary\"}\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateFloodingFrequency(\"None\");\n          }}\n        />\n        <Chip\n          label=\"Very Rare\"\n          color={flooding.includes(\"Very rare\") ? \"primary\" : \"secondary\"}\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateFloodingFrequency(\"Very rare\");\n          }}\n        />\n        <Chip\n          label=\"Rare\"\n          color={flooding.includes(\"Rare\") ? \"primary\" : \"secondary\"}\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateFloodingFrequency(\"Rare\");\n          }}\n        />\n        <Chip\n          label=\"Occasional\"\n          color={flooding.includes(\"Occasional\") ? \"primary\" : \"secondary\"}\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateFloodingFrequency(\"Occasional\");\n          }}\n        />\n        <Chip\n          label=\"Frequent\"\n          color={flooding.includes(\"Frequent\") ? \"primary\" : \"secondary\"}\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateFloodingFrequency(\"Frequent\");\n          }}\n        />\n        <Chip\n          label=\"Very Frequent\"\n          color={flooding.includes(\"Very frequent\") ? \"primary\" : \"secondary\"}\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateFloodingFrequency(\"Very frequent\");\n          }}\n        />\n      </div>\n    );\n  };\n  const RenderDrainageClasses = ({ drainage = [\"\"] }) => {\n    return (\n      <div className=\"text-left\">\n        <Chip\n          label=\"Very Poorly Drained\"\n          color={\n            drainage.includes(\"Very poorly drained\") ? \"primary\" : \"secondary\"\n          }\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateDrainageClass(\"Very poorly drained\");\n          }}\n        />\n        <Chip\n          label=\"Poorly Drained\"\n          color={drainage.includes(\"Poorly drained\") ? \"primary\" : \"secondary\"}\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateDrainageClass(\"Poorly drained\");\n          }}\n        />\n        <Chip\n          label=\"Somewhat Poorly Drained\"\n          color={\n            drainage.includes(\"Somewhat poorly drained\")\n              ? \"primary\"\n              : \"secondary\"\n          }\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateDrainageClass(\"Somewhat poorly drained\");\n          }}\n        />\n        <Chip\n          label=\"Moderately Well Drained\"\n          color={\n            drainage.includes(\"Moderately well drained\")\n              ? \"primary\"\n              : \"secondary\"\n          }\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateDrainageClass(\"Moderately well drained\");\n          }}\n        />\n        <Chip\n          label=\"Well Drained\"\n          color={drainage.includes(\"Well drained\") ? \"primary\" : \"secondary\"}\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateDrainageClass(\"Well drained\");\n          }}\n        />\n        <Chip\n          label=\"Somewhat Excessively Drained\"\n          color={\n            drainage.includes(\"Somewhat excessively drained\")\n              ? \"primary\"\n              : \"secondary\"\n          }\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateDrainageClass(\"Somewhat excessively drained\");\n          }}\n        />\n        <Chip\n          label=\"Excessively Drained\"\n          color={\n            drainage.includes(\"Excessively drained\") ? \"primary\" : \"secondary\"\n          }\n          className=\"m-2 drainageTag\"\n          onClick={() => {\n            updateDrainageClass(\"Excessively drained\");\n          }}\n        />\n      </div>\n    );\n  };\n\n  const [showTiling, setShowTiling] = useState(false);\n  useEffect(() => {\n    const checkArray = [\n      \"Very poorly drained\",\n      \"Poorly drained\",\n      \"Somewhat poorly drained\",\n    ];\n    if (checkArray.some((e) => soilData.Drainage_Class.includes(e))) {\n      setShowTiling(true);\n    }\n    window.localStorage.setItem(\n      \"drainage\",\n      JSON.stringify(soilData.Drainage_Class)\n    );\n  }, [soilData.Drainage_Class]);\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <Typography variant=\"h4\" align=\"left\">\n          Soil Conditions?\n        </Typography>\n      </div>\n      <div className=\"col-12 pt-2 row\">\n        <div className=\"col-12\">\n          <Typography variant=\"body1\" className=\"soilConditionSubHeader\">\n            <Terrain />\n            &nbsp;SOILS COMPOSITION &nbsp;\n            <ReferenceTooltip\n              type=\"text\"\n              hasLink\n              title={\n                <div>\n                  <Typography variant=\"body1\">\n                    {\" \"}\n                    The tool auto-completes your soil composition based on\n                    location and the{\" \"}\n                    <a\n                      href=\"https://websoilsurvey.sc.egov.usda.gov/App/HomePage.htm\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      USDA NRCS Web Soil Survey\n                    </a>\n                    .\n                  </Typography>\n                </div>\n              }\n            />\n          </Typography>\n        </div>\n        <div className=\"col-12 pt-2 row\">\n          <div className=\"col-12\">\n            <Typography\n              variant=\"body1\"\n              className=\"font-weight-bold\"\n              style={{ color: \"rgb(89, 132, 69)\" }}\n              align=\"left\"\n            >\n              {soilData.Map_Unit_Name}\n            </Typography>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-12 pt-2 mt-2 row\">\n        <div className=\"col-12\">\n          <Typography variant=\"body1\" className=\"soilConditionSubHeader\">\n            <LocalDrinkOutlined />\n            &nbsp;DRAINAGE CLASS &nbsp;\n            <ReferenceTooltip\n              type=\"text\"\n              hasLink\n              title={\n                <div>\n                  <Typography variant=\"body1\">\n                    {\" \"}\n                    Indicates your soil drainage based on the{\" \"}\n                    <a\n                      href=\"https://websoilsurvey.sc.egov.usda.gov/App/HomePage.htm\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      USDA NRCS Web Soil Survey\n                    </a>{\" \"}\n                    drainage classes; you may modify your soil drainage by\n                    clicking below.{\" \"}\n                    <a\n                      href=\"https://www.nrcs.usda.gov/wps/portal/nrcs/detail/soils/ref/?cid=nrcs142p2_054253\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" \"}\n                      Definitions of values found here\n                    </a>\n                    .\n                  </Typography>\n                </div>\n              }\n            />\n          </Typography>\n        </div>\n        {arrayEquals(\n          soilDataOriginal.Drainage_Class,\n          soilData.Drainage_Class\n        ) ? (\n          \"\"\n        ) : (\n          <div className=\"col-12 pt-2\">\n            <div className=\"col-12 row\">\n              <div className=\"col text-left\">\n                <Button\n                  size=\"small\"\n                  onClick={() => {\n                    resetDrainageClasses();\n                  }}\n                >\n                  <Typography\n                    className=\"text-danger text-uppercase font-weight-bold\"\n                    variant=\"button\"\n                  >\n                    Values changed, reset?\n                  </Typography>\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"col-12\">\n          <RenderDrainageClasses drainage={soilData.Drainage_Class} />\n        </div>\n      </div>\n\n      {showTiling ? (\n        <div className=\"col-12 pt-2 mt-2 row\">\n          <div className=\"col-12\">\n            <Typography variant=\"body1\" className=\"soilConditionSubHeader\">\n              <InvertColors />\n              &nbsp;TILING &nbsp;\n              <ReferenceTooltip\n                type=\"text\"\n                content={\n                  \"Indicate if the field of interest has tile installed. If you have selected very poorly to somewhat poorly drained soils, selecting “yes” will increase your drainage class by one factor.\"\n                }\n              />\n            </Typography>\n          </div>\n          <div className=\"col-12 pt-2\">\n            <div className=\"pl-1 text-left\">\n              <Typography variant=\"body1\" display=\"inline\">\n                NO\n              </Typography>\n              <Switch\n                checked={tilingCheck}\n                onChange={(e) => {\n                  let soilDrainCopy = soilData.Drainage_Class;\n\n                  let drainSet = new Set(soilDrainCopy);\n                  if (e.target.checked) {\n                    if (\n                      drainSet.has(\"Very poorly drained\") &&\n                      drainSet.has(\"Poorly drained\") &&\n                      drainSet.has(\"Somewhat poorly drained\")\n                    ) {\n                      drainSet.delete(\"Very poorly drained\");\n                      drainSet.add(\"Moderately well drained\");\n                    } else {\n                      if (\n                        drainSet.has(\"Very poorly drained\") &&\n                        drainSet.has(\"Poorly drained\")\n                      ) {\n                        drainSet.delete(\"Very poorly drained\");\n                        drainSet.add(\"Somewhat poorly drained\");\n                      } else if (\n                        drainSet.has(\"Poorly drained\") &&\n                        drainSet.has(\"Somewhat poorly drained\")\n                      ) {\n                        drainSet.delete(\"Poorly drained\");\n                        drainSet.add(\"Moderately well drained\");\n                      } else if (\n                        drainSet.has(\"Very poorly drained\") &&\n                        drainSet.has(\"Somewhat poorly drained\")\n                      ) {\n                        drainSet.delete(\"Very poorly drained\");\n                        drainSet.delete(\"Somewhat poorly drained\");\n                        drainSet.add(\"Poorly drained\");\n                        drainSet.add(\"Moderately well drained\");\n                      } else if (drainSet.has(\"Very poorly drained\")) {\n                        drainSet.delete(\"Very poorly drained\");\n                        drainSet.add(\"Poorly drained\");\n                      } else if (drainSet.has(\"Poorly drained\")) {\n                        drainSet.delete(\"Poorly drained\");\n                        drainSet.add(\"Somewhat poorly drained\");\n                      } else if (drainSet.has(\"Somewhat poorly drained\")) {\n                        drainSet.delete(\"Somewhat poorly drained\");\n                        drainSet.add(\"Moderately well drained\");\n                      } else {\n                        drainSet.delete(\"Very poorly drained\");\n                        drainSet.delete(\"Poorly drained\");\n                        drainSet.delete(\"Somewhat poorly drained\");\n                        drainSet.add(\"Moderately well drained\");\n                      }\n                    }\n                    window.localStorage.setItem(\n                      \"drainage\",\n                      JSON.stringify([...drainSet])\n                    );\n                  } else {\n                    window.localStorage.setItem(\n                      \"drainage\",\n                      JSON.stringify(soilDataOriginal.Drainage_Class)\n                    );\n                  }\n\n                  setTilingCheck(!tilingCheck);\n                }}\n                name=\"checkedC\"\n              />\n              <Typography variant=\"body1\" display=\"inline\">\n                YES\n              </Typography>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"col-12 pt-2 mt-2 row\">\n        <div className=\"col-12\">\n          <Typography variant=\"body1\" className=\"soilConditionSubHeader\">\n            <WavesOutlined />\n            &nbsp;FLOODING FREQUENCY &nbsp;\n            <ReferenceTooltip\n              type=\"text\"\n              hasLink\n              title={\n                <div>\n                  <Typography variant=\"body1\">\n                    The annual probability of a flood event based on the{\" \"}\n                    <a\n                      href=\"https://websoilsurvey.sc.egov.usda.gov/App/HomePage.htm\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      USDA NRCS Web Soil Survey\n                    </a>\n                    , where “flood” refers to the temporary inundation of an\n                    area caused by overflowing streams, by runoff from adjacent\n                    slopes, or by tides. You may modify your flooding frequency\n                    by clicking below.{\" \"}\n                    <a\n                      href=\"https://www.nrcs.usda.gov/wps/portal/nrcs/detail/soils/ref/?cid=nrcs142p2_054253\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" \"}\n                      Definitions of values found here\n                    </a>\n                    .\n                  </Typography>\n                </div>\n              }\n            />\n          </Typography>\n        </div>\n\n        {arrayEquals(\n          soilData.Flooding_Frequency,\n          soilDataOriginal.Flooding_Frequency\n        ) ? (\n          \"\"\n        ) : (\n          <div className=\"col-12 pt-2\">\n            <div className=\"col-12 row\">\n              <div className=\"col text-left\">\n                <Button\n                  size=\"small\"\n                  onClick={() => {\n                    resetFloodingOptions();\n                  }}\n                >\n                  <Typography\n                    className=\"text-danger text-uppercase font-weight-bold\"\n                    variant=\"button\"\n                  >\n                    Values changed, reset?\n                  </Typography>\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"col-12\">\n          <RenderFloodingOptions flooding={soilData.Flooding_Frequency} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SoilCondition;\n\nconst arrayEquals = (a = [], b = []) => {\n  a.sort();\n  b.sort();\n  return (\n    Array.isArray(a) &&\n    Array.isArray(b) &&\n    a.length === b.length &&\n    a.every((val, index) => val === b[index])\n  );\n};\n","/*\n  Contains the climate conditions widget\n  validateAndBroadcastModalData validates that the day is between 1 and 31 \n  styled using makeStyles\n*/\n\nimport {\n  Backdrop,\n  Button,\n  Fade,\n  FormControl,\n  FormGroup,\n  InputLabel,\n  makeStyles,\n  Modal,\n  Select,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport { AcUnit, Info, Opacity, WbSunnyOutlined } from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { LightButton } from \"../../shared/constants\";\nimport { Context } from \"../../store/Store\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst WeatherConditions = (props) => {\n  const {state, dispatch} = useContext(Context);\n  const classes = useStyles();\n  const [months, setMonths] = useState([]);\n  const [currentMonthFull, setCurrentMonthFull] = useState(\"NOVEMBER\");\n  const [anyValuesChanged, setAnyValuesChanged] = useState(false);\n\n  const [weatherDataShadow, setWeatherDataShadow] = useState(state.weatherData);\n\n  const [lastFrostDayHelper, setLastFrostDayHelper] = useState(\"\");\n  const [firstFrostDayHelper, setFirstFrostDayHelper] = useState(\"\");\n  const [firstFrostDayError, setFirstFrostDayError] = useState(false);\n  const [lastFrostDayError, setLastFrostDayError] = useState(false);\n\n  useEffect(() => {\n    if (!state.ajaxInProgress) {\n      setWeatherDataShadow(state.weatherData);\n    }\n  }, [state.ajaxInProgress, state.weatherData]);\n\n  const [firstFrostMonth, setFirstFrostMonth] = useState(\n    state.weatherData.averageFrost.firstFrostDate.month\n  );\n  const [firstFrostDay, setFirstFrostDay] = useState(\n    state.weatherData.averageFrost.firstFrostDate.day\n  );\n  const [lastFrostMonth, setLastFrostMonth] = useState(\n    state.weatherData.averageFrost.lastFrostDate.month\n  );\n  const [lastFrostDay, setLastFrostDay] = useState(\n    state.weatherData.averageFrost.lastFrostDate.day\n  );\n\n  const [averagePrecipitation, setAveragePrecipitation] = useState({\n    thisMonth: state.weatherData.averagePrecipitation.thisMonth,\n    annual: state.weatherData.averagePrecipitation.annual,\n  });\n\n  const [frostFreeDays, setFrostFreeDays] = useState(\n    state.weatherData.frostFreeDays\n  );\n  const [open, setOpen] = useState(false);\n\n  const validateAndBroadcastModalData = () => {\n    // validate existing data\n\n    // TODO: Validate Modal Data\n\n    // data correct\n    setFirstFrostDayError(false);\n    setLastFrostDayError(false);\n    setFirstFrostDayHelper(\"\");\n    setLastFrostDayHelper(\"\");\n\n    let broadcastObject = {\n      averageFrost: {\n        firstFrostDate: {\n          month: firstFrostMonth,\n          day: firstFrostDay,\n        },\n        lastFrostDate: {\n          month: lastFrostMonth,\n          day: lastFrostDay,\n        },\n      },\n      averagePrecipitation: {\n        thisMonth: averagePrecipitation.thisMonth, //inches\n        annual: averagePrecipitation.annual, //inches\n      },\n      frostFreeDays: frostFreeDays,\n    };\n\n    if (firstFrostDay > 31 || firstFrostDay <= 0) {\n      setFirstFrostDayError(true);\n      setFirstFrostDayHelper(\"Invalid Day\");\n    } else if (lastFrostDay > 31 || lastFrostDay <= 0) {\n      setLastFrostDayError(true);\n      setLastFrostDayHelper(\"Invalid Day\");\n    } else {\n      dispatch({\n        type: \"UPDATE_WEATHER_CONDITIONS\",\n        data: { weatherData: broadcastObject },\n      });\n      setOpen(false);\n    }\n\n    // data incorrect\n\n    // show error on modal\n  };\n\n  useEffect(() => {\n    // get current month in long form\n    setCurrentMonthFull(moment().format(\"MMMM\"));\n    // render monthsShort on the modal\n    setMonths(moment.localeData().monthsShort());\n\n    setFirstFrostMonth(state.weatherData.averageFrost.firstFrostDate.month);\n    setFirstFrostDay(state.weatherData.averageFrost.firstFrostDate.day);\n    setLastFrostDay(state.weatherData.averageFrost.lastFrostDate.day);\n    setLastFrostMonth(state.weatherData.averageFrost.lastFrostDate.month);\n\n    setAveragePrecipitation({\n      thisMonth: state.weatherData.averagePrecipitation.thisMonth,\n      annual: state.weatherData.averagePrecipitation.annual,\n    });\n\n    setFrostFreeDays(state.weatherData.frostFreeDays);\n  }, [state.weatherData, props.caller]);\n\n  const handleModalOpen = () => {\n    setOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    const checkIfAnythingChanged = () => {\n      if (\n        firstFrostMonth ===\n          weatherDataShadow.averageFrost.firstFrostDate.month &&\n        parseInt(firstFrostDay) ===\n          parseInt(weatherDataShadow.averageFrost.firstFrostDate.day) &&\n        lastFrostMonth === weatherDataShadow.averageFrost.lastFrostDate.month &&\n        lastFrostDay === weatherDataShadow.averageFrost.lastFrostDate.day &&\n        parseFloat(averagePrecipitation.thisMonth) ===\n          parseFloat(weatherDataShadow.averagePrecipitation.thisMonth) &&\n        parseFloat(averagePrecipitation.annual) ===\n          parseFloat(weatherDataShadow.averagePrecipitation.annual) &&\n        parseInt(frostFreeDays) === parseInt(weatherDataShadow.frostFreeDays)\n      ) {\n        // return false;\n        setAnyValuesChanged(false);\n      } else {\n        // return true;\n        setAnyValuesChanged(true);\n      }\n    };\n\n    if (!state.ajaxInProgress) {\n      checkIfAnythingChanged();\n    }\n  }, [\n    weatherDataShadow,\n    state.ajaxInProgress,\n    firstFrostDay,\n    firstFrostMonth,\n    lastFrostDay,\n    lastFrostMonth,\n    averagePrecipitation,\n    frostFreeDays,\n  ]);\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <Typography variant=\"h4\" align=\"left\">\n          Climate Conditions?\n        </Typography>\n      </div>\n      <div className=\"mt-2 col-12 text-left\">\n        <Typography\n          variant=\"button\"\n          className={`font-weight-bold text-uppercase text-left ${\n            anyValuesChanged ? `text-danger` : ``\n          }`}\n          onClick={handleModalOpen}\n          style={{ cursor: \"pointer\" }}\n        >\n          &nbsp;Click To Edit\n          {anyValuesChanged ? `, values changed` : \"\"}\n        </Typography>\n      </div>\n      <div className=\"mt-3 col-12 row\">\n        <div className=\"col-12\">\n          <Typography\n            variant=\"body1\"\n            className=\"font-weight-bold text-uppercase text-left\"\n          >\n            <Opacity />\n            &nbsp; Average Precipitation &nbsp;{\" \"}\n            <Tooltip\n              arrow\n              interactive\n              placement=\"right\"\n              title={\n                <div>\n                  Five-year average monthly and annual precipitation from the\n                  Precision Sustainable Agriculture Weather API powered by{\" \"}\n                  <a\n                    href=\"https://www.nssl.noaa.gov/projects/mrms/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    NSSL MRMS\n                  </a>{\" \"}\n                  and{\" \"}\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                    NASA NLDAS-2\n                  </a>{\" \"}\n                  weather data.\n                </div>\n              }\n            >\n              <Info fontSize=\"small\" />\n            </Tooltip>\n          </Typography>\n        </div>\n        <div className=\"col-12\">\n          <Typography variant=\"body1\" className=\"text-left\">\n            <Opacity style={{ color: \"transparent\" }} />\n            &nbsp; <span>{currentMonthFull.toUpperCase()}:</span> &nbsp;\n            {state.weatherData.averagePrecipitation.thisMonth} inches\n          </Typography>\n          <Typography variant=\"body1\" className=\"text-left\">\n            <Opacity style={{ color: \"transparent\" }} />\n            &nbsp; <span>{\"Annual\"}:</span> &nbsp;\n            {state.weatherData.averagePrecipitation.annual} inches\n          </Typography>\n        </div>\n      </div>\n      <div className=\"mt-3 col-12 row\">\n        <div className=\"col-12\">\n          <Typography\n            variant=\"body1\"\n            className=\"font-weight-bold text-uppercase text-left\"\n          >\n            <AcUnit />\n            &nbsp; Average Frost Dates &nbsp;{\" \"}\n            {/* <Tooltip\n              dangerouslySetInnerHTML={\n                \"Average dates of the first and last frosts for your location, based on frost dates for the last five years from University of Georgia’s Weather App; you may manually change this input.\"\n              }\n            ></Tooltip> */}\n            <Tooltip\n              interactive\n              arrow\n              placement=\"right\"\n              title={\n                <div>\n                  Average dates of the first and last frosts for your location,\n                  based on frost dates for the last five years from the\n                  Precision Sustainable Agriculture Weather API powered by{\" \"}\n                  <a\n                    href=\"https://www.nssl.noaa.gov/projects/mrms/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    NSSL MRMS{\" \"}\n                  </a>{\" \"}\n                  and{\" \"}\n                  <a\n                    href=\"https://ldas.gsfc.nasa.gov/nldas/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    NASA NLDAS-2\n                  </a>{\" \"}\n                  weather data; you may manually change this input.\n                </div>\n              }\n            >\n              <Info fontSize=\"small\" />\n            </Tooltip>\n          </Typography>\n        </div>\n\n        <div className=\"col-12\">\n          <Typography variant=\"body1\" className=\"text-left\">\n            <Opacity style={{ color: \"transparent\" }} />\n            &nbsp; <span>{\"First Frost Date\"}:</span> &nbsp;\n            {`${state.weatherData.averageFrost.firstFrostDate.month} ${state.weatherData.averageFrost.firstFrostDate.day}`}\n          </Typography>\n          <Typography variant=\"body1\" className=\"text-left\">\n            <Opacity style={{ color: \"transparent\" }} />\n            &nbsp; <span>{\"Last Frost Date\"}:</span> &nbsp;\n            {`${state.weatherData.averageFrost.lastFrostDate.month} ${state.weatherData.averageFrost.lastFrostDate.day}`}\n          </Typography>\n        </div>\n      </div>\n      <div className=\"mt-3 col-12 row\">\n        <div className=\"col-12\">\n          <Typography\n            variant=\"body1\"\n            className=\"font-weight-bold text-uppercase text-left\"\n          >\n            <WbSunnyOutlined />\n            &nbsp; Average Frost Free Days &nbsp;{\" \"}\n            <Tooltip\n              arrow\n              interactive\n              placement=\"right\"\n              title={\n                <div>\n                  Number of days in your growing season, based on average first\n                  and last frost dates for the last five years from the\n                  Precision Sustainable Agriculture Weather API powered by{\" \"}\n                  <a\n                    href=\"https://www.nssl.noaa.gov/projects/mrms/\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    NSSL MRMS\n                  </a>{\" \"}\n                  and{\" \"}\n                  <a href=\"/#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    NASA NLDAS-2\n                  </a>{\" \"}\n                  weather data.\n                </div>\n              }\n            >\n              <Info fontSize=\"small\" />\n            </Tooltip>\n          </Typography>\n        </div>\n\n        <div className=\"col-12\">\n          <Typography variant=\"body1\" className=\"text-left\">\n            <Opacity style={{ color: \"transparent\" }} />\n            &nbsp; <span>{\"Frost Free Days\"}:</span> &nbsp;\n            {state.weatherData.frostFreeDays}\n          </Typography>\n        </div>\n      </div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"ransition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={`modalContainer ${classes.paper}`}>\n            <h2 id=\"transition-modal-title\">Edit Climate Data</h2>\n            <div id=\"transition-modal-description\">\n              <div className=\"container-fluid\">\n                <FormGroup>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-12\">\n                      <Typography variant=\"h6\">Average Frost Dates</Typography>\n                    </div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-6\">\n                      <FormControl style={{ width: \"100%\" }}>\n                        <InputLabel htmlFor=\"age-native-simple\">\n                          First Frost Month\n                        </InputLabel>\n                        <Select\n                          label=\"First Frost Month\"\n                          native\n                          value={firstFrostMonth}\n                          onChange={(event) => {\n                            setFirstFrostMonth(event.target.value);\n                          }}\n                          inputProps={{\n                            name: \"age\",\n                            id: \"age-native-simple\",\n                          }}\n                        >\n                          {months.map((val, key) => (\n                            <option\n                              value={moment(val, \"MMM\").format(\"MMMM\")}\n                              key={key}\n                            >\n                              {val}\n                            </option>\n                          ))}\n                        </Select>\n                        {firstFrostMonth !==\n                        weatherDataShadow.averageFrost.firstFrostDate.month ? (\n                          <Button\n                            className=\"text-danger\"\n                            size=\"small\"\n                            onClick={() =>\n                              setFirstFrostMonth(\n                                weatherDataShadow.averageFrost.firstFrostDate\n                                  .month\n                              )\n                            }\n                          >\n                            Values changed, Reset?\n                          </Button>\n                        ) : (\n                          <Typography variant=\"body2\">\n                            5 Year Average\n                          </Typography>\n                        )}\n                      </FormControl>\n                    </div>\n                    <div className=\"col-6\">\n                      <FormControl>\n                        <TextField\n                          label=\"First Frost Day\"\n                          type=\"number\"\n                          max=\"31\"\n                          min=\"1\"\n                          multiline={true}\n                          helperText={firstFrostDayHelper}\n                          error={firstFrostDayError}\n                          maxLength={2}\n                          id=\"margin-none\"\n                          value={firstFrostDay}\n                          onChange={(event) => {\n                            if (!isNaN(event.target.value)) {\n                              if (event.target.value === \"\") {\n                                setFirstFrostDay(\"\");\n                              } else\n                                setFirstFrostDay(parseInt(event.target.value));\n                            } else {\n                              setFirstFrostDay(1);\n                            }\n                          }}\n                          className={classes.textField}\n                        />\n                        {parseInt(firstFrostDay) !==\n                        parseInt(\n                          weatherDataShadow.averageFrost.firstFrostDate.day\n                        ) ? (\n                          <Button\n                            className=\"text-danger\"\n                            size=\"small\"\n                            onClick={() =>\n                              setFirstFrostDay(\n                                parseInt(\n                                  weatherDataShadow.averageFrost.firstFrostDate\n                                    .day\n                                )\n                              )\n                            }\n                          >\n                            Values changed, Reset?\n                          </Button>\n                        ) : (\n                          <Typography\n                            variant=\"body2\"\n                            style={{ marginLeft: \"8px\" }}\n                          >\n                            5 Year Average\n                          </Typography>\n                        )}\n                      </FormControl>\n                    </div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-6\">\n                      <FormControl style={{ width: \"100%\" }}>\n                        <InputLabel htmlFor=\"last-frost-month\">\n                          Last Frost Month\n                        </InputLabel>\n                        <Select\n                          label=\"Last Frost Month\"\n                          native\n                          value={lastFrostMonth}\n                          onChange={(event) => {\n                            setLastFrostMonth(event.target.value);\n                          }}\n                          inputProps={{\n                            name: \"last-frost-month\",\n                            id: \"last-frost-month\",\n                          }}\n                        >\n                          {months.map((val, key) => (\n                            <option\n                              value={moment(val, \"MMM\").format(\"MMMM\")}\n                              key={key}\n                            >\n                              {val}\n                            </option>\n                          ))}\n                        </Select>\n                        {lastFrostMonth !==\n                        weatherDataShadow.averageFrost.lastFrostDate.month ? (\n                          <Button\n                            className=\"text-danger\"\n                            size=\"small\"\n                            onClick={() =>\n                              setLastFrostMonth(\n                                weatherDataShadow.averageFrost.lastFrostDate\n                                  .month\n                              )\n                            }\n                          >\n                            Values changed, Reset?\n                          </Button>\n                        ) : (\n                          <Typography variant=\"body2\">\n                            5 Year Average\n                          </Typography>\n                        )}\n                      </FormControl>\n                    </div>\n                    <div className=\"col-6\">\n                      <FormControl>\n                        <TextField\n                          label=\"Last Frost Day\"\n                          type=\"number\"\n                          max=\"31\"\n                          min=\"1\"\n                          helperText={lastFrostDayHelper}\n                          error={lastFrostDayError}\n                          multiline={true}\n                          maxLength={2}\n                          value={lastFrostDay}\n                          onChange={(event) => {\n                            if (!isNaN(event.target.value)) {\n                              if (event.target.value === \"\") {\n                                setLastFrostDay(\"\");\n                              } else\n                                setLastFrostDay(parseInt(event.target.value));\n                            } else {\n                              setLastFrostDay(1);\n                            }\n                          }}\n                          className={classes.textField}\n                        />\n                        {parseInt(lastFrostDay) !==\n                        parseInt(\n                          weatherDataShadow.averageFrost.lastFrostDate.day\n                        ) ? (\n                          <Button\n                            className=\"text-danger\"\n                            size=\"small\"\n                            onClick={() =>\n                              setLastFrostDay(\n                                parseInt(\n                                  weatherDataShadow.averageFrost.lastFrostDate\n                                    .day\n                                )\n                              )\n                            }\n                          >\n                            Values changed, Reset?\n                          </Button>\n                        ) : (\n                          <Typography\n                            variant=\"body2\"\n                            style={{ marginLeft: \"8px\" }}\n                          >\n                            5 Year Average\n                          </Typography>\n                        )}\n                      </FormControl>\n                    </div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-12\">\n                      <Typography variant=\"h6\">\n                        Average Precipitation\n                      </Typography>\n                    </div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-6\">\n                      <FormControl>\n                        <TextField\n                          label={currentMonthFull}\n                          type=\"number\"\n                          inputProps={{ min: \"1\", max: \"100\", step: \"0.01\" }}\n                          maxLength={4}\n                          helperText=\"Inches\"\n                          value={averagePrecipitation.thisMonth}\n                          onChange={(event) => {\n                            setAveragePrecipitation({\n                              ...averagePrecipitation,\n                              thisMonth:\n                                event.target.value === \"\"\n                                  ? 0\n                                  : event.target.value,\n                            });\n                          }}\n                          className={classes.textField}\n                        />\n                        {parseFloat(averagePrecipitation.thisMonth) !==\n                        parseFloat(\n                          weatherDataShadow.averagePrecipitation.thisMonth\n                        ) ? (\n                          <Button\n                            className=\"text-danger\"\n                            size=\"small\"\n                            onClick={() =>\n                              setAveragePrecipitation({\n                                thisMonth: parseFloat(\n                                  weatherDataShadow.averagePrecipitation\n                                    .thisMonth\n                                ),\n                                annual: parseFloat(averagePrecipitation.annual),\n                              })\n                            }\n                          >\n                            Values changed, Reset?\n                          </Button>\n                        ) : (\n                          <Typography\n                            variant=\"body2\"\n                            style={{ marginLeft: \"8px\" }}\n                          >\n                            5 Year Average\n                          </Typography>\n                        )}\n                      </FormControl>\n                    </div>\n                    <div className=\"col-6\">\n                      <FormControl>\n                        <TextField\n                          label={\"Annual\"}\n                          type=\"number\"\n                          inputProps={{ min: \"1\", max: \"100\", step: \"0.01\" }}\n                          maxLength={4}\n                          helperText=\"Inches\"\n                          value={averagePrecipitation.annual}\n                          onChange={(event) => {\n                            setAveragePrecipitation({\n                              ...averagePrecipitation,\n                              annual:\n                                event.target.value === \"\"\n                                  ? 0\n                                  : parseFloat(event.target.value),\n                            });\n                          }}\n                          className={classes.textField}\n                        />\n                        {parseFloat(averagePrecipitation.annual) !==\n                        parseFloat(\n                          weatherDataShadow.averagePrecipitation.annual\n                        ) ? (\n                          <Button\n                            className=\"text-danger\"\n                            size=\"small\"\n                            onClick={() =>\n                              setAveragePrecipitation({\n                                thisMonth: parseFloat(\n                                  averagePrecipitation.thisMonth\n                                ),\n                                annual: parseFloat(\n                                  weatherDataShadow.averagePrecipitation.annual\n                                ),\n                              })\n                            }\n                          >\n                            Values changed, Reset?\n                          </Button>\n                        ) : (\n                          <Typography\n                            variant=\"body2\"\n                            style={{ marginLeft: \"8px\" }}\n                          >\n                            5 Year Average\n                          </Typography>\n                        )}\n                      </FormControl>\n                    </div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-12\">\n                      <Typography variant=\"h6\">Frost Free Days</Typography>\n                    </div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-6\">\n                      <FormControl>\n                        <TextField\n                          label={\"Frost Free Days\"}\n                          type=\"number\"\n                          step=\"0.01\"\n                          multiline={true}\n                          maxLength={4}\n                          value={frostFreeDays}\n                          onChange={(event) => {\n                            if (!isNaN(event.target.value)) {\n                              if (event.target.value === \"\") {\n                                setFrostFreeDays(0);\n                              } else\n                                setFrostFreeDays(parseInt(event.target.value));\n                            } else {\n                              setFrostFreeDays(0);\n                            }\n                          }}\n                          className={classes.textField}\n                        />\n                        {parseInt(frostFreeDays) !==\n                        parseInt(weatherDataShadow.frostFreeDays) ? (\n                          <Button\n                            className=\"text-danger\"\n                            size=\"small\"\n                            onClick={() =>\n                              setFrostFreeDays(\n                                parseInt(weatherDataShadow.frostFreeDays)\n                              )\n                            }\n                          >\n                            Values changed, Reset?\n                          </Button>\n                        ) : (\n                          <Typography\n                            variant=\"body2\"\n                            style={{ marginLeft: \"8px\" }}\n                          >\n                            5 Year Average\n                          </Typography>\n                        )}\n                      </FormControl>\n                    </div>\n                    <div className=\"col-6\"></div>\n                  </div>\n                  <div className=\"row mt-4\">\n                    <div className=\"col-6\">\n                      <LightButton\n                        disabled={false}\n                        onClick={validateAndBroadcastModalData}\n                      >\n                        update\n                      </LightButton>\n                      <Button onClick={() => setOpen(false)}>cancel</Button>\n                    </div>\n                  </div>\n                </FormGroup>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default WeatherConditions;\n","/*\n  This file contains the Greenbar component, helper functions, and styles\n  The Greenbar page is the bar in the header that contains the location, soil drainage info, temperature, and restart button\n  Styles are created using CustomStyles from ../../../shared/constants and ../../../styles/greenBar.scss\n*/\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  Typography,\n} from \"@material-ui/core\";\nimport { LocationOn, Refresh } from \"@material-ui/icons\";\nimport CloudIcon from \"@material-ui/icons/Cloud\";\nimport FilterHdrIcon from \"@material-ui/icons/FilterHdr\";\nimport moment from \"moment\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  CustomStyles,\n  greenBarExpansionPanelHeight,\n} from \"../../../shared/constants\";\nimport { Context } from \"../../../store/Store\";\nimport \"../../../styles/greenBar.scss\";\nimport LocationComponent from \"../../Location/Location\";\nimport SoilCondition from \"../../Location/SoilCondition\";\nimport WeatherConditions from \"../../Location/WeatherConditions\";\n\nconst speciesSelectorToolName = \"species-selector\";\n\nconst expansionPanelBaseStyle = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nconst greenBarWrapperBackground = {\n  backgroundColor: CustomStyles().lighterGreen,\n};\n\nconst Greenbar = () => {\n  const {state, dispatch} = useContext(Context);\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const sfilters = state[section];\n\n  const [expansionPanelComponent, setExpansionPanelComponent] = useState({\n    component: \"\",\n  });\n\n  useEffect(() => {\n    const greenBarParent = document.getElementById(\"greenBarParent\");\n    document.addEventListener(\"click\", (evt) => {\n      let targetElement = evt.target;\n      do {\n        if (targetElement === greenBarParent) {\n          return;\n        }\n\n        // Go up the DOM\n        targetElement = targetElement.parentNode;\n      } while (targetElement);\n    });\n\n    return () => {\n      closeExpansionPanel();\n    };\n  }, []);\n\n  const getAddress = () => {\n    if (state.address === \"\") {\n      return \"\";\n    } else {\n      return (\n        <Button\n          className=\"greenbarBtn\"\n          onClick={handleAddressBtnClick}\n          style={\n            expansionPanelComponent.component === \"location\"\n              ? {\n                  background: \"white\",\n                }\n              : {}\n          }\n        >\n          <span\n            style={\n              expansionPanelComponent.component === \"location\"\n                ? {\n                    color: \"black\",\n                  }\n                : {}\n            }\n          >\n            <LocationOn />\n            &nbsp;Zone {sfilters.zone}: {state.address}\n          </span>\n        </Button>\n      );\n    }\n  };\n\n  const closeExpansionPanel = () => {\n    const greenbarExpansionElement = document.getElementById(\n      \"greenBarExpansionPanel\"\n    );\n    greenbarExpansionElement.style.transform = \"translate(0px,0px)\";\n    greenbarExpansionElement.style.minHeight = \"0px\";\n    setExpansionPanelComponent({\n      component: \"\",\n    });\n  };\n  const handleAddressBtnClick = (evt) => {\n    const greenbarExpansionElement = document.getElementById(\n      \"greenBarExpansionPanel\"\n    );\n    if (\n      expansionPanelComponent.component === \"location\" &&\n      greenbarExpansionElement.style.minHeight ===\n        greenBarExpansionPanelHeight.large\n    ) {\n      // toggle\n      console.log(\"toggled\");\n      closeExpansionPanel();\n    } else {\n      greenbarExpansionElement.style.transform = \"translate(0px,0px)\";\n      greenbarExpansionElement.style.minHeight =\n        greenBarExpansionPanelHeight.large;\n      setExpansionPanelComponent({\n        component: \"location\",\n      });\n    }\n  };\n  const handleSoilBtnClick = (evt) => {\n    const greenbarExpansionElement = document.getElementById(\n      \"greenBarExpansionPanel\"\n    );\n    if (\n      expansionPanelComponent.component === \"soil\" &&\n      greenbarExpansionElement.style.minHeight ===\n        greenBarExpansionPanelHeight.large\n    ) {\n      // toggle\n      console.log(\"toggled\");\n      closeExpansionPanel();\n    } else {\n      greenbarExpansionElement.style.transform = \"translate(0px,0px)\";\n      greenbarExpansionElement.style.minHeight =\n        greenBarExpansionPanelHeight.large;\n      setExpansionPanelComponent({\n        component: \"soil\",\n      });\n    }\n  };\n\n  const handleWeatherBtnClick = (evt) => {\n    const greenbarExpansionElement = document.getElementById(\n      \"greenBarExpansionPanel\"\n    );\n\n    if (\n      expansionPanelComponent.component === \"weather\" &&\n      greenbarExpansionElement.style.minHeight ===\n        greenBarExpansionPanelHeight.large\n    ) {\n      // toggle\n      console.log(\"toggled\");\n      closeExpansionPanel();\n    } else {\n      greenbarExpansionElement.style.transform = \"translate(0px,0px)\";\n      greenbarExpansionElement.style.minHeight =\n        greenBarExpansionPanelHeight.large;\n      setExpansionPanelComponent({\n        component: \"weather\",\n      });\n    }\n  };\n  const getSoil = () => {\n    if (state.soilData.Flooding_Frequency === null) {\n      return \"\";\n    } else\n      return (\n        <Button\n          className=\"greenbarBtn\"\n          onClick={handleSoilBtnClick}\n          style={\n            expansionPanelComponent.component === \"soil\"\n              ? {\n                  background: \"white\",\n                }\n              : {}\n          }\n        >\n          <span\n            style={\n              expansionPanelComponent.component === \"soil\"\n                ? {\n                    color: \"black\",\n                  }\n                : {}\n            }\n          >\n            {<FilterHdrIcon />}\n            &nbsp;{\" \"}\n            {/* {`Soils: Map Unit Name (${state.soilData.Map_Unit_Name}%), Drainage Class: ${state.soilData.Drainage_Class}})`} */}\n            {`Soils: Drainage Class: ${state.soilData.Drainage_Class.toString()\n              .split(\",\")\n              .join(\", \")}`}\n          </span>\n        </Button>\n      );\n  };\n\n  const handleConfirmationChoice = (clearCoverCrops = false) => {\n    const defaultMarkers = [[40.78489145, -74.80733626930342]];\n\n    if (clearCoverCrops) {\n      dispatch({\n        type: \"RESET\",\n        data: {\n          markers: defaultMarkers,\n          selectedCrops: [],\n        },\n      });\n    } else {\n      dispatch({\n        type: \"RESET\",\n        data: {\n          markers: defaultMarkers,\n          selectedCrops: state.selectedCrops,\n        },\n      });\n    }\n\n    setConfirmationOpen(false);\n  };\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const getWeatherData = () => {\n    // TODO: convert month to string, currently returning int\n    // let currentMonth = GetMonthString(month);\n    let currentMonth = moment().format(\"MMM\");\n    // frost free days :-\n    // NOTE: IP has been permanently changed to a URL. check constants\n    if (state.weatherData.length === 0) return \"\";\n    else\n      return (\n        <Button\n          className=\"greenbarBtn\"\n          onClick={handleWeatherBtnClick}\n          style={\n            expansionPanelComponent.component === \"weather\"\n              ? {\n                  background: \"white\",\n                }\n              : {}\n          }\n        >\n          <span\n            style={\n              expansionPanelComponent.component === \"weather\"\n                ? {\n                    color: \"black\",\n                  }\n                : {}\n            }\n          >\n            {<CloudIcon fontSize=\"small\" />}\n            &nbsp;{\" \"}\n            {`Avg First Frost: ${state.weatherData.averageFrost.firstFrostDate.month} ${state.weatherData.averageFrost.firstFrostDate.day} | Avg Rain(${currentMonth}): ${state.weatherData.averagePrecipitation.thisMonth} in`}\n          </span>\n        </Button>\n      );\n  };\n  const [restartPrompt2, setRestartPrompt2] = useState(false);\n  return (\n    <div className=\"greenBarParent\" id=\"greenBarParent\">\n      <div className=\"greenBarWrapper\" style={greenBarWrapperBackground}>\n        <div className=\"addressBar\">\n          {state.progress > 0 &&\n          window.location.pathname === \"/\" + speciesSelectorToolName\n            ? getAddress()\n            : \"\"}\n        </div>\n\n        <div className=\"soilBar\">\n          {state.progress > 1 &&\n          window.location.pathname === \"/\" + speciesSelectorToolName\n            ? getSoil()\n            : \"\"}\n        </div>\n        <div className=\"weatherBar\">\n          {state.progress > 2 &&\n          window.location.pathname === \"/\" + speciesSelectorToolName\n            ? getWeatherData()\n            : \"\"}\n        </div>\n        {state.progress > 0 &&\n        window.location.pathname === \"/\" + speciesSelectorToolName ? (\n          <div className=\"restartBtnWrapper\">\n            <Button\n              className=\"greenbarBtn\"\n              onClick={() => {\n                closeExpansionPanel();\n                setConfirmationOpen(true);\n              }}\n            >\n              <Refresh />\n              &nbsp; Restart\n            </Button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div\n        className=\"greenBarExpansionPanel container-fluid pl-0 pr-0\"\n        id=\"greenBarExpansionPanel\"\n        style={{}}\n      >\n        <div className=\"row justify-content-center align-items-center\">\n          <div\n            className={\n              expansionPanelComponent.component === \"location\"\n                ? `col-md-10`\n                : `col-md-6`\n            }\n          >\n            {expansionPanelComponent.component === \"location\" ? (\n              <LocationComponent caller=\"greenbar\" title={\"Location\"} />\n            ) : expansionPanelComponent.component === \"soil\" ? (\n              <div className=\"container mt-5\" style={expansionPanelBaseStyle}>\n                <div\n                  className=\"row boxContainerRow\"\n                  style={{ minHeight: \"526px\" }}\n                >\n                  <SoilCondition caller=\"greenbar\" />\n                </div>\n              </div>\n            ) : expansionPanelComponent.component === \"weather\" ? (\n              <div className=\"container mt-5\" style={expansionPanelBaseStyle}>\n                <div\n                  className=\"row boxContainerRow\"\n                  style={{ minHeight: \"526px\" }}\n                >\n                  <WeatherConditions caller=\"greenbar\" />\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n        <div\n          className=\"d-flex justify-content-center\"\n          style={\n            expansionPanelComponent.component === \"\"\n              ? { height: \"0px\" }\n              : { height: \"50px\" }\n          }\n        >\n          {expansionPanelComponent.component !== \"\" ? (\n            <div\n              className=\"pt-2 pb-2\"\n              style={{\n                position: \"absolute\",\n                bottom: \"-30px\",\n                textAlign: \"center\",\n                width: \"100%\",\n                background: \"linear-gradient(to top, #506147, #598344)\",\n              }}\n            >\n              <Button variant=\"contained\" onClick={closeExpansionPanel}>\n                Close\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={restartPrompt2}>\n        {/* <DialogTitle>Clear My Cover Crop List?</DialogTitle> */}\n        <DialogContent dividers>\n          <Typography variant=\"body1\">\n            Would you also like to clear 'My Cover Crop List'?\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              setRestartPrompt2(false);\n            }}\n            color=\"secondary\"\n          >\n            No\n          </Button>\n          <Button\n            onClick={() => {\n              handleConfirmationChoice(true);\n              setRestartPrompt2(false);\n            }}\n            color=\"secondary\"\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={confirmationOpen}>\n        <DialogContent dividers>\n          <Typography variant=\"body1\">\n            {state.selectedCrops.length > 0\n              ? `Restarting will remove all cover crops added to your list. Are you\n            sure you want to restart?`\n              : `Are you sure you want to restart?`}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              setConfirmationOpen(false);\n            }}\n            color=\"secondary\"\n          >\n            No\n          </Button>\n          <Button\n            onClick={() => {\n              handleConfirmationChoice(true);\n            }}\n            color=\"secondary\"\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Greenbar;\n","/*\n  This file contains the Header component, helper functions\n  The Header shows the header for all the pages\n  styled using ../../styles/header.scss\n*/\n\nimport { Badge, Button, Typography } from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport {\n  MDBCollapse,\n  MDBContainer,\n  MDBHamburgerToggler,\n  MDBNavbar,\n  MDBNavbarNav,\n  MDBNavItem,\n} from \"mdbreact\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useContext, useEffect } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { abbrRegion, weatherApiURL } from \"../../shared/constants\";\nimport zone4DataDictionary from \"../../shared/json/zone4/data-dictionary.json\";\nimport zone5DataDictionary from \"../../shared/json/zone5/data-dictionary.json\";\nimport zone6DataDictionary from \"../../shared/json/zone6/data-dictionary.json\";\nimport zone7DataDictionary from \"../../shared/json/zone7/data-dictionary.json\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/header.scss\";\nimport DateComponent from \"./DateComponent\";\nimport ForecastComponent from \"./ForecastComponent\";\nimport Greenbar from \"./Greenbar/Greenbar\";\n\nconst Header = () => {\n  let history = useHistory();\n\n  const {state, dispatch} = useContext(Context);\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const sfilters = state[section];\n\n  const [collapse, setCollapse] = React.useState(false);\n  const [isRoot, setIsRoot] = React.useState(false);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  let isActive = {};\n\n  const getUSDAZone = async (zip) => {\n    return await fetch(`//covercrop.tools/zone.php?zip=` + zip);\n  };\n\n  useEffect(() => {\n    if (!state.zipCode) {\n      return;\n    }\n    \n    if (state.zipCode !== state.lastZipCode) {\n      dispatch({\n        type: 'LAST_ZIP_CODE',\n        data: {\n          value: state.zipCode\n        }\n      });\n\n      getUSDAZone(state.zipCode)\n        .then((response) => {\n          if (response.ok) {\n            let data = response.json();\n            data.then((data) => {\n              let zipCode = data.zip;\n              let zone = window.location.search.match(/zone=([^\\^]+)/);  // for automating Information Sheet PDFs\n              \n              zone = zone ? zone[1] : data.zone;\n\n              if (state.zipCode === parseInt(zipCode)) {\n                if (zone <= 7 && zone >= 4) {\n                  dispatch({\n                    type: \"UPDATE_ZONE\",\n                    data: {\n                      zoneText: `Zone ${zone}`,\n                      zone: parseInt(zone),\n                    },\n                  });\n                } else {\n                  enqueueSnackbar(\n                    \"Error: Zones 8-11 do not occur in the Northeast US and so are not supported by this tool. If you wish to explore the data, we suggest loading Zone 7.\",\n                    {\n                      persist: true,\n                      action: (\n                        <Button\n                          style={{ color: \"white\" }}\n                          onClick={() => {\n                            closeSnackbar();\n                          }}\n                        >\n                          Close\n                        </Button>\n                      ),\n                    }\n                  );\n                }\n              } else {\n                enqueueSnackbar(\n                  \"Error: This tool supports the Northeast US only.  If your location is in the Northeast, please submit an issue via the feedback form.\",\n                  {\n                    persist: true,\n                    action: (\n                      <Button\n                        style={{ color: \"white\" }}\n                        onClick={() => {\n                          closeSnackbar();\n                        }}\n                      >\n                        Close\n                      </Button>\n                    ),\n                  }\n                );\n              }\n            });\n          } else {\n            console.error(response);\n          }\n        })\n        .catch((e) => {\n          console.error(e);\n        });\n    }\n  }, [\n    state.zipCode,\n    state.lastZipCode,\n    dispatch,\n    enqueueSnackbar,\n    closeSnackbar,\n  ]);\n\n  useEffect(() => {\n    const getAverageFrostDates = async (url) => {\n      await Axios.get(url).then((resp) => {\n        try {\n          let totalYears = resp.data.length;\n          // get last years value\n          // TODO: Take all years data into account\n          let mostRecentYearData = resp.data[totalYears - 1];\n\n          let maxDate = mostRecentYearData[\"max(date)\"];\n          let minDate = mostRecentYearData[\"min(date)\"];\n\n          let averageFrostObject = {\n            firstFrostDate: {\n              month: moment(minDate).format(\"MMMM\"),\n              day: parseInt(moment(minDate).format(\"D\")),\n            },\n            lastFrostDate: {\n              month: moment(maxDate).format(\"MMMM\"),\n              day: parseInt(moment(maxDate).format(\"D\")),\n            },\n          };\n          dispatch({\n            type: \"UPDATE_AVERAGE_FROST_DATES\",\n            data: {\n              averageFrost: averageFrostObject,\n            },\n          });\n        } catch (e) {\n          console.error(\"Average Frost Dates API::\", e);\n        }\n      });\n    };\n\n    let { markers } = state;\n\n    // update address on marker change\n    // ref forecastComponent\n\n    let lat = markers[0][0];\n    let lon = markers[0][1];\n\n    // since this updates with state; ideally, weather and soil info should be updated here\n\n    // get current lat long and get county, state and city\n\n    if (state.progress >= 2 && state.markers.length > 0) {\n      let revAPIURL = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=en`;\n\n      Axios.get(revAPIURL)\n        .then(async (resp) => {\n          let city = resp.data.locality.toLowerCase();\n          let zip = resp.data.postcode;\n          let state = abbrRegion(\n            resp.data.principalSubdivision,\n            \"abbr\"\n          ).toLowerCase();\n\n          if (resp.data.postcode) {\n            dispatch({\n              type: \"UPDATE_ZIP_CODE\",\n              data: {\n                zipCode: parseInt(zip),\n              },\n            });\n          }\n\n          // call weather API to fetch details\n\n          // Get: Frost Free Days\n          // Dynamic Dates not set!\n          let frostFreeDaysURL = `${weatherApiURL}/hourly?location=${city}%20${state}&start=2015-01-01&end=2019-12-31&stats=count(date)/24/5&where=air_temperature%3e0&output=json`;\n          let frostFreeDatesURL = `${weatherApiURL}/hourly?lat=${lat}&lon=${lon}&start=2014-07-01&end=2019-07-01&stats=min(date),max(date)&where=frost&group=growingyear&options=nomrms&output=json`;\n          let frostFreeDays = 0;\n\n          await Axios.get(frostFreeDaysURL)\n            .then((resp) => {\n              getAverageFrostDates(frostFreeDatesURL);\n              let frostFreeDaysObject = resp.data[0];\n              for (var key in frostFreeDaysObject) {\n                if (frostFreeDaysObject.hasOwnProperty(key)) {\n                  frostFreeDays = frostFreeDaysObject[key];\n                }\n              }\n              return { frostFreeDays: frostFreeDays, city: city, state: state };\n            })\n            .then((obj) => {\n              dispatch({\n                type: \"UPDATE_FROST_FREE_DAYS\",\n                data: { frostFreeDays: obj.frostFreeDays },\n              });\n\n              return obj;\n            })\n            .then(async (obj) => {\n              let currentMonthInt = moment().month() + 1;\n\n              // What was the 5-year average rainfall for city st during the month of currentMonthInt?\n              //  Dynamic dates ?\n              let averageRainForAMonthURL = `${weatherApiURL}/hourly?location=${obj.city}%20${obj.state}&start=2015-01-01&end=2019-12-31&stats=sum(precipitation)/5&where=month=${currentMonthInt}&output=json`;\n              // What was the 5-year average annual rainfall for city st?\n              let fiveYearAvgRainURL = `${weatherApiURL}/hourly?location=${obj.city}%20${obj.state}&start=2015-01-01&end=2019-12-31&stats=sum(precipitation)/5&output=json`;\n              if (!state.ajaxInProgress) {\n                dispatch({\n                  type: \"SET_AJAX_IN_PROGRESS\",\n                  data: true,\n                });\n                await Axios.get(averageRainForAMonthURL)\n                  .then((resp) => {\n                    let averagePrecipitationForCurrentMonth =\n                      resp.data[0][\"sum(precipitation)/5\"];\n                    averagePrecipitationForCurrentMonth = parseFloat(\n                      averagePrecipitationForCurrentMonth\n                    ).toFixed(2);\n                    averagePrecipitationForCurrentMonth = parseFloat(\n                      averagePrecipitationForCurrentMonth * 0.03937\n                    ).toFixed(2);\n                    dispatch({\n                      type: \"UPDATE_AVERAGE_PRECIP_CURRENT_MONTH\",\n                      data: { thisMonth: averagePrecipitationForCurrentMonth },\n                    });\n                  })\n                  .catch((error) => {\n                    dispatch({\n                      type: \"SNACK\",\n                      data: {\n                        snackOpen: true,\n                        snackMessage: `Weather API error code: ${error.response.status} for getting 5 year average rainfall for this month`,\n                      },\n                    });\n                  });\n\n                if (!state.ajaxInProgress) {\n                  dispatch({\n                    type: \"SET_AJAX_IN_PROGRESS\",\n                    data: true,\n                  });\n                  await Axios.get(fiveYearAvgRainURL)\n                    .then((resp) => {\n                      let fiveYearAvgRainAnnual =\n                        resp.data[0][\"sum(precipitation)/5\"];\n                      fiveYearAvgRainAnnual = parseFloat(\n                        fiveYearAvgRainAnnual\n                      ).toFixed(2);\n                      fiveYearAvgRainAnnual = parseFloat(\n                        fiveYearAvgRainAnnual * 0.03937\n                      ).toFixed(2);\n                      dispatch({\n                        type: \"UPDATE_AVERAGE_PRECIP_ANNUAL\",\n                        data: { annual: fiveYearAvgRainAnnual },\n                      });\n                      dispatch({\n                        type: \"SET_AJAX_IN_PROGRESS\",\n                        data: false,\n                      });\n                    })\n                    .then(() => {})\n                    .catch((error) => {\n                      dispatch({\n                        type: \"SNACK\",\n                        data: {\n                          snackOpen: true,\n                          snackMessage: `Weather API error code: ${\n                            error.response.status\n                          } for getting 5 year average rainfall for ${obj.city.toUpperCase()}, ${obj.state.toUpperCase()}`,\n                        },\n                      });\n                      dispatch({\n                        type: \"SET_AJAX_IN_PROGRESS\",\n                        data: false,\n                      });\n                    });\n                }\n              }\n            });\n        })\n        .then(() => {\n          dispatch({\n            type: \"SET_AJAX_IN_PROGRESS\",\n            data: false,\n          });\n        });\n    }\n    // check if isRoot\n\n    if (window.location.pathname === \"/species-selector\") {\n      setIsRoot(true);\n    } else {\n      setIsRoot(false);\n    }\n    // check value of progress state\n\n    switch (state.progress) {\n      case 0:\n        isActive[\"val\"] = 0;\n        break;\n      default:\n        break;\n    }\n  }, [state.markers, sfilters.zone, state.weatherDataReset]);\n\n  useEffect(() => {\n    if (sfilters.zone === state.lastZone) {\n      return;\n    }\n\n    state.lastZone = sfilters.zone;  // TODO\n    // dispatch({\n    //   type: 'UPDATE_LAST_ZONE',\n    //   value: sfilters.zone,\n    // });\n\n    let z7Formattedgoal = zone7DataDictionary.filter(\n      (data) => data.Category === \"Goals\" && data.Variable !== \"Notes: Goals\"\n    );\n    let z6Formattedgoal = zone6DataDictionary.filter(\n      (data) => data.Category === \"Goals\" && data.Variable !== \"Notes: Goals\"\n    );\n    let z5Formattedgoal = zone5DataDictionary.filter(\n      (data) => data.Category === \"Goals\" && data.Variable !== \"Notes: Goals\"\n    );\n    let z4Formattedgoal = zone4DataDictionary.filter(\n      (data) => data.Category === \"Goals\" && data.Variable !== \"Notes: Goals\"\n    );\n\n    z7Formattedgoal = z7Formattedgoal.map((goal) => {\n      return { fields: goal };\n    });\n    z6Formattedgoal = z6Formattedgoal.map((goal) => {\n      return { fields: goal };\n    });\n    z5Formattedgoal = z5Formattedgoal.map((goal) => {\n      return { fields: goal };\n    });\n    z4Formattedgoal = z4Formattedgoal.map((goal) => {\n      return { fields: goal };\n    });\n\n    switch (parseInt(sfilters.zone)) {\n      case 7: {\n        dispatch({\n          type: \"PULL_CROP_DATA\",\n          data: state.zone7CropData,\n        });\n        dispatch({\n          type: \"ADD_GOALS\",\n          data: z7Formattedgoal,\n        });\n        console.log(\"z7 data dispatched\");\n        break;\n      }\n      case 6: {\n        dispatch({\n          type: \"PULL_CROP_DATA\",\n          data: state.zone6CropData,\n        });\n        console.log(state.zone6CropData.length);\n        dispatch({\n          type: \"ADD_GOALS\",\n          data: z6Formattedgoal,\n        });\n        console.log(\"z6 data dispatched\");\n        break;\n      }\n      case 5: {\n        dispatch({\n          type: \"PULL_CROP_DATA\",\n          data: state.zone5CropData,\n        });\n        dispatch({\n          type: \"ADD_GOALS\",\n          data: z5Formattedgoal,\n        });\n        console.log(\"z5 data dispatched\");\n        break;\n      }\n      case 4: {\n        console.log(z4Formattedgoal);\n        dispatch({\n          type: \"PULL_CROP_DATA\",\n          data: state.zone4CropData,\n        });\n        dispatch({\n          type: \"ADD_GOALS\",\n          data: z4Formattedgoal,\n        });\n        console.log(\"z4 data dispatched\");\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }, [\n    sfilters.zone,\n    state.zone4CropData,\n    state.zone5CropData,\n    state.zone6CropData,\n    state.zone7CropData,\n    dispatch,\n  ]);\n\n  const toggleSingleCollapse = () => {\n    setCollapse(!collapse);\n  };\n  const setmyCoverCropActivationFlag = () => {\n    if (window.location.pathname === \"/species-selector\") {\n      if (state.progress > 4) {\n        dispatch({\n          type: \"ACTIVATE_MY_COVER_CROP_LIST_TILE\",\n          data: {\n            myCoverCropActivationFlag: true,\n            speciesSelectorActivationFlag: false,\n          },\n        });\n      }\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const setSpeciesSelectorActivationFlag = () => {\n    dispatch({\n      type: \"ACTIVATE_SPECIES_SELECTOR_TILE\",\n      data: {\n        speciesSelectorActivationFlag: true,\n        myCoverCropActivationFlag: false,\n      },\n    });\n    if (window.location.pathname !== \"/species-selector\") {\n      history.push(\"/species-selector\");\n    }\n  };\n  const RenderMyCoverCropListButtons = () => {\n    return (\n      <Badge\n        badgeContent={\n          state.selectedCrops.length > 0 ? state.selectedCrops.length : 0\n        }\n        color={\"error\"}\n      >\n        <Button\n          className={\n            window.location.pathname === \"/my-cover-crop-list\" ? \"active\" : \"\"\n          }\n          onClick={() => history.push(\"/my-cover-crop-list\")}\n        >\n          My Cover Crop List\n        </Button>\n      </Badge>\n    );\n  };\n  return (\n    <header className=\"d-print-none\">\n      <div className=\"topHeader\">\n        <NavLink to=\"/about\" activeClassName={`active`}>\n          ABOUT\n        </NavLink>\n        <span className=\"line\"></span>\n        <NavLink to=\"/help\" activeClassName={`active`}>\n          HELP\n        </NavLink>\n        <span className=\"line\"></span>\n        <NavLink to=\"/feedback\" activeClassName={`active`}>\n          FEEDBACK\n        </NavLink>\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-lg-2 col-12\">\n            <img\n              className=\"img-fluid\"\n              src=\"/images/neccc_wide_logo_color_web.jpg\"\n              alt=\"NECCC Logo\"\n              width=\"100%\"\n              onContextMenu={() => {\n                return false;\n              }}\n              onClick={() => {\n                dispatch({\n                  type: \"UPDATE_PROGRESS\",\n                  data: {\n                    type: \"HOME\",\n                  },\n                });\n              }}\n              style={{ cursor: \"pointer\" }}\n            />\n          </div>\n          <div className=\"col-12 col-lg-10 col-sm-12 row\">\n            <div className=\"col-lg-4 col-12 d-flex align-items-center text-left\">\n              <div>\n                <Typography variant=\"body1\" className=\"font-weight-bold\">\n                  Cover Crop Decision Support Tools\n                </Typography>\n\n                <Typography variant=\"body1\">\n                  <DateComponent />\n                </Typography>\n              </div>\n            </div>\n            <div className=\"col-lg-8 col-12 d-flex align-items-center\">\n              <div>\n                <ForecastComponent />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"bottomHeader\">\n        <Button\n          size=\"large\"\n          component={NavLink}\n          exact\n          to={\"/\"}\n          activeClassName=\"active\"\n        >\n          COVER CROP EXPLORER\n        </Button>\n        <Button\n          className={\n            isRoot ? (state.speciesSelectorActivationFlag ? \"active\" : \"\") : \"\"\n          }\n          onClick={setSpeciesSelectorActivationFlag}\n          size=\"large\"\n        >\n          SPECIES SELECTOR TOOL\n        </Button>\n\n        {window.location.pathname === \"/species-selector\" &&\n        state.selectedCrops.length > 0 &&\n        state.progress >= 5 ? (\n          <Badge\n            badgeContent={\n              state.selectedCrops.length > 0 ? state.selectedCrops.length : 0\n            }\n            color={\"error\"}\n          >\n            <Button\n              size=\"large\"\n              className={\n                state.myCoverCropActivationFlag &&\n                window.location.pathname === \"/species-selector\"\n                  ? \"active\"\n                  : \"\"\n              }\n              onClick={setmyCoverCropActivationFlag}\n            >\n              MY COVER CROP LIST\n            </Button>\n          </Badge>\n        ) : (\n          \"\"\n        )}\n        {/* My Cover Crop List As A Separate Component/Route  */}\n        {window.location.pathname !== \"/species-selector\" ? (\n          state.progress.length < 5 ? (\n            state.selectedCrops.length > 0 ? (\n              <RenderMyCoverCropListButtons />\n            ) : (\n              \"\"\n            )\n          ) : state.selectedCrops.length > 0 ? (\n            <RenderMyCoverCropListButtons />\n          ) : (\n            \"\"\n          )\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      <MDBNavbar light className=\"ham-navWrapper\">\n        <MDBContainer fluid>\n          <MDBHamburgerToggler\n            color=\"#598443\"\n            id=\"hamburger1\"\n            onClick={() => toggleSingleCollapse()}\n          />\n          <MDBCollapse isOpen={collapse} navbar>\n            <MDBNavbarNav className=\"ham-nav\">\n              <MDBNavItem>COVER CROP EXPLORER</MDBNavItem>\n              <MDBNavItem\n                onClick={setSpeciesSelectorActivationFlag}\n                active={\n                  isRoot\n                    ? state.speciesSelectorActivationFlag\n                      ? true\n                      : false\n                    : false\n                }\n              >\n                SPECIES SELECTOR TOOL\n              </MDBNavItem>\n              {state.progress >= 5 ? (\n                <MDBNavItem\n                  onClick={setmyCoverCropActivationFlag}\n                  active={\n                    state.myCoverCropActivationFlag &&\n                    window.location.pathname === \"/\"\n                      ? true\n                      : false\n                  }\n                >\n                  MY COVER CROP LIST\n                </MDBNavItem>\n              ) : (\n                \"\"\n              )}\n            </MDBNavbarNav>\n          </MDBCollapse>\n        </MDBContainer>\n      </MDBNavbar>\n\n      <Greenbar />\n\n      {window.location.pathname === \"/about\" ||\n      window.location.pathname === \"/help\" ||\n      (window.location.pathname === \"/feedback\" &&\n        window.location.pathname !== \"/cover-crop-explorer\") ||\n      state.progress < 0 ? (\n        <div className=\"topBar\"></div>\n      ) : (\n        \"\"\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","/*\n  This file contains the ExplorerCardView component, and styles\n  The ExplorerCardView component is the card that contains a single crop in the crop explorer\n  Styles are created using makeStyles\n*/\n\nimport { Modal, Box, Typography, Button, Grid, Link } from \"@material-ui/core\";\nimport React, { Fragment, useContext, useState } from \"react\";\nimport { Context } from \"../../store/Store\";\n\nconst ExplorerCardView = (props) => {\n  const { consent } = props;\n  const {dispatch} = useContext(Context);\n  const [modalOpen, setModalOpen] = useState(true);\n\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    bgcolor: \"background.paper\",\n    border: \"2px solid #000\",\n    boxShadow: 24,\n    p: 4,\n  };\n\n  const handleModalAccept = () => {\n    //toggle modal open\n    setModalOpen((o) => !o);\n    dispatch({\n      type: \"UPDATE_CONSENT\",\n      data: {\n        consent: true,\n      },\n    });\n  };\n\n  const handleModalDecline = () => {\n    //toggle modal open\n    setModalOpen((o) => !o);\n    dispatch({\n      type: \"UPDATE_CONSENT\",\n      data: {\n        consent: false,\n      },\n    });\n  };\n\n  return !consent && !/crop=/.test(window.location.search) ? (\n    <Modal\n      open={modalOpen}\n      //   onClose={toggleModalOpen}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n          Your Privacy\n        </Typography>\n        <Typography variant=\"body\">\n          <p>\n            This site uses cookies for Google Analytics to improve user experience and analyze website traffic.\n            No personally identifiable data is collected.\n          </p>\n          <p>\n            By clicking \"Accept\", you agree to our website's cookie use as described in our\n            {' '}\n            <a\n              href=\"https://northeastcovercrops.com/privacy-policy/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Privacy Policy\n            </a>\n            .\n          </p>\n        </Typography>\n        <Grid container spacing={1}>\n          <Grid item>\n            <Button variant=\"outlined\" onClick={handleModalAccept}>\n              Accept\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button variant=\"outlined\" onClick={handleModalDecline}>\n              Decline\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Modal>\n  ) : (\n    <Fragment></Fragment>\n  );\n};\n\nexport default ExplorerCardView;\n","/*\n  This file contains the Landing component, helper functions, and styles\n  The Landing page is a static pages that has information about the project and prompts the user to select their location and goals\n  styled using ../../styles/landing.scss\n*/\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LightButton } from \"../../shared/constants\";\nimport { Context } from \"../../store/Store\";\nimport ReactGA from \"react-ga\";\nimport \"../../styles/landing.scss\";\nimport ConsentModal from \"../CoverCropExplorer/ConsentModal\";\n\nconst Landing = (props) => {\n  const {state, dispatch} = useContext(Context);\n  const [containerHeight, setContainerHeight] = useState(props.height);\n\n  useEffect(() => {\n    if (state.consent === true) {\n      console.log(\"viewing landing\");\n      ReactGA.initialize(\"UA-181903489-1\");\n\n      ReactGA.pageview(\"cover crop selector\");\n    }\n  }, [state.consent]);\n\n  const incrementProgress = (incVal) => {\n    incVal = parseInt(incVal);\n    if (incVal === 1) {\n      if (state.progress === 0) {\n        dispatch({\n          type: \"UPDATE_PROGRESS\",\n          data: {\n            type: \"INCREMENT\",\n          },\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.title = props.title;\n    function updateSize() {\n      let documentHeight = document\n        .getElementsByTagName(\"html\")[0]\n        .getBoundingClientRect().height;\n\n      let headerHeight = document\n        .getElementsByTagName(\"header\")[0]\n        .getBoundingClientRect().height;\n\n      let footerHeight = document\n        .getElementsByClassName(\"primaryFooter\")[0]\n        .getBoundingClientRect().height;\n\n      let containerHeight = documentHeight - (headerHeight + footerHeight) + 7;\n      document.getElementById(\"landingWrapper\").style.minHeight =\n        containerHeight + \"px\";\n      setContainerHeight(containerHeight);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, [props.title]);\n\n  return (\n    <div\n      id=\"landingWrapper\"\n      className=\"d-flex flex-column justify-content-center align-items-center\"\n      style={{\n        minHeight: containerHeight,\n        background: `url(${props.bg})`,\n        backgroundSize: \"cover\",\n      }}\n    >\n      <ConsentModal consent={state.consent} />\n      <Grid\n        className=\"p-2\"\n        spacing={2}\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{\n          width: \"90%\",\n          backgroundColor: \"rgba(240,247,235,.8)\",\n          borderRadius: \"10px\",\n          border: \"1px solid #598445\",\n        }}\n      >\n        <Grid item>\n          <Typography variant=\"h4\" gutterBottom align=\"center\">\n            Welcome to the Northeast Cover Crop Species Selector Tool\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body1\" gutterBottom align=\"left\">\n            You are currently interacting with the Northeast Cover Crop Species\n            Selector Tool. We seek feedback about the usability and usefulness\n            of this tool. Our goal is to encourage and support the use of cover\n            crops in the Northeast US. You can learn more about the cover crop\n            data and design of this tool <Link to={\"/about\"}> here</Link>. If\n            you need assistance, consult the <Link to={\"/help\"}>help page</Link>\n            .\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography\n            align=\"left\"\n            variant=\"body1\"\n            gutterBottom\n            style={{ paddingBottom: \"1em\" }}\n          >\n            In the future, this platform will host a variety of tools including\n            a cover crop mixture and seeding rate calculator and an economics\n            calculator. Our ultimate goal is to provide a suite of\n            interconnected tools that function together seamlessly.\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            style={{ fontWeight: \"bold\", paddingBottom: \"1em\" }}\n            align=\"left\"\n            gutterBottom\n          >\n            Thank you for your time and consideration. You may provide input by\n            visiting our <Link to=\"/feedback\">Feedback</Link> page. We look\n            forward to your hearing about your experience.\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            gutterBottom\n            align=\"left\"\n            className=\"font-weight-bold\"\n          >\n            Click Next to enter the Species Selector.\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className=\"pt-4\"\n      >\n        <Grid item>\n          <LightButton onClick={() => incrementProgress(1)}>NEXT</LightButton>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Landing;\n","/*\n  Shows the location selected, which zone the user is in, and shows a disclaimer\n  styled using CustomStyles from ../../shared/constants\n*/\n\nimport { Typography } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { CustomStyles } from \"../../shared/constants\";\nimport { Context } from \"../../store/Store\";\nimport MapContext from \"./MapContext\";\nimport SoilCondition from \"./SoilCondition\";\nimport WeatherConditions from \"./WeatherConditions\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst LocationConfirmation = () => {\n  const {state} = useContext(Context);\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const sfilters = state[section];\n\n  return (\n    <div\n      className=\"container-fluid mt-5\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div\n        className=\"row boxContainerRow\"\n        style={{ textAlign: \"left\", minHeight: \"520px\" }}\n      >\n        <div className=\"col-xl-6 col-lg-12\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <MapContext\n                  width=\"100%\"\n                  height=\"200px\"\n                  minzoom={4}\n                  maxzoom={20}\n                  from=\"confirmation\"\n                />\n              </div>\n              <div className=\"col-lg-6\">\n                <div className=\"col-12\">\n                  <Typography variant=\"h4\">Location Details</Typography>\n                </div>\n                <div className=\"col-12 pt-2\">\n                  <Typography variant=\"body1\">\n                    Your cover crop recommendations will come from the Plant\n                    Hardiness Zone {sfilters.zone} NECCC dataset.\n                  </Typography>\n                </div>\n                <div className=\"col-12\">\n                  <Typography\n                    variant=\"body1\"\n                    className=\"pt-2 font-weight-bold\"\n                    style={{\n                      color: CustomStyles().lighterGreen,\n                    }}\n                  >\n                    {state.address.length > 0\n                      ? `${state.address.toString().substring(0, 35)}...`\n                      : \"Loading...\"}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mt-3\">\n              <div className=\"col-lg-12\"></div>\n            </div>\n            <div className=\"row mt-3\">\n              <div className=\"col-lg-12\">\n                <Typography variant=\"body1\">\n                  Disclaimer: Cover crop recommendations are based on expert\n                  opinions. Your cover crop performance and seeding rates will\n                  vary based on location, management, cultivars, and many other\n                  variables. Consult your local{\" \"}\n                  <a\n                    href=\"https://www.nrcs.usda.gov/wps/portal/nrcs/detailfull/national/programs/financial/csp/?&cid=nrcsdev11_000242\"\n                    title=\"click to consult your local nrcs service center\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    NRCS Service Center\n                  </a>\n                  ,{\" \"}\n                  <a\n                    href=\"https://nifa.usda.gov/land-grant-colleges-and-universities-partner-website-directory\"\n                    title=\"Link to Cooperative Extension Service office\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Cooperative Extension Service office\n                  </a>\n                  , or{\" \"}\n                  <a\n                    href=\"https://www.nacdnet.org/general-resources/conservation-district-directory/\"\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                  >\n                    Conservation District\n                  </a>{\" \"}\n                  for detailed guidance. Cover crop incentive programs may\n                  dictate seeding rate ranges and methods, and planting and\n                  termination dates. Consult your program contact to ensure your\n                  plans comply.\n                </Typography>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-5 offset-xl-1 col-lg-12\">\n          <div className=\"container-fluid\">\n            {state.progress === 2 ? <SoilCondition /> : \"\"}\n            {state.progress === 3 ? <WeatherConditions /> : \"\"}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LocationConfirmation;\n","/*\n  This file contains the ProgressBar component\n  The ProgressBar shows the user what step they are on in the goal selection process\n*/\n\nimport { Typography } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { Context } from \"../store/Store\";\nimport \"../styles/progressIndicator.scss\";\n\nconst checkProgressStatus = (actualProgress, expectedProgress) => {\n  if (actualProgress === expectedProgress) {\n    // exact progress\n    return \"progress-step active\";\n  } else if (actualProgress > expectedProgress) {\n    return \"progress-step active\";\n  } else {\n    return \"progress-step\";\n  }\n};\n\nconst ProgressBar = () => {\n  const {state} = useContext(Context);\n  return (\n    <div className=\"gprogress\">\n      <Typography variant=\"body1\" className=\"progress-track\" component=\"div\">\n        Question {state.progress} of 4\n      </Typography>\n      <div className=\"progress-diagram\">\n        <div\n          id=\"step1\"\n          className={checkProgressStatus(state.progress, 1)}\n        ></div>\n\n        <div\n          id=\"step2\"\n          className={checkProgressStatus(state.progress, 2)}\n        ></div>\n\n        <div\n          id=\"step3\"\n          className={checkProgressStatus(state.progress, 3)}\n        ></div>\n\n        <div\n          id=\"step4\"\n          className={checkProgressStatus(state.progress, 4)}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","/*\n  This file contains the ProgressButtonsInner component\n  The ProgressButtonsInner allow the user to navigate steps\n*/\n\nimport React, { Fragment, useContext } from \"react\";\nimport { Context } from \"../store/Store\";\nimport { LightButton } from \"./constants\";\n\nconst ProgressButtonsInner = (props) => {\n  let isDisabled = props.disabled;\n\n  const {dispatch} = useContext(Context);\n\n  const changeProgress = (type) => {\n    if (type === \"increment\") {\n      dispatch({\n        type: \"UPDATE_PROGRESS\",\n        data: {\n          type: \"INCREMENT\",\n        },\n      });\n    }\n\n    if (type === \"decrement\") {\n      dispatch({\n        type: \"UPDATE_PROGRESS\",\n        data: {\n          type: \"DECREMENT\",\n        },\n      });\n    }\n  };\n\n  return (\n    <Fragment>\n      <LightButton onClick={() => changeProgress(\"decrement\")}>\n        {\" \"}\n        back\n      </LightButton>\n      <LightButton\n        onClick={() => changeProgress(\"increment\")}\n        disabled={isDisabled}\n        className=\"ml-3\"\n      >\n        next\n      </LightButton>\n    </Fragment>\n  );\n};\n\nexport default ProgressButtonsInner;\n","/*\n  This file contains the ProgressButtons component\n  The ProgressButtons allow the user to navigate steps\n*/\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../store/Store\";\nimport ProgressButtonsInner from \"./ProgressButtonsInner\";\n\nconst ProgressButtons = () => {\n  const {state} = useContext(Context);\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const sfilters = state[section];\n\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  useEffect(() => {\n    const disableLogic = (progress, goalsLength) => {\n      switch (parseInt(progress)) {\n        case 1: {\n          // location selection state\n          if (sfilters.zone === 0 || state.address === \"\") {\n            setIsDisabled(true);\n          } else {\n            setIsDisabled(false);\n          }\n          break;\n        }\n        case 4: {\n          // goals selection state\n          if (goalsLength > 3 || goalsLength < 1) {\n            setIsDisabled(true);\n          } else {\n            setIsDisabled(false);\n          }\n          break;\n        }\n        default: {\n          setIsDisabled(false);\n          break;\n        }\n      }\n    };\n\n    disableLogic(state.progress, state.selectedGoals.length);\n  }, [state]);\n\n  return renderProgressButtons(state.progress, isDisabled);\n};\n\nconst renderProgressButtons = (progress, isDisabled) => {\n  if (progress < 0) return \"\";\n  else {\n    return (\n      <div>\n        <ProgressButtonsInner disabled={isDisabled} />\n      </div>\n    );\n  }\n};\n\nexport default ProgressButtons;\n","/*\n  App is the species selector tool\n  styled using ./styles/App.scss\n*/\n\nimport { Snackbar } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CropSelector from \"./components/CropSelector/CropSelector\";\nimport GoalsSelector from \"./components/GoalsSelector/GoalsSelector\";\nimport Header from \"./components/Header/Header\";\nimport Landing from \"./components/Landing/Landing\";\nimport LocationComponent from \"./components/Location/Location\";\nimport LocationConfirmation from \"./components/Location/LocationConfirmation\";\nimport ProgressBar from \"./shared/ProgressBar\";\nimport ProgressButtons from \"./shared/ProgressButtons\";\nimport { Context } from \"./store/Store\";\nimport \"./styles/App.scss\";\n\nconst LoadRelevantRoute = ({ progress, calcHeight }) => {\n  switch (progress) {\n    case 1:\n      return (\n        <LocationComponent\n          height={calcHeight}\n          title=\"Species Selector Tool | Decision Support Tool\"\n        />\n      );\n    case 2:\n      return (\n        <LocationConfirmation\n          height={calcHeight}\n          title=\"Species Selector Tool | Decision Support Tool\"\n        />\n      );\n    case 3:\n      return (\n        <LocationConfirmation\n          height={calcHeight}\n          title=\"Species Selector Tool | Decision Support Tool\"\n        />\n      );\n    case 4:\n      return (\n        <GoalsSelector\n          height={calcHeight}\n          title=\"Species Selector Tool | Decision Support Tool\"\n        />\n      );\n    case 5:\n      return (\n        <CropSelector\n          height={calcHeight}\n          title=\"Species Selector Tool | Decision Support Tool\"\n        />\n      );\n\n    default:\n      return <RouteNotFound height={calcHeight} />;\n  }\n};\n\nconst App = () => {\n  const {state, dispatch} = useContext(Context);\n  const [calcHeight, setCalcHeight] = useState(0);\n  const handleSnackClose = () => {\n    dispatch({\n      type: \"SNACK\",\n      data: {\n        snackOpen: false,\n        snackMessage: \"\",\n      },\n    });\n  };\n\n  useEffect(() => {\n    let parentDocHeight = document\n      .getElementById(\"mainContentWrapper\")\n      .getBoundingClientRect().height;\n    let headerHeight = document\n      .querySelector(\"header\")\n      .getBoundingClientRect().height;\n\n    let calculatedHeight = parentDocHeight - headerHeight;\n\n    setCalcHeight(calculatedHeight);\n  }, []);\n\n  return (\n    <div className=\"contentWrapper\" id=\"mainContentWrapper\">\n      <Header logo=\"neccc_wide_logo_color_web.jpg\" />\n\n      <div className=\"container-fluid pl-0 pr-0\">\n        <div className=\"contentContainer\">\n          {state.progress === 0 ? (\n            <Landing\n              title=\"Decision Support Tool\"\n              height={calcHeight}\n              bg=\"/images/cover-crop-field.png\"\n            />\n          ) : (\n            <div\n              className=\"col-12\"\n              style={{\n                paddingLeft: \"0px\",\n                paddingRight: \"0px\",\n              }}\n            >\n              <LoadRelevantRoute\n                progress={state.progress}\n                calcHeight={calcHeight}\n              />\n              {state.progress > 0 && state.progress < 5 ? (\n                <div className=\"container-fluid mt-5 mb-5\">\n                  <div\n                    className=\"row\"\n                    style={{ width: \"95%\", margin: \"0 auto\" }}\n                  >\n                    <div className=\"col-lg-5 col-12 col-md-5\"></div>\n                    <div className=\"col-lg-5 col-12 col-md-5\">\n                      <ProgressButtons />\n                    </div>\n                    <div className=\"col-lg-2 pr-0 col-12 col-md-2\">\n                      <ProgressBar />\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: state.snackVertical,\n            horizontal: state.snackHorizontal,\n          }}\n          key={{\n            vertical: state.snackVertical,\n            horizontal: state.snackHorizontal,\n          }}\n          autoHideDuration={3000}\n          open={state.snackOpen}\n          onClose={handleSnackClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\",\n          }}\n          message={state.snackMessage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\nconst RouteNotFound = () => {\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"row\">\n        <div className=\"col-4 offset-4\">\n          <h3>Unknown Route</h3>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst crop = window.location.search.match(/crop=([^\\^]+)/);\n\nif (crop) {\n  setTimeout(() => {\n    [...document.querySelectorAll('.MuiCardContent-root')].forEach(o => {\n      if (o.textContent.includes(decodeURI(crop[1]))) {\n        o.querySelector('a').click();\n      }\n    });\n  }, 1000);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/*\r\n  Index.js is the top level component\r\n  styled using ./styles/parent.scss, ./styles/progressBar.css, CustomStyles from ./shared/constants\r\n*/\r\n\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Store from \"./store/Store\";\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\r\nimport \"./styles/parent.scss\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./styles/progressBar.css\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport About from \"./components/About/About\";\r\nimport SeedingRateCalculator from \"./components/SeedingRateCalculator/SeedingRateCalculator\";\r\nimport MixMaker from \"./components/MixMaker/MixMaker\";\r\nimport CoverCropExplorer from \"./components/CoverCropExplorer/CoverCropExplorer\";\r\nimport InformationSheet from \"./components/InformationSheet/InformationSheet\";\r\nimport HelpComponent from \"./components/Help/Help\";\r\nimport FeedbackComponent from \"./components/Feedback/Feedback\";\r\nimport { MuiThemeProvider, responsiveFontSizes } from \"@material-ui/core\";\r\nimport { CustomStyles } from \"./shared/constants\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport InformationSheetDictionary from \"./components/InformationSheet/InformationSheetDictionary\";\r\nimport MyCoverCropListWrapper from \"./components/MyCoverCropList/MyCoverCropListWrapper\";\r\nimport License from \"./components/License/License\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\n\r\nconst withFooter = (WrappedComponent) => () =>\r\n  [<WrappedComponent key=\"1\" />, <Footer key=\"2\" />];\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: CustomStyles().lightGreen,\r\n    },\r\n    secondary: {\r\n      main: CustomStyles().lighterGreen,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontWeight: \"normal\",\r\n        fontSize: CustomStyles().defaultFontSize,\r\n        backgroundColor: CustomStyles().secondaryProgressBtnColor,\r\n        color: \"black\",\r\n        borderRadius: CustomStyles().mildlyRoundedRadius,\r\n      },\r\n      arrow: {},\r\n    },\r\n    MuiChip: {\r\n      root: {\r\n        \"&&:hover\": {\r\n          boxShadow: \"0 0 3px 0 black\",\r\n        },\r\n        border: \"1px solid #777\",\r\n      },\r\n      colorSecondary: {\r\n        \"&, &&:hover, &&:focus\": {\r\n          backgroundColor: CustomStyles().greenishWhite,\r\n          color: \"rgba(0,0,0,0.9)\",\r\n          fontWeight: \"normal\",\r\n        },\r\n      },\r\n      colorPrimary: {\r\n        \"&, &&:hover, &&:focus\": {\r\n          backgroundColor: CustomStyles().darkGreen,\r\n          color: \"white\",\r\n          fontWeight: \"normal\",\r\n        },\r\n      },\r\n      sizeSmall: {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      root: {\r\n        zIndex: 1000003,\r\n      },\r\n    },\r\n  },\r\n});\r\nconst RouteNotFound = () => {\r\n  return (\r\n    <section className=\"page_404\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <div className=\"col-sm-12 text-center\">\r\n              <div className=\"four_zero_four_bg\">\r\n                <h1 className=\"text-center \">404</h1>\r\n              </div>\r\n\r\n              <div className=\"contant_box_404\">\r\n                <h3 className=\"h2\">Look like you're lost</h3>\r\n\r\n                <p>The page you are looking for is not available!</p>\r\n\r\n                <a href=\"/\" className=\"link_404\">\r\n                  Go Home\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst csTheme = responsiveFontSizes(theme, {\r\n  breakpoints: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"],\r\n});\r\n\r\nconst Wrapper = () => (\r\n  <MuiThemeProvider theme={csTheme}>\r\n    <SnackbarProvider\r\n      maxSnack={5}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n      autoHideDuration={15000}\r\n    >\r\n      <Store>\r\n        <BrowserRouter>\r\n          <Suspense fallback={<div>Loading..</div>}>\r\n            <Switch>\r\n              <Route path={`/species-selector`} component={App} exact />\r\n              <Route path={\"/\"} component={CoverCropExplorer} exact />\r\n              <Route path={\"/about\"} component={About} exact />\r\n              <Route path={\"/help\"} component={HelpComponent} exact />\r\n              <Route path={\"/feedback\"} component={FeedbackComponent} exact />\r\n              <Route\r\n                path={\"/my-cover-crop-list\"}\r\n                component={MyCoverCropListWrapper}\r\n                exact\r\n              />\r\n              <Route\r\n                path={\"/information-sheet/:cropName\"}\r\n                component={InformationSheet}\r\n                exact\r\n              />\r\n              <Route\r\n                path={\"/seeding-rate-calculator\"}\r\n                component={SeedingRateCalculator}\r\n                exact\r\n              />\r\n              <Route\r\n                path={\"/data-dictionary\"}\r\n                component={InformationSheetDictionary}\r\n                exact\r\n              />\r\n              <Route\r\n                path={\"/license\"}\r\n                component={() => <License licenseType=\"MIT\" />}\r\n                exact\r\n              />\r\n              <Route\r\n                path={\"/ag-informatics-license\"}\r\n                component={() => <License licenseType=\"AgInformatics\" />}\r\n                exact\r\n              />\r\n              <Route path={\"/mix-maker\"} component={MixMaker} exact />\r\n\r\n              <Route component={RouteNotFound} />\r\n            </Switch>\r\n          </Suspense>\r\n\r\n          {/* <App /> */}\r\n        </BrowserRouter>\r\n      </Store>\r\n    </SnackbarProvider>\r\n  </MuiThemeProvider>\r\n);\r\n\r\nconst WrapperWithFooter = withFooter(Wrapper);\r\n\r\nReactDOM.render(<WrapperWithFooter />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","/*\n  This file contains the Footer component\n  The Footer page contains the disclaimer, links to external resources, and the last updated widget\n  styles are made in ../../styles/footer.scss\n*/\n\nimport { Typography } from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { accessToken, owner, repo } from \"../../shared/keys\";\nimport \"../../styles/footer.scss\";\n\nconst Footer = () => {\n  const [monthYear, setMonthYear] = useState(\"\");\n\n  const fetchDate = async () => {\n    return await Axios({\n      url: `https://api.github.com/repos/${owner}/${repo}/commits?path=build&page=1&per_page=1`,\n      method: \"GET\",\n      auth: {\n        password: accessToken,\n      },\n    });\n  };\n  useEffect(() => {\n    fetchDate().then((resp) => {\n      let lastCommitDate = resp.data[0].commit.committer.date;\n      let lastCommitDateFormatted = new Date(lastCommitDate);\n      setMonthYear(\n        `${(\"0\" + (lastCommitDateFormatted.getMonth() + 1)).slice(\n          -2\n        )}/${lastCommitDateFormatted.getFullYear()}`\n      );\n    });\n  }, []);\n  return (\n    <footer className=\"primaryFooter\">\n      <div className=\"leftSideText\">\n        <Typography variant=\"body2\" style={{ color: \"black\" }}>\n          Disclaimer: Consult your local{\" \"}\n          <a\n            className=\"footerLink\"\n            href=\"https://www.nrcs.usda.gov/wps/portal/nrcs/detailfull/national/programs/financial/csp/?&cid=nrcsdev11_000242\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            NRCS Service Center\n          </a>\n          ,{\" \"}\n          <a\n            href=\"https://nifa.usda.gov/land-grant-colleges-and-universities-partner-website-directory\"\n            className=\"footerLink\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Cooperative Extension Service office\n          </a>\n          , or{\" \"}\n          <a\n            href=\"https://www.nacdnet.org/general-resources/conservation-district-directory/\"\n            className=\"footerLink\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Conservation District\n          </a>{\" \"}\n          for detailed guidance.\n        </Typography>\n      </div>\n      <div className=\"rightSideText\">\n        <Typography variant=\"body2\" style={{ color: \"black\" }}>\n          Last Updated {monthYear}\n        </Typography>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/*\n  This file contains the MITLicenseText component, helper functions, and styles\n  The MITLicenseText page contains the MIT license text\n*/\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MITLicenseText = ({ styles = true, aboutPage = false }) => {\n  const currentYear = new Date().getFullYear();\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"body1\" gutterBottom>\n          Copyright © {currentYear} Northeast Cover Crop Council,&nbsp;\n          <a\n            href=\"http://northeastcovercrops.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            northeastcovercrops.com\n          </a>\n        </Typography>\n      </Grid>\n      {aboutPage ? (\n        <Grid item xs={12}>\n          <Typography variant=\"body1\">\n            The cover crop data is part of NECCC Cover Crop Decision Support\n            Tools project (https://covercrop.tools). The data files and their\n            contents licensed under the terms of MIT License. You may use, copy,\n            modify and redistribute all files included in this distribution,\n            individually or in aggregate, subject to the terms and conditions of\n            the MIT license. See <Link to={\"/license\"}>License</Link> for\n            details.\n          </Typography>\n        </Grid>\n      ) : (\n        <Grid item xs={styles ? 6 : 12}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Typography variant=\"body1\">\n                Permission is hereby granted, free of charge, to any person\n                obtaining a copy of this software and associated documentation\n                files (the “Software”), to deal in the Software without\n                restriction, including without limitation the rights to use,\n                copy, modify, merge, publish, distribute, sublicense, and/or\n                sell copies of the Software, and to permit persons to whom the\n                Software is furnished to do so, subject to the following\n                conditions: The above copyright notice and this permission\n                notice shall be included in all copies or substantial portions\n                of the Software.\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"body1\">\n                THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n                EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n                OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n                NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n                HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n                WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n                FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n                OTHER DEALINGS IN THE SOFTWARE.\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default MITLicenseText;\n","/*\n  This file contains the About component, helper functions, and styles\n  The about page is a static pages that has information about the project\n  RenderContent contains all the text listed in the about section\n  Styles are created using makeStyles\n*/\n\nimport { Button, Typography } from \"@material-ui/core\";\nimport React, { Fragment, useContext, useEffect } from \"react\";\nimport { CustomStyles } from \"../../shared/constants\";\nimport Header from \"../Header/Header\";\nimport MITLicenseText from \"../License/MITLicenseText\";\nimport ReactGA from \"react-ga\";\nimport { Context } from \"../../store/Store\";\n\nconst About = () => {\n  const [value, setValue] = React.useState(0);\n  const {state} = useContext(Context);\n\n  const handleChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    console.log(\"viewing about\");\n    if (state.consent === true) {\n      console.log(\"initializing react-ga\");\n      ReactGA.initialize(\"UA-181903489-1\");\n\n      ReactGA.pageview(\"about\");\n    }\n  }, [state.consent]);\n\n  return (\n    <div className=\"contentWrapper\" id=\"mainContentWrapper\">\n      <Header logo=\"neccc_wide_logo_color_web.jpg\" />\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row boxContainerRow\" style={{ minHeight: \"520px\" }}>\n          <div className=\"col-12 row\">\n            <div className=\"col-md-5 col-lg-4 col-xl-4 col-12 pr-0\">\n              <div\n                className=\"d-flex flex-column\"\n                style={{\n                  border: `1px solid ${CustomStyles().darkGreen}`,\n                  borderRight: \"0px\",\n                }}\n              >\n                <Button\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => handleChange(0)}\n                  variant={value === 0 ? `contained` : `text`}\n                  color={value === 0 ? `secondary` : `default`}\n                >\n                  History and Purpose of the NECCC Tool Effort\n                </Button>\n                <Button\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => handleChange(1)}\n                  variant={value === 1 ? `contained` : `text`}\n                  color={value === 1 ? `secondary` : `default`}\n                >\n                  Cover Crop Data\n                </Button>\n                <Button\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => handleChange(2)}\n                  variant={value === 2 ? `contained` : `text`}\n                  color={value === 2 ? `secondary` : `default`}\n                >\n                  Tool Design Process\n                </Button>\n                <Button\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => handleChange(5)}\n                  variant={value === 5 ? `contained` : `text`}\n                  color={value === 5 ? `secondary` : `default`}\n                >\n                  Many Thanks to Our Funders\n                </Button>\n                <Button\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => handleChange(6)}\n                  variant={value === 6 ? `contained` : `text`}\n                  color={value === 6 ? `secondary` : `default`}\n                >\n                  Contact Us\n                </Button>\n                <Button\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => handleChange(7)}\n                  variant={value === 7 ? `contained` : `text`}\n                  color={value === 7 ? `secondary` : `default`}\n                >\n                  About the Experts\n                </Button>\n              </div>\n            </div>\n            <div\n              className=\"col-md-7 col-lg-8 col-xl-8 col-12 p-2\"\n              style={{ border: `1px solid ${CustomStyles().darkGreen}` }}\n            >\n              <div>\n                <RenderContent value={value} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n\nconst RenderContent = ({ value = 0 }) => {\n  switch (value) {\n    case 0:\n      return (\n        <>\n          <div className=\"col-12\">\n            <Typography variant=\"h4\" gutterBottom>\n              History and Purpose\n            </Typography>\n          </div>\n          <div className=\"col-12\">\n            <Typography variant=\"body1\" align=\"left\">\n              A diverse group of stakeholders including farmers, researchers,\n              and personnel from agribusinesses and NGOs united in 2016 to form\n              the{\" \"}\n              <a\n                href=\"http://northeastcovercrops.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Northeast Cover Crops Council\n              </a>{\" \"}\n              (NECCC). Our mission is to support and promote the adoption of\n              cover crops and foster the exchange of information, inspiration,\n              and outcome-based research. Decision support tools are an\n              excellent way to integrate the complexity of climate, soil, and\n              management into recommendation systems. Therefore, we first\n              targeted the development of a species selection tool. This tool\n              provides cover crop species recommendations based on grower USDA\n              hardiness zone and cropping system specifics. Our species\n              selection tool was adapted from the Midwest Cover Crop Council and\n              modified and expanded to target needs of producers in the\n              Northeast. This initiative led to the formation of a Species\n              Selector product team consisting of agronomists, informatics\n              researchers, and developers, as well as four Cover Crop Data\n              Verification teams, consisting of approximately 35 NECCC members.\n            </Typography>\n          </div>\n        </>\n      );\n    case 1:\n      return (\n        <>\n          <div className=\"col-12\">\n            <Typography variant=\"h4\" gutterBottom>\n              Cover Crop Data\n            </Typography>\n          </div>\n          <div className=\"col-12\">\n            <Typography variant=\"body1\" align=\"left\" className=\"pb-4\">\n              The data featured in this tool are based on expert opinion. These\n              data represent the collective knowledge and experience of cover\n              crop experts in the Northeast US. Experts, grouped by their USDA\n              hardiness zone, evaluated each cover crop property in the dataset\n              via deliberative discussions in over 70 teleconferences. The\n              zones’ decisions on cover crop characteristics, notes regarding\n              nuances and edge/special cases, and framing of ratings were\n              recorded in an online database. A comparative analysis of the data\n              across zones identified areas of inconsistencies which were then\n              addressed in a deliberative intra-regional discussion. This\n              process, in conjunction with feedback from users on the website,\n              ensures the quality and improvement of the data that powers the\n              NECCC Species Selector. You can learn more about the{\" \"}\n              <a\n                href=\"https://aginformaticslab.org/cover-crop-decision-tools/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                cover crop data verification process here\n              </a>\n              . <b>This work was made possible by the USDA</b>\n            </Typography>\n            <Typography variant=\"body1\" align=\"left\" className=\"pb-4\">\n              <b>Data Sources:</b> The cover crop data were adapted from the{\" \"}\n              <a\n                href=\"http://mccc.msu.edu\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Midwest Cover Crops Council (MCCC) species selector tool\n              </a>\n              . These initial data have been reviewed, modified, and greatly\n              expanded upon by cover crop experts in the Northeast in each{\" \"}\n              <a\n                href=\"https://planthardiness.ars.usda.gov/PHZMWeb/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                USDA plant hardiness zone\n              </a>{\" \"}\n              to best match the cropping system types, goals, and constraints\n              found in our region. Additional data sources adapted for this tool\n              include the{\" \"}\n              <a\n                href=\"https://plants.sc.egov.usda.gov/java/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                USDA PLANTS database\n              </a>{\" \"}\n              and a seeding rate calculator developed by USDA NRCS. These data\n              are supplemented by soils data available via{\" \"}\n              <a\n                href=\"https://sdmdataaccess.nrcs.usda.gov/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                USDA NRCS Soil Data Access\n              </a>\n              , and weather data made available through an API, constructed by\n              the Precision Sustainable Agriculture team, serving{\" \"}\n              <a\n                href=\"https://www.nssl.noaa.gov/projects/mrms/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                NSSL MRMS\n              </a>{\" \"}\n              and{\" \"}\n              <a\n                href=\"https://ldas.gsfc.nasa.gov/nldas/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                NASA NLDAS-2\n              </a>{\" \"}\n              weather data.\n            </Typography>\n            <Typography variant=\"body1\" align=\"left\" className=\"pb-4\">\n              <b>Data Availability:</b> We are in the process of making our data\n              publicly available via a few mechanisms once we have completed\n              beta-testing and finalized data quality checks. In addition to\n              accessing this data via the NECCC Species Selector Tool, users\n              will be able to download the raw data (spreadsheets) and Species\n              Information Sheets (PDFs).\n            </Typography>\n            <Typography variant=\"body1\" align=\"left\" className=\"pb-4\">\n              <MITLicenseText styles={false} aboutPage={true} />\n            </Typography>\n          </div>\n        </>\n      );\n\n    case 2:\n      return (\n        <>\n          <div className=\"col-12\">\n            <Typography variant=\"h4\" gutterBottom>\n              Tool Design Process\n            </Typography>\n          </div>\n          <div className=\"col-12\">\n            <Typography variant=\"body1\" className=\"pb-4\" align=\"left\">\n              The NECCC tool is a result of a design collaboration between the{\" \"}\n              <a\n                href=\"http://www.aginformaticslab.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Agricultural Informatics Lab\n              </a>\n              , the{\" \"}\n              <a\n                href=\"http://www.precisionsustainableag.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Precision Sustainable Agriculture\n              </a>{\" \"}\n              team, the NECCC <b>and the USDA</b>. We took a user-centered\n              approach to the design of software. In November 2019, we conducted\n              a{\" \"}\n              <a href=\"https://aginformaticslab.org/cover-crop-decision-tools/\">\n                distributed design sprint to develop a prototype of the user\n                interface\n              </a>{\" \"}\n              (shown below). This interface was initially tested with 24\n              potential users at the NECCC annual conference. The tool was\n              subsequently refined and tested with a second round of 20\n              potential users at the Pennsylvania Association for Sustainable\n              Agriculture Conference in February 2020. This design was\n              ultimately refined over the course of the 2020 development period,\n              and resulted in the tool you now see on this website. We will be\n              conducting user tests this upcoming fall in conjunction with the\n              train-the trainer sessions run by the NECCC (\n              <a\n                href=\"http://www.northeastcovercrops.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                www.northeastcovercrops.com\n              </a>\n              ).\n            </Typography>\n            <div className=\"d-flex justify-content-center pb-4\">\n              <div className=\"imageGif\">\n                <img\n                  style={{\n                    width: \"70%\",\n                    boxShadow: \"0 0 5px rgb(89, 132, 68)\",\n                    borderRadius: \"5px\",\n                    padding: \"1%\",\n                  }}\n                  src=\"/images/mockup.gif\"\n                  alt=\"Decision Support Tool Mockup\"\n                />\n              </div>\n            </div>\n            <Typography variant=\"body1\" className=\"pb-4\" align=\"left\">\n              <b>Reusability:</b> We designed the user interface components of\n              the Cover Crop Species Selector Tool to be reusable. Each user\n              interface component is composed of smaller components that can be\n              duplicated and used in a variety and multiple contexts. For\n              example the location component is used in two parts of the species\n              selector: the wizard -- the place the user first selects their\n              location, and the green bar -- the place the user can update their\n              location. The location component is made of other small\n              components, including a map, buttons, menus, and input fields.\n              These smaller components are also used in other components. For\n              example, the zone selection menu is used in the location component\n              and in the Cover Crop Explorer. By creating and utilizing reusable\n              components, we have created a consistent user experience and user\n              interface that can be carried over to future Decision Support\n              Tools designed by this team.\n            </Typography>\n            <Typography variant=\"body1\" className=\"pb-4\" align=\"left\">\n              <b>Open Source:</b> Once we have completed beta-testing, any\n              developer creating open source agricultural technologies requiring\n              functionality that is currently featured in the NECCC Species\n              Selector will be able to download our code from GitHub,{\" \"}\n              <a\n                href=\"https://aginformaticslab.org/cover-crop-decision-tools/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                as described here\n              </a>\n              , and utilize these components in their projects.\n            </Typography>\n          </div>\n        </>\n      );\n    case 3:\n      return (\n        <Fragment>\n          <div className=\"col-12\">\n            <Typography variant=\"h5\" align=\"left\" gutterBottom>\n              Many Thanks to Our Funders\n            </Typography>\n            <Typography variant=\"body1\" align=\"left\" className=\"pb-4\">\n              This material is based upon work supported by the National\n              Institute of Food and Agriculture, U.S. Department of Agriculture,\n              through the Northeast Sustainable Agriculture Research and\n              Education program under subaward number ENE 16-144. This work has\n              also been supported by a USDA NIFA postdoctoral fellowship (grant\n              # 2016-67012-24711), NIFA SAS CAP grant (project # NC09873), USDA\n              ARS and NRCS, and Purdue University.\n            </Typography>\n            <Typography variant=\"h6\" align=\"left\" gutterBottom>\n              Contact Us\n            </Typography>\n            <Typography variant=\"body1\" align=\"left\" className=\"pb-4\">\n              For information about the NECCC, the NECCC species selection tool\n              use, and the crop data itself, contact: Victoria Ackroyd, NECCC\n              Program Manager, northeastcovercrops AT gmail DOT. com. For\n              information about decision support tool design and development,\n              and the species selector tool itself, contact: aginformaticslab AT\n              gmail DOT com.\n            </Typography>\n          </div>\n        </Fragment>\n      );\n\n    case 5:\n      return (\n        <>\n          <div className=\"col-12\">\n            <Typography variant=\"h4\" gutterBottom>\n              Many Thanks to Our Funders\n            </Typography>\n          </div>\n          <div className=\"col-12\">\n            <Typography variant=\"body1\" align=\"left\" className=\"pb-4\">\n              This material is based upon work supported by the Northeast\n              Sustainable Agriculture Research and Education program (subaward #\n              ENE 16-144), a USDA NIFA postdoctoral fellowship (grant #\n              2016-67012-24711), a NIFA SAS CAP grant (project # NC09873), a\n              NIFA OREI grant (project # MD.W-2015-07406), USDA ARS and NRCS,\n              and Purdue University.\n            </Typography>\n          </div>\n        </>\n      );\n\n    case 6:\n      return (\n        <>\n          <div className=\"col-12\">\n            <Typography variant=\"h4\" gutterBottom>\n              Contact Us\n            </Typography>\n          </div>\n          <div className=\"col-12 pb-4\">\n            <Typography variant=\"body1\" align=\"left\" gutterBottom>\n              For information about the NECCC, the NECCC species selection tool\n              use and data, contact: Victoria Ackroyd, NECCC Program Manager,\n              vackroyd AT umd DOT edu.\n            </Typography>\n            <Typography variant=\"body1\" align=\"left\" gutterBottom>\n              For information about decision support tool design and development\n              of the species selector tool, contact: aginformaticslab AT gmail\n              DOT com.\n            </Typography>\n          </div>\n        </>\n      );\n\n    case 7:\n      return (\n        <Fragment>\n          <div className=\"col-12\">\n            <Typography variant=\"h4\" gutterBottom>\n              About The Experts\n            </Typography>\n          </div>\n          <div className=\"col-12 pb-4\">\n            <Typography variant=\"body1\" align=\"left\" className=\"pb-4\">\n              The cover crop data in the Species Selector are brought to you by\n              the following experts in Zones 4 through 7. The Species Selector\n              and the data verification process are brought to you by the\n              Development Team.\n            </Typography>\n            <div className=\"tbl\">\n              <table className=\"table-bordered table-sm table-bordered table-hover\">\n                <tbody>\n                  <tr>\n                    <td>\n                      <Typography variant=\"body1\" align=\"left\">\n                        Zone 7\n                      </Typography>\n                    </td>\n                    <td>\n                      <Typography variant=\"body1\" align=\"left\">\n                        Michel Cavigelli, Aaron Cooper, Dean Hively, Steven\n                        Mirsky, Scott Raubenstein, Mark VanGessel\n                      </Typography>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      {\" \"}\n                      <Typography variant=\"body1\" align=\"left\">\n                        Zone 6\n                      </Typography>\n                    </td>\n                    <td>\n                      <Typography variant=\"body1\" align=\"left\">\n                        Christian Bench, Rebecca Brown, Sjoerd Duiker, Kaitlin\n                        Farbotnik, Mark Goodson, Jim Hyde, Zach Larson, Dave\n                        Wilson\n                      </Typography>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      {\" \"}\n                      <Typography variant=\"body1\" align=\"left\">\n                        Zone 5\n                      </Typography>\n                    </td>\n                    <td>\n                      <Typography variant=\"body1\" align=\"left\">\n                        Thomas Bjorkman, Shawnna Clark, Chad Cochrane, Mark\n                        Goodson, Paul Salon, Anne Verhallen, Kirsten Workman\n                      </Typography>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      {\" \"}\n                      <Typography variant=\"body1\" align=\"left\">\n                        Zone 4\n                      </Typography>\n                    </td>\n                    <td>\n                      <Typography variant=\"body1\" align=\"left\">\n                        Heather Darby, Jason Lilley, Rebecca Long, Ellen\n                        Mallory, Lindsey Ruhl, Paul Salon, Brandon Smith,\n                        Kirsten Workman\n                      </Typography>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      {\" \"}\n                      <Typography variant=\"body1\" align=\"left\">\n                        Specialist Data\n                      </Typography>\n                    </td>\n                    <td>\n                      <Typography variant=\"body1\" align=\"left\">\n                        Gary Bergstrom, Eric Gallandt, Kelly Gill, Cerruti\n                        Hooks, Hillary Mehl, Christine O'Reilly\n                      </Typography>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      {\" \"}\n                      <Typography variant=\"body1\" align=\"left\">\n                        Development Team\n                      </Typography>\n                    </td>\n                    <td>\n                      <Typography variant=\"body1\" align=\"left\">\n                        Victoria Ackroyd, Rohit Bandooni, Steven Mirsky, Juliet\n                        Norton, Ankita Raturi\n                      </Typography>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"col-12 pb-4\">\n            <Typography variant=\"body1\" align=\"left\" gutterBottom>\n              <b>Acknowledgements:</b>\n              <br />\n              Our thanks to:\n              <br />\n              Jim Purtilo and three teams of 24 students from the UMD CS 435\n              capstone classes: Miguel Aviles, Brian Choi, Sohum Dalal, Tiffany\n              Jachja, Eli Lorenzi, Mark McCloskey, Jack Nolan, Neelima Pradhan,\n              Alex Lee, Jeong Hyun Lim, Yanzhuo Ma, Patrick McNamee, Christian\n              Musial, Chukwuebuka Obizoba, Alex Proctor, Sushant Tamrakar,\n              Matthew Feder, Gautham Kovvuru, Isaac Lee, Meekit Patel, Ryan\n              Stumbaugh, Eric Wallace, Micah Wallberg, Zachary Wilton.\n              Undergraduate Research Support: Linda Yeung. Early tool testers\n              including: Brian Davis, Guillermo Marcillo, Cara Peterson, Harry\n              Schomberg, Ethan Sweep. Experts who helped with cover crop species\n              list generation: John Chartier, Megan Chawner, Dorn Cox, Masoud\n              Hashemi, Kris Ribble, Amy Shober, Kate Tully, Ray Weil. User\n              interface testing participants at the NECCC and PASA tools\n              sessions.\n            </Typography>\n          </div>\n          <div className=\"col-12 pb-2\">\n            <Typography variant=\"body1\" align=\"left\">\n              <b>Expert and Development Team Credits:</b>\n            </Typography>\n          </div>\n          <div className=\"col-12\">\n            <Typography\n              variant=\"body1\"\n              align=\"left\"\n              gutterBottom\n              component=\"div\"\n            >\n              <p>\n                <strong>Victoria Ackroyd </strong>is Program Manager for the\n                Northeast Cover Crops Council, Assistant Research Scientist in\n                the Dept. of Plant Science &amp; Landscape Architecture at the\n                University of Maryland, and a Visiting Scientist in the USDA ARS\n                Sustainable Agricultural Systems Lab (Beltsville, MD). She\n                previously assisted with the Midwest Cover Crops Council Species\n                Selector Tool and has experience with cover crops in both\n                vegetable and agronomic systems. She led the data verification\n                process for the NECCC Species Selector tool.\n              </p>\n              <p>\n                <strong>Rohit Bandooni </strong>is a programmer at North\n                Carolina State University. His background is Full Stack\n                Development with a focus on Front End Web Development using\n                modern JavaScript languages. He implemented the NECCC Species\n                Selector tool.&nbsp;\n              </p>\n              <p>\n                <strong>Christian Bench</strong> is a farmer and Agriculture\n                Specialist with NJ RC&amp;D and NRCS. He provides leadership in\n                the NJ soil health initiative, cover crop and no-till efforts.\n                He notes that &ldquo;Armoring the soil and providing an\n                ecosystem below our feet is of utmost importance as we face\n                challenging growing conditions.&rdquo;\n              </p>\n              <p>\n                <strong>Gary Bergstrom</strong>, Professor, Plant Pathology and\n                Plant-Microbe Biology Section, Cornell University. Gary reviewed\n                and updated data related to cover crops and cash crop disease.\n              </p>\n              <p>\n                <strong>Thomas Bjorkman </strong>is a Professor of Veg Crop\n                Physiology in the Horticulture Section at Cornell University. He\n                works on cover crops for weed and soil-quality management goals.\n              </p>\n              <p>\n                <strong>Rebecca Brown</strong>, Associate Professor, Rhode\n                Island State University. Rebecca works on cover crops for\n                peri-urban vegetable systems. She is particularly interested in\n                identifying which cover crops work or do not work in coastal New\n                England, which is cool summer zone 6.\n              </p>\n              <p>\n                <strong>Michel Cavigelli</strong>, Soil Scientist, USDA ARS\n                Sustainable Agricultural Systems Lab (Beltsville, MD).\n              </p>\n              <p>\n                <strong>Shawnna Clark</strong>, Manager/Project leader/Plant\n                Materials Specialist/Field Tech. She works with other NRCS\n                specialists and field office personnel, and landowners,\n                universities, local, state and other fed agencies on soil health\n                and cover crops and many other important Farm Bill Programs.\n              </p>\n              <p>\n                <strong>Chad Cochrane</strong>, USDA NRCS Resource\n                Conservationist - Agronomy in New Hampshire.\n              </p>\n              <p>\n                <strong>Aaron Cooper </strong>is an organic grain farmer on the\n                lower Eastern Shore of Maryland. He feels that cover crop\n                planting is essential to his farm to support nutrient cycling\n                and to promote soil health.\n              </p>\n              <p>\n                <strong>Heather Darby</strong>, Extension Professor: Agronomy\n                Specialist, University of Vermont Extension.\n              </p>\n              <p>\n                <strong>Sjoerd Duiker</strong>, Professor of Soil Management and\n                Applied Soil Physics, Penn State University.\n              </p>\n              <p>\n                <strong>Kaitlin Farbotnik</strong>, State Conservation\n                Agronomist and State Grazing Specialist for New Jersey NRCS.\n                Much of her work is spent training the next generation of\n                conservationists and supporting the Soil Conservationists in New\n                Jersey by providing technical information to help them make\n                better conservation decisions while developing conservation\n                plans.&nbsp;\n              </p>\n              <p>\n                <strong>Eric Gallandt</strong>, Professor of Weed Ecology,\n                University of Maine. Eric assisted in reviewing cover crop/weeds\n                data.\n              </p>\n              <p>\n                <strong>Kelly Gill</strong>, Senior Pollinator Conservation\n                Specialist, Xerces Society. Kelly reviewed and provided data\n                related to pollinators for the tool.\n              </p>\n              <p>\n                <strong>Mark Goodson</strong>, USDA NRCS Pennsylvania State\n                Agronomist.\n              </p>\n              <p>\n                <strong>Dean Hively</strong>, Research Soil Scientist, USDA-ARS\n                Hydrology and Remote Sensing Laboratory.\n              </p>\n              <p>\n                <strong>Cerruti Hooks</strong>, Associate Professor, University\n                of Maryland. Cerruti reviewed and provided data related to\n                insects for the tool.&nbsp;\n              </p>\n              <p>\n                <strong>Jim Hyde</strong>, State Agronomist in Connecticut,\n                specializing in soil nutrient management and ag waste\n                systems.&nbsp;\n              </p>\n              <p>\n                <strong>Zach Larson</strong>, Field and Forage Crops Educator,\n                Penn State University Extension.\n              </p>\n              <p>\n                <strong>Jason Lilley</strong>, Sustainable Agriculture\n                Professional, University of Maine.\n              </p>\n              <p>\n                <strong>Rebecca Long</strong>, Agriculture and Food Systems\n                Professional, University of Maine Cooperative Extension Oxford\n                County\n              </p>\n              <p>\n                <strong>Ellen Mallory</strong>, Sustainable Agriculture\n                Extension Specialist and Professor, University of Maine.\n              </p>\n              <p>\n                <strong>Hillary Mehl</strong>, now at the University of Arizona,\n                reviewed and provided data related to nematodes for the\n                tool.&nbsp;\n              </p>\n              <p>\n                <strong>Steven Mirsky </strong>is a Research Ecologist in the\n                USDA ARS Sustainable Agricultural Systems Lab (Beltsville, MD).\n                His research program focuses on removing barriers to cover crop\n                adoption and increasing the precision of their use with emphasis\n                on management, breeding, and subsequent agro-ecosystem services.\n                As chair of the NECCC and decision support tool subcommittee\n                (2016 to present), he led the development of the NECCC Species\n                Selector Tool and related tools.\n              </p>\n              <p>\n                <strong>Juliet Norton </strong>is an Informatics Post-doctoral\n                Researcher in the Agricultural Informatics Lab at Purdue\n                University. Her research explores and addresses\n                information-based barriers to sustainable agricultural\n                practices. She was responsible for the implementation of the\n                data verification process and underlying data structures. She\n                also directed the implementation of the user interface design\n                and ensured that it appropriately represented the cover crop\n                data that powers the tool.&nbsp;\n              </p>\n              <p>\n                <strong>Christine O&rsquo;Reilly</strong>, Forage and Grazing\n                Specialist with the Ontario Ministry of Agriculture, Food, and\n                Rural Affairs. Christine reviewed and provided data related to\n                cover crops as feed/forage for the tool.\n              </p>\n              <p>\n                <strong>Ankita Raturi </strong>is an Assistant Professor in\n                Agricultural Engineering at Purdue University. She runs the{\" \"}\n                <a\n                  href=\"http://sudokita.com\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Agricultural Informatics Lab\n                </a>\n                , with research focused on human-centered design, information\n                modeling, and software engineering, for increased resilience in\n                food and agricultural systems. She led the design and\n                development of the NECCC Species selector tool, co-designed the\n                underlying data verification process and underlying crop\n                information model.\n              </p>\n              <p>\n                <strong>Scott Raubenstein</strong>, Vice President, Agricultural\n                Services, Perdue AgriBusinesses.&nbsp;\n              </p>\n              <p>\n                <strong>Lindsey Ruhl</strong>, Research Specialist for\n                University of Vermont Extension Services.&nbsp;\n              </p>\n              <p>\n                <strong>Paul Salon </strong>was formerly with USDA-NRCS at the\n                Big Flats Plant Materials Center as Research Agronomist and\n                Plant Materials Specialist covering Northeast states and with\n                the National Soil Health Division as a Soil Health Specialist\n                covering the Mid-Atlantic region. He was the primary architect\n                of a cover crop mix seeding calculator currently under further\n                development by the NECCC.\n              </p>\n              <p>\n                <strong>Brandon Smith</strong>, USDA NRCS Northeast Regional\n                Team Leader.\n              </p>\n              <p>\n                <strong>Mark VanGessel</strong>, Extension Weed Specialist at\n                University of Delaware.\n              </p>\n              <p>\n                <strong>Anne Verhallen</strong>, Soil Management Specialist in\n                Horticulture at Ridgetown, Ontario Ministry of Agriculture,\n                Food, and Rural Affairs.\n              </p>\n              <p>\n                <strong>John Wallace</strong>, Assistant Professor of Weed\n                Science, Penn State University.&nbsp;\n              </p>\n              <p>\n                <strong>Dave Wilson</strong> is an Agronomist, Field and Forage\n                Crops Extension Educator with Penn State Extension in Berks\n                County, PA. Dave has worked as a research agronomist in field\n                crops, cover crops, forages, pasture management, grazing, soil\n                health, farming rotations and organic farming systems. Dave's\n                background includes dairy farming, maize breeding, certified\n                hybrid corn production, certified soybean and small grain\n                production and agricultural pesticide research. His prior\n                experience includes conducting research evaluating new species\n                and varieties for use in forage systems and as cover crops.\n              </p>\n              <p>\n                <strong>Kirsten Workman, </strong>Agronomy Specialist and\n                Certified Crop Adviser for University of Vermont Extension. She\n                works directly with farmers on implementing conservation\n                agronomy on their farms, focusing on soil health, nutrient\n                management and water quality. She also engages in on-farm\n                research focused on cover crops, especially in dairy cropping\n                systems.\n              </p>\n            </Typography>\n          </div>\n        </Fragment>\n      );\n    default: {\n      return <Typography variant=\"body1\"></Typography>;\n    }\n  }\n};\n","/* \n  Under Construction \n*/\n\nimport { Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport { UnderConstructionText } from \"../../shared/constants\";\nimport Header from \"../Header/Header\";\n\nconst SeedingRateCalculator = () => {\n  return (\n    <div className=\"contentWrapper\">\n      <Header logo=\"neccc_wide_logo_color_web.jpg\" />\n      <Box>{UnderConstructionText}</Box>\n    </div>\n  );\n};\n\nexport default SeedingRateCalculator;\n","/*\n  Under construction\n*/\n\nimport { Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport { UnderConstructionText } from \"../../shared/constants\";\nimport Header from \"../Header/Header\";\n\nconst MixMaker = () => {\n  return (\n    <div className=\"contentWrapper\">\n      <Header logo=\"neccc_wide_logo_color_web.jpg\" />\n      <Box>{UnderConstructionText}</Box>\n    </div>\n  );\n};\n\nexport default MixMaker;\n","/*\n  This file contains the ExplorerCardView component, and styles\n  The ExplorerCardView component is the card that contains a single crop in the crop explorer\n  Styles are created using makeStyles\n*/\n\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport { trimString } from \"../../shared/constants\";\nimport { Context } from \"../../store/Store\";\nimport CropDetailsModalComponent from \"../CropSelector/CropDetailsModal\";\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 345,\n    width: 250,\n  },\n  media: {\n    height: 140,\n  },\n});\nconst ExplorerCardView = (props) => {\n  const {state, dispatch} = useContext(Context);\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const sfilters = state[section];\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalData, setModalData] = useState({});\n  const classes = useStyles();\n\n  const [selectedBtns, setSelectedBtns] = useState(\n    state.selectedCrops.map((crop) => {\n      return crop.id;\n    })\n  );\n  useEffect(() => {\n    const newSelectedBtns = state.selectedCrops.map((crop) => {\n      return crop.id;\n    });\n    setSelectedBtns(newSelectedBtns);\n    console.log(\"selected btns\", newSelectedBtns);\n  }, [sfilters.zone, state.selectedCrops.length]);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleModalOpen = (crop) => {\n    // put data inside modal\n    setModalData(crop);\n\n    setModalOpen(true);\n  };\n  const addCropToBasket = (cropId, cropName, btnId, cropData) => {\n    let selectedCrops = {};\n    var cropArray = [];\n    selectedCrops[\"id\"] = cropId;\n    selectedCrops[\"cropName\"] = cropName;\n    selectedCrops[\"data\"] = cropData;\n\n    cropArray = selectedCrops;\n\n    if (state.selectedCrops.length > 0) {\n      // DONE: Remove crop from basket\n      var removeIndex = state.selectedCrops\n        .map(function (item) {\n          return item.id;\n        })\n        .indexOf(`${cropId}`);\n      if (removeIndex === -1) {\n        // element not in array\n        dispatch({\n          type: \"SELECTED_CROPS_MODIFIER\",\n          data: {\n            selectedCrops: [...state.selectedCrops, selectedCrops],\n            snackOpen: false,\n            snackMessage: `${cropName} Added`,\n          },\n        });\n        enqueueSnackbar(`${cropName} Added`);\n      } else {\n        let selectedCropsCopy = state.selectedCrops;\n\n        selectedCropsCopy.splice(removeIndex, 1);\n        dispatch({\n          type: \"SELECTED_CROPS_MODIFIER\",\n          data: {\n            selectedCrops: selectedCropsCopy,\n            snackOpen: false,\n            snackMessage: `${cropName} Removed`,\n          },\n        });\n        enqueueSnackbar(`${cropName} Removed`);\n      }\n    } else {\n      dispatch({\n        type: \"SELECTED_CROPS_MODIFIER\",\n        data: {\n          selectedCrops: [cropArray],\n          snackOpen: false,\n          snackMessage: `${cropName} Added`,\n        },\n      });\n      enqueueSnackbar(`${cropName} Added`);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        {props.activeCropData.length > 0 ? (\n          props.activeCropData.map((crop, index) => {\n            return (\n              <Grid item key={index}>\n                <Card className={classes.card}>\n                  <CardActionArea onClick={() => handleModalOpen(crop)}>\n                    <CardMedia\n                      image={\n                        crop.fields[\"Image Data\"][\"Key Thumbnail\"]\n                          ? `/images/Cover Crop Photos/250/${crop.fields[\"Image Data\"][\"Key Thumbnail\"]}`\n                          : \"https://placehold.it/100x100?text=Placeholder\"\n                      }\n                      className={classes.media}\n                      title={crop.fields[\"Cover Crop Name\"]}\n                    />\n                  </CardActionArea>\n                  <CardContent>\n                    <div\n                      className=\"font-weight-bold text-muted text-uppercase\"\n                      style={{ fontSize: \"10pt\" }}\n                    >\n                      {crop.fields[\"Cover Crop Group\"]}\n                    </div>\n                    <div\n                      className=\"font-weight-bold \"\n                      style={{ fontSize: \"16pt\" }}\n                    >\n                      <Typography variant=\"h6\" className=\"text-truncate\">\n                        {crop.fields[\"Cover Crop Name\"]}\n                      </Typography>\n                    </div>\n                    <small className=\"font-italic text-muted d-inline-block text-truncate\">\n                      {trimString(crop.fields[\"Scientific Name\"], 25)}\n                    </small>\n                    <div>\n                      <small className=\"text-muted\">\n                        <a\n                          style={{\n                            textDecoration: \"underline\",\n                            color: \"rgb(53, 153, 155)\",\n                          }}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          onClick={() => handleModalOpen(crop)}\n                          // href=\"/#\"\n                        >\n                          View Crop Details\n                        </a>\n                      </small>\n                    </div>\n                  </CardContent>\n\n                  <CardActionArea\n                    id={`cartBtn${index}`}\n                    style={{\n                      backgroundColor: \"#e3f2f4\",\n                      textAlign: \"center\",\n                      padding: \"0.5em\",\n                    }}\n                    className={\n                      selectedBtns.includes(crop.fields.id) &&\n                      parseInt(sfilters.zone) === crop.fields.Zone\n                        ? \"activeCartBtn\"\n                        : \"inactiveCartBtn\"\n                    }\n                    onClick={() => {\n                      addCropToBasket(\n                        crop.fields[\"id\"],\n                        crop.fields[\"Cover Crop Name\"],\n                        `cartBtn${index}`,\n                        crop.fields\n                      );\n                    }}\n                  >\n                    <Typography\n                      variant=\"body2\"\n                      className={`text-uppercase ${\n                        selectedBtns.includes(crop.fields.id) &&\n                        parseInt(sfilters.zone) === crop.fields.Zone\n                          ? \"text-white\"\n                          : \"\"\n                      }`}\n                      style={{\n                        color: \"black\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {selectedBtns.includes(crop.fields.id) &&\n                      parseInt(sfilters.zone) === crop.fields.Zone\n                        ? \"ADDED\"\n                        : \"ADD TO LIST\"}\n                    </Typography>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            );\n          })\n        ) : state.cropData.length > 0 ? (\n          <Grid item>\n            <Typography variant=\"body1\" align=\"center\">\n              No cover crops match your selected Cover Crop Property filters.\n            </Typography>\n          </Grid>\n        ) : (\n          \"Loading..\"\n        )}\n      </Grid>\n\n      <CropDetailsModalComponent\n        modalOpen={modalOpen}\n        setModalOpen={setModalOpen}\n        crop={modalData}\n      />\n    </Fragment>\n  );\n};\n\nexport default ExplorerCardView;\n","/*\n  This file contains the CoverCropExplorer component\n  The CoverCropExplorer component allows users to look at a list of all the cover crops for their zone \n  styled from from CustomStyles in ../../../shared/constants\n*/\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../../store/Store\";\nimport CropSidebarComponent from \"../CropSelector/CropSidebar\";\nimport Header from \"../Header/Header\";\nimport ExplorerCardView from \"./ExplorerCardView\";\nimport ConsentModal from \"./ConsentModal\";\nimport ReactGA from \"react-ga\";\n\nconst CoverCropExplorer = () => {\n  const {state} = useContext(Context);\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const sfilters = state[section];\n\n  const [cropDataChanged, setCropDataChanged] = useState(false);\n\n  const activeCropData = state.activeCropData;\n\n  useEffect(() => {\n    setCropDataChanged((c) => !c);\n  }, [sfilters.zone]);\n\n  useEffect(() => {\n    if (state.consent === true) {\n      console.log(\"viewing explorer\");\n      ReactGA.initialize(\"UA-181903489-1\");\n\n      ReactGA.pageview(\"cover crop explorer\");\n    }\n  }, [state.consent]);\n\n  useEffect(() => {\n    document.title = \"Cover Crop Explorer\";\n  }, []);\n\n  return (\n    <div className=\"contentWrapper\">\n      <ConsentModal consent={state.consent} />\n      <Header logo=\"neccc_wide_logo_color_web.jpg\" />\n      <div className=\"container-fluid mt-4 mb-4\">\n        <div className=\"row mt-3\">\n          <div className=\"col-md-12 col-lg-3 col-xl-2 col-12\">\n            <CropSidebarComponent\n              from={\"explorer\"}\n              cropDataChanged={cropDataChanged}\n              activeCropData={\n                activeCropData.length > 0 ? activeCropData : state.cropData\n              }\n              isListView={true}\n            />\n          </div>\n          <div className=\"col-md-12 col-lg-9 col-xl-10 col-12\">\n            {sfilters.zone === \"\" ? (\n              <Grid container alignItems=\"center\" justifyContent=\"center\">\n                <Grid item xs={12}>\n                  <Typography variant=\"h5\" align=\"center\">\n                    Please choose a zone from the sidebar\n                  </Typography>\n                </Grid>\n              </Grid>\n            ) : (\n              <ExplorerCardView\n                cropDataChanged={cropDataChanged}\n                cropData={state.cropData}\n                activeCropData={activeCropData}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CoverCropExplorer;\n","/*\n  Contains the top level information sheet popup \n  BasicCrop contains the default crop\n  styled from ../../styles/InformationSheet.scss\n*/\n\nimport { Button, Typography } from \"@material-ui/core\";\nimport {\n  Close,\n  FormatListBulleted,\n  Info,\n  PictureAsPdf,\n  Print,\n} from \"@material-ui/icons\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CropImage, flipCoverCropName, zoneIcon } from \"../../shared/constants\";\nimport { Context } from \"../../store/Store\";\nimport \"../../styles/InformationSheet.scss\";\nimport InformationSheetContent from \"./InformationSheetContent\";\n\nconst InformationSheet = (props) => {\n  const {state} = useContext(Context);\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const sfilters = state[section];\n\n  const name = props.match.params.cropName\n    ? props.match.params.cropName\n    : \"none\";\n\n  const [cropData, setCropData] = useState(\n    props.match.params.cropName\n      ? state.cropData.find(\n          (crop) =>\n            crop.fields[\"Cover Crop Name\"] === props.match.params.cropName\n        )\n      : []\n  );\n  //   check if crop data is passed as crop\n  //   elseif, check if localstorage has infosheet data else use default crop data\n  const [crop, setCrop] = useState(\n    name === \"none\"\n      ? props.crop\n        ? props.crop\n        : window.localStorage.getItem(\"infosheet\") !== null\n        ? JSON.parse(window.localStorage.getItem(\"infosheet\"))\n        : BasicCrop\n      : cropData.fields\n      ? cropData.fields\n      : \"\"\n  );\n  const ref = React.createRef();\n\n  useEffect(() => {\n    setCropData(\n      props.match.params.cropName\n        ? state.cropData.find(\n            (crop) =>\n              crop.fields[\"Cover Crop Name\"] === props.match.params.cropName\n          )\n        : []\n    );\n    setCrop(\n      name === \"none\"\n        ? props.crop\n          ? props.crop\n          : window.localStorage.getItem(\"infosheet\") !== null\n          ? JSON.parse(window.localStorage.getItem(\"infosheet\"))\n          : BasicCrop\n        : cropData.fields\n        ? cropData.fields\n        : \"\"\n    );\n  }, [state, props, cropData.fields, name]);\n\n  useEffect(() => {\n    document.getElementsByTagName(\"footer\")[0].style.display = \"none\";\n\n    if (window.localStorage.getItem(\"infosheet\") !== null) {\n      // removeHeaderContent();\n      document.title = crop[\"Cover Crop Name\"];\n      window.print();\n    }\n\n    // delete localstorage\n    window.localStorage.removeItem(\"infosheet\");\n  }, [crop]);\n\n  return (\n    <div className=\"wrapper container-fluid\" ref={ref}>\n      <header className=\"row greenHeader\">\n        <div className=\"col-10\">\n          <span className=\"pr-4\">DOWNLOAD:</span>\n          <span className=\"pr-2\">\n            <Button\n              style={{ color: \"white\" }}\n              href={`/pdf/${crop[\"Cover Crop Name\"]}.pdf`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <PictureAsPdf /> &nbsp; PDF\n            </Button>\n          </span>\n          <span className=\"pr-2\">\n            <Button\n              href={`/csv/${crop[\"Cover Crop Name\"]}.csv`}\n              style={{ color: \"white\" }}\n            >\n              <FormatListBulleted />\n              &nbsp; SPREADSHEET\n            </Button>\n          </span>\n        </div>\n        <div className=\"col-1\">\n          <Button onClick={window.print} style={{ color: \"white\" }}>\n            <Print /> &nbsp;PRINT\n          </Button>\n        </div>\n        <div className=\"col-1 text-right\">\n          <Button onClick={props.closeModal} style={{ color: \"white\" }}>\n            <Close />\n          </Button>\n        </div>\n      </header>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <div className=\"row coverCropNames\">\n            <div className=\"col-12 coverCropGroup\">\n              <Typography\n                variant=\"body1\"\n                className=\"text-uppercase text-muted font-weight-bold\"\n              >\n                {crop[\"Cover Crop Group\"]}\n              </Typography>\n            </div>\n            <div className=\"col-12 coverCropName\">\n              <Typography variant=\"h5\" className=\"pr-3\" display=\"inline\">\n                {flipCoverCropName(crop[\"Cover Crop Name\"])}\n              </Typography>\n\n              <Typography\n                variant=\"subtitle2\"\n                display=\"inline\"\n                className=\"text-muted font-italic\"\n              >\n                {crop[\"Scientific Name\"]}\n              </Typography>\n            </div>\n            <div className=\"col-12 pt-3\">\n              <span className=\"pr-2\">\n                <Info style={{ color: \"#2b7b79\" }} />\n              </span>\n              <span>\n                <Typography variant=\"body1\" display=\"inline\">\n                  This data is based on expert opinion.\n                </Typography>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-6\">\n          <div className=\"row coverCropImagesWrapper\">\n            {crop[\"Image Data\"] ? (\n              <CropImage\n                present={true}\n                view={\"information-sheet\"}\n                src={\n                  crop[\"Image Data\"][\"Key Thumbnail\"]\n                    ? `/images/Cover Crop Photos/${crop[\"Image Data\"][\"Directory\"]}/${crop[\"Image Data\"][\"Key Thumbnail\"]}`\n                    : \"https://placehold.it/100x100\"\n                }\n                alt={crop[\"Cover Crop Name\"]}\n              />\n            ) : (\n              <CropImage present={false} view={\"information-sheet\"} />\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"row middleGreenStrip\">\n        <div className=\"col-6\">\n          {zoneIcon(20, 20)}\n          <span className=\"pl-2\">\n            Plant Hardiness Zone {crop.Zone ? crop.Zone : sfilters.zone} Dataset\n          </span>\n        </div>\n        <div className=\"col-6 text-right\">\n          {/* <PhotoLibrary /> <span className=\"pl-2\">View Photos</span> */}\n        </div>\n      </div>\n\n      <InformationSheetContent crop={crop} />\n    </div>\n  );\n};\n\nexport default InformationSheet;\n\nconst BasicCrop = () => {\n  return {\n    _id: {\n      $oid: \"5f24456fe695147b85dd78fe\",\n    },\n    \"Cover Crop Name\": \"Pea, Spring\",\n    \"Scientific Name\": \"Pisum sativum\",\n    Synonyms: \"Garden Pea\",\n    \"cv, var, or ssp to specify\": \"Spring '1020'\",\n    \"Notes: Taxonomy\":\n      \"forage pea would be better common name - actual garden peas have been bred for unpigmented seed coats and high sugar, which reduces germination\",\n    Origin: \"MCCC Species tool\",\n    \"Drought Tolerance\": 3,\n    \"Shade Tolerance\": 2,\n    \"Flood Tolerance\": 2,\n    \"Low Fertility Tolerance\": 4,\n    \"Salinity Tolerance\": 1,\n    \"Winter Survival\": [\"Never\"],\n    \"Active Growth Period\": [\"Fall\", \"Spring\", \"Summer\"],\n    Duration: [\"Annual\"],\n    \"Shape & Orientation\": [\"Semi-Erect\", \"Climbing\"],\n    \"Notes: Basic Agronomics\":\n      \"Dry matter highly dependent on planting and termination date and precipitation. Season length, habit vary by cultivar. Biomass breaks down quickly; early planting and termination reduces winter survival. Mixes well with grains when grown for forage. Bloat potential that is easily managed. Seed vigor highly variable. For grazing purposes, restrict to 30% of total ration or mixing with a grass is recommended.\",\n    \"Review Status\": \"Zone Team Start\",\n    \"Soil Drainage\": [\n      \"Somewhat poorly drained\",\n      \"Moderately well drained\",\n      \"Well drained\",\n      \"Excessively drained\",\n      \"Well drained muck\",\n    ],\n    \"Min Germination Temp (F)\": 42,\n    \"Seeds per Pound\": 3500,\n    \"Inoculant Type (Legumes Only)\": [\"pea/vetch\"],\n    \"Seeding Rate: Broadcast (w/cultivation) (lbs/A)\": \"58-104\",\n    \"Seeding Rate: Drilled (lbs/A)\": \"50-100\",\n    \"Seeding Rate: Aerial (lbs/A)\": \"Not Recommended\",\n    \"Drilled Depth Min\": 1,\n    \"Loosens Topsoil\": 2,\n    \"Frees P & K\": 5,\n    \"Growing Window\": \"Short\",\n    \"Ease of Establishment\": 2,\n    \"Family Common Name\": \"Pea family\",\n    \"Family Scientific Name\": \"Fabaceae\",\n    \"Soil Textures\": [\"medium\", \"coarse\"],\n    \"Minimum Tolerant Soil pH\": 6,\n    \"Maximum Tolerant Soil pH\": 7.5,\n    \"Soil Moisture Use\": \"Medium\",\n    \"Cover Crop Group\": \"Legume\",\n    \"Heat Tolerance\": 3,\n    \"Seed Price per Pound\": 3,\n    \"USDA Symbol\": \"PISA6\",\n    \"Zone Decision\": \"Include\",\n    \"Zone Use\": \"Emerging\",\n    \"Shape & Orientation-USDA PLANTS\": \"Climbing\",\n    \"Flooding Tolerance\": \"Poor\",\n    \"Nitrogen Accumulation Min, Legumes (lbs/A/y)\": 40,\n    \"Dry Matter Min (lbs/A/y)\": 1000,\n    \"C to N Ratio\": 1,\n    \"Active Growth Period-USDA PLANTS\": [\"Spring\", \"Summer\"],\n    \"Notes: Termination [Goal: Method: Timing]\":\n      \"If using herbicides to terminate use a tank mixture (e.g., glyphosate + dicamba or 2,4-d)\",\n    \"Loosens Subsurface Soil\": 1,\n    \"Supports Mycorrhizae\": 3,\n    \"Early Spring Growth\": 3,\n    \"Flowering Trigger\": [\"Plant Size\"],\n    \"Establishes Quickly\": 2,\n    \"Root Architecture\": [\"Tap\"],\n    \"Root Depth\": \"Shallow\",\n    \"Notes: Growth, Roots, and Nutrients\": \"Minimum Germination Temp. ~ 41˚F\",\n    \"Tillage Termination at Vegetative\": 4,\n    \"Pollinator Habitat\": 4,\n    \"Pollinator Food\": 2,\n    \"Tillage Termination at Flowering\": 4,\n    \"Freezing Termination at Vegetative\": 2,\n    \"Freezing Termination at Flowering\": 5,\n    \"Chemical Termination at Flowering\": 5,\n    \"Mow Termination at Flowering\": 5,\n    \"Chemical Termination at Vegetative\": 5,\n    \"Mow Tolerance at Vegetative\": 5,\n    \"Roller Crimp Tolerance at Flowering\": 3,\n    \"Roller Crimp Tolerance at Vegetative\": 1,\n    \"Volunteer Establishment\": 5,\n    Persistence: 1,\n    \"Notes: Weeds\":\n      \" Late planting increases heaving. Weak plant with low volunteer seed survivability.\",\n    \"Seed price per acre: Drilled/Cultipack and Cultivation\": 3,\n    \"Seed price per acre: Broadcast (w/cultivation)\": 3,\n    \"Improve Soil Organic Matter\": 1,\n    \"Increase Soil Aggregation\": 2,\n    \"Lasting Residue\": 1,\n    \"Penetrates Plow Pan\": 1,\n    \"Base Seeding Rate Min (lbs/A)\": 40,\n    \"Base Seeding Rate Max (lbs/A)\": 100,\n    \"Nitrogen Accumulation Max, Legumes (lbs/A/y)\": 100,\n    \"Dry Matter Max (lbs/A/y)\": 2500,\n    \"Drilled Depth Max\": 1.5,\n    \"Reduces Topsoil Compaction\": 2,\n    \"March, Early\": [\n      \"Reliable establishment/growth\",\n      \"Reliable Establishment/Growth\",\n      \"Standard Spring Seeding Rate Date\",\n    ],\n    \"March, Mid\": [\n      \"Reliable establishment/growth\",\n      \"Reliable Establishment/Growth\",\n      \"Reliable Establishment/Growth\",\n      \"Standard Spring Seeding Rate Date\",\n      \"Standard Spring Seeding Rate Date\",\n    ],\n    \"April, Early\": [\n      \"Reliable establishment/growth\",\n      \"Reliable Establishment/Growth\",\n      \"Standard Spring Seeding Rate Date\",\n    ],\n    \"April, Mid\": [\n      \"Reliable establishment/growth\",\n      \"Reliable Establishment/Growth\",\n      \"Standard Spring Seeding Rate Date\",\n    ],\n    \"May, Early\": [\n      \"Reliable establishment/growth\",\n      \"Reliable Establishment/Growth\",\n      \"Standard Spring Seeding Rate Date\",\n    ],\n    \"May, Mid\": [\"Reliable establishment/growth\"],\n    \"August, Early\": [\"Reliable establishment/growth\", \"Early seeding rate\"],\n    \"August, Mid\": [\"Reliable establishment/growth\", \"Standard seeding rate\"],\n    \"September, Early\": [\"Reliable establishment/growth\", \"Late seeding rate\"],\n    \"September, Mid\": [\"Reliable establishment/growth\"],\n    \"Prevent Fall Soil Erosion\": 1,\n    \"Prevent Spring Soil Erosion\": 3,\n    \"Promote Water Quality\": 1,\n    \"Nitrogen Fixation\": 3,\n    \"Nitrogen Scavenging\": 1,\n    \"Good Grazing\": 3,\n    \"Forage Harvest Value\": 4,\n    \"C to N Ratio - 3 stars\": 1,\n    \"Residue Suppresses Summer Annual Weeds\": 2,\n    \"Outcompetes Summer Annual Weeds\": 3,\n    \"Disoucrages Nematodes\": 2,\n    \"Promotes Nematodes\": 3,\n    \"Discourages Pest Insects\": 2,\n    \"Promotes Pest Insects\": 1,\n    \"Notes: Disease & Non-Weed Pests\":\n      \"Information too limited to rate P and K effect. Some cultivars, nematode resistant. Poor host for soybean cyst nematode. With late planting,  biomass is low and spring pea won't suppress winter weeds. Good cool season component for grazing mixes. Quick cool season nitrogen fixer. Susceptible to sclerotinia in East;  Late planting increases heaving. Host for root knot nematode, Penetrans Root-Lesion Nematode and sugarbeet cyst nematode.  Weak plant with low volunteer seed survivability.\",\n    \"Suppresses Cash Crop Disease\": 2,\n    \"Promotes Cash Crop Disease\": 1,\n    \"Early Spring Seeding Rate Date Start\": \"2020-02-15\",\n    \"Early Spring Seeding Rate Date End\": \"2020-07-15\",\n    \"Standard Spring Seeding Rate Date Start\": \"2020-02-15\",\n    \"Standard Spring Seeding Rate Date End\": \"2020-05-15\",\n    \"Suppresses Winter Annual Weeds\": 2,\n    Notes:\n      \"Best mixed with cereals to prevent lodging. Less competitive against summer annual weeds in hot-summer areas (such as Contintental hardiness zone 6).\",\n    \"Reliable Establishment/Growth Start\": \"2020-02-15\",\n    \"Reliable Establishment/Growth End\": \"2020-05-15\",\n    \"Notes: Pollinators\":\n      \"Self-pollinated so not particularly useful for pollinators compared to other legumes\",\n    \"Notes: Nematodes\":\n      \"Some cultivars, nematode resistant. Poor host for soybean cyst nematode.  Host for root knot nematode, Penetrans Root-Lesion Nematode and sugarbeet cyst nematode. \",\n    __id: \"rec1KNI87iZslbLy2\",\n    \"February, Early\": [\n      \"Reliable Establishment/Growth\",\n      \"Standard Spring Seeding Rate Date\",\n    ],\n    \"Image Data\": {\n      \"Cover Crop\": \"Pea, Spring\",\n      \"Key Thumbnail\": \"Spring_pea_flowering_Brown_2020.JPG\",\n      Notes: null,\n      Directory: \"Pea, Spring\",\n    },\n    \"Crop Description\":\n      \"Also known as Yellow Pea or Canadian Spring Pea. Winter-kills if planted in fall. Excellent spring cover crop. Plant early for lush growth; fast-growing varieties are available. Inoculate the seed with appropriate Rhizobium spp. Cross inoculates vetch. Mixes well with spring oat, forage radish. Lower biomass and total N fixation compared to overwintered peas.\",\n    \"Discourages Nematodes\": 2,\n    id: \"rec1KNI87iZslbLy2\",\n    Drought: 3,\n    Flood: 2,\n    Heat: 3,\n    \"Low Fertility\": 4,\n    Salinity: 1,\n    Shade: 2,\n    \"Tillage at Vegetative\": 4,\n    \"Tillage at Flowering\": 4,\n    \"Freezing at Flowering\": 5,\n    \"Freezing at Vegetative\": 2,\n    \"Chemical at Vegetative\": 5,\n    \"Chemical at Flowering\": 5,\n    \"Mow at Flowering\": 5,\n    \"Roller Crimp at Flowering\": 3,\n    \"Frost Seeding\": -999,\n    \"Aerial Seeding\": -999,\n  };\n};\n","/*\n  Contains the data listed in InformationSheetContent\n  RenderCats renders the categories\n*/\n\nimport { Typography } from \"@material-ui/core\";\nimport React, { useEffect, useMemo, useState, Fragment } from \"react\";\n\nconst DictionaryContent = ({ dictData = [{}], from = \"\" }) => {\n  const [groupedCats, setGroupedCats] = useState({});\n\n  const groupBy = (arr, property) => {\n    return arr.reduce((acc, cur) => {\n      acc[cur[property]] = [...(acc[cur[property]] || []), cur];\n      return acc;\n    }, {});\n  };\n\n  const allCats = useMemo(() => {\n    return dictData.filter(\n      (dict) =>\n        dict[\"Information Sheet\"] === true || dict[\"Infromation Sheet\"] === true\n    );\n  }, [dictData]);\n\n  useEffect(() => {\n    const groupedCategories = groupBy(allCats, \"Category\");\n    setGroupedCats(groupedCategories);\n  }, [allCats]);\n\n  const RenderCats = () => {\n    return Object.keys(groupedCats).map((key, index) => (\n      <div className=\"row col-12\" key={index}>\n        <div className=\"col-12\">\n          <Typography\n            variant=\"h6\"\n            style={\n              from === \"help\"\n                ? { border: \"0px\", borderBottom: \"1px solid gray\" }\n                : {}\n            }\n          >\n            {key}\n          </Typography>\n        </div>\n        {groupedCats[key].map((innerCat, index2) => {\n          if (from === \"help\") {\n            if (!innerCat[\"Variable\"].startsWith(\"Notes\")) {\n              return (\n                <div className=\"col-6\" key={index2}>\n                  <Typography variant=\"body1\" className=\"p-3\">\n                    <b>{innerCat[\"Variable\"]}:</b> {innerCat[\"Description\"]}\n                  </Typography>\n                </div>\n              );\n            } else return <Fragment />;\n          } else {\n            return (\n              <div className=\"col-6\" key={index2}>\n                <Typography variant=\"body1\" className=\"p-3\">\n                  <b>{innerCat[\"Variable\"]}:</b> {innerCat[\"Description\"]}\n                </Typography>\n              </div>\n            );\n          }\n        })}\n      </div>\n    ));\n\n    // return catOptions;\n  };\n\n  return (\n    <div\n      className={`row ${from === \"help\" ? `` : `dictionaryContentWrapper p-4`}`}\n    >\n      {Object.keys(groupedCats).length > 0 ? <RenderCats /> : \"\"}\n    </div>\n  );\n};\n\nexport default DictionaryContent;\n","/*\n  Static component listed in help page\n  fetches data from DictionaryContent\n*/\n\nimport { Typography } from \"@material-ui/core\";\nimport { Info } from \"@material-ui/icons\";\nimport React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport z4Dict from \"../../shared/json/zone4/data-dictionary.json\";\nimport z5Dict from \"../../shared/json/zone5/data-dictionary.json\";\nimport z6Dict from \"../../shared/json/zone6/data-dictionary.json\";\nimport z7Dict from \"../../shared/json/zone7/data-dictionary.json\";\nimport { Context } from \"../../store/Store\";\nimport DictionaryContent from \"./DictionaryContent\";\n\nconst InformationSheetDictionary = (props) => {\n  const [dictionary, setDictionary] = useState([]);\n  const {state} = useContext(Context);\n  const section  = window.location.href.includes('selector') ? 'selector' : 'explorer';\n  const sfilters = state[section];\n\n  const zone = props.zone ? props.zone : sfilters.zone;\n\n  useEffect(() => {\n    document.title = \"Data Dictionary\";\n    switch (parseInt(zone)) {\n      case 7: {\n        setDictionary(z7Dict);\n        break;\n      }\n      case 6: {\n        setDictionary(z6Dict);\n        break;\n      }\n      case 5: {\n        setDictionary(z5Dict);\n        break;\n      }\n      case 4: {\n        setDictionary(z4Dict);\n        break;\n      }\n      default: {\n        setDictionary(z7Dict);\n        break;\n      }\n    }\n  }, [zone]);\n\n  return props.from === \"help\" ? (\n    <DictionaryContent dictData={dictionary} from=\"help\" />\n  ) : (\n    <Fragment>\n      <div className=\"row pt-4\">\n        <div\n          className=\"col-12\"\n          style={{\n            backgroundColor: \"rgb(43, 123, 121)\",\n            height: \"50px\",\n            borderTopLeftRadius: \"20px\",\n            borderTopRightRadius: \"20px\",\n          }}\n        ></div>\n      </div>\n      <div className=\"row mt-4 p-3\">\n        <div className=\" col-12\">\n          <Typography variant=\"h4\">Information Sheet Dictionary</Typography>\n        </div>\n        <div className=\"col-12\">\n          <Typography variant=\"body2\">\n            <Info style={{ color: \"rgb(43, 123, 121)\" }} /> &nbsp; These terms\n            and definitions are based on expert opinion\n          </Typography>\n        </div>\n      </div>\n      <hr />\n\n      <DictionaryContent dictData={dictionary} />\n    </Fragment>\n  );\n};\n\nexport default InformationSheetDictionary;\n","/*\n  This file contains the HelpComponent, helper functions, and styles\n  The HelpComponent is a static  help page that has FAQ, how to use, data dictionary, and information sheets\n  RenderContent contains all the text listed in the about section\n  styled using CustomStyles from ../../shared/constants\n*/\n\nimport { Button, Typography } from \"@material-ui/core\";\nimport React, { Fragment, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CustomStyles } from \"../../shared/constants\";\nimport Header from \"../Header/Header\";\nimport InformationSheetDictionary from \"../InformationSheet/InformationSheetDictionary\";\nimport ReactGA from \"react-ga\";\nimport { Context } from \"../../store/Store\";\n\nconst HelpComponent = () => {\n  const {state} = useContext(Context);\n\n  useEffect(() => {\n    document.title = \"Help Page\";\n  }, []);\n\n  useEffect(() => {\n    console.log(\"viewing help\");\n    if (state.consent === true) {\n      console.log(\"initializing react-ga\");\n      ReactGA.initialize(\"UA-181903489-1\");\n\n      ReactGA.pageview(\"help\");\n    }\n  }, [state.consent]);\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <div className=\"contentWrapper\">\n      <Header />\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row boxContainerRow\" style={{ minHeight: \"520px\" }}>\n          <div className=\"col-12 row\">\n            <div className=\"col-lg-4 col-12 px-0\">\n              <div\n                className=\"d-flex flex-column pb-2\"\n                style={{\n                  border: `1px solid ${CustomStyles().darkGreen}`,\n                  borderRight: \"0px\",\n                }}\n              >\n                <Button\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => handleChange(0)}\n                  variant={value === 0 ? `contained` : `text`}\n                  color={value === 0 ? `secondary` : `default`}\n                >\n                  How to Use the NECCC Species Selector Tool\n                </Button>\n                <Button\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => handleChange(1)}\n                  variant={value === 1 ? `contained` : `text`}\n                  color={value === 1 ? `secondary` : `default`}\n                >\n                  Frequently Asked Questions\n                </Button>\n                <Button\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => handleChange(2)}\n                  variant={value === 2 ? `contained` : `text`}\n                  color={value === 2 ? `secondary` : `default`}\n                >\n                  Data Dictionary\n                </Button>\n                <Button\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => handleChange(3)}\n                  variant={value === 3 ? `contained` : `text`}\n                  color={value === 3 ? `secondary` : `default`}\n                >\n                  Information Sheets\n                </Button>\n              </div>\n            </div>\n            <div\n              className=\"col-lg-8 col-12 p-2\"\n              style={{\n                overflow: \"hidden\",\n                border: `1px solid ${CustomStyles().darkGreen}`,\n              }}\n            >\n              <div>\n                <RenderContent value={value} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelpComponent;\n\nconst RenderContent = ({ value = 0 }) => {\n  switch (value) {\n    case 0:\n      return (\n        <Fragment>\n          <Typography variant=\"h4\" gutterBottom>\n            How to Use The Tool\n          </Typography>\n          <Typography component=\"div\" variant=\"body1\" align=\"left\" gutterBottom>\n            <iframe\n              src=\"https://docs.google.com/presentation/d/e/2PACX-1vQbP5BcX8_u7bEfHjmAyUoSGeO3yVJkwbEveqSCh2xMn2M_f_EFp6kTi_5kvtp4S7zLITHXdkHEftPC/embed?start=false&loop=false&delayms=60000\"\n              frameBorder=\"0\"\n              width=\"100%\"\n              height=\"474\"\n              allowFullScreen={true}\n              mozallowfullscreen=\"true\"\n              webkitallowfullscreen=\"true\"\n              title=\"iframe\"\n            ></iframe>\n          </Typography>\n          <Typography component=\"div\" variant=\"body1\" align=\"left\">\n            <ol>\n              <li className=\"font-weight-bold\">\n                Start with the Species Selector Wizard\n              </li>\n              <ul className=\"pb-3\">\n                <li>Define your location:</li>\n                <ul>\n                  <li>\n                    Enter your location so we can identify your zone and pin\n                    your location on the map. Please note that we do not store\n                    your data, meaning that once you leave our website, your\n                    instance closes, and any data you provided is not retained.\n                  </li>\n                  <li>\n                    Draw an outline of the field you plan to cover crop so we\n                    can auto populate your local soils and weather data.\n                  </li>\n                </ul>\n                <li>Refine your soils data:</li>\n                <ul>\n                  <li>\n                    Review your local soils data, populated from the NRCS Web\n                    Soil Survey, or provide your own data if you did not draw an\n                    outline of your field.\n                  </li>\n                  <li>\n                    Specify if you have tiling -- tiling will affect your\n                    drainage class.\n                  </li>\n                  <li>Your soils data is used to filter your results.</li>\n                </ul>\n                <li>Refine your weather data:</li>\n                <ul>\n                  <li>\n                    Review your local weather data, populated from the Precision\n                    Sustainable Agriculture Weather API, or provide your own\n                    data if you did not specify a location.\n                  </li>\n                  <li>\n                    At this time, we are not using your historical weather data\n                    to filter results. We ask you to specify your weather data\n                    so that it is fresh in your mind when you choose your cover\n                    crops. Cover crop performance in this tool is based on an\n                    \"average\" year. Performance in years that are notably\n                    hotter, colder, wetter, drier, or combinations thereof may\n                    vary.\n                  </li>\n                </ul>\n                <li>Choose your goals</li>\n                <ul>\n                  <li>\n                    Specify up to three cover cropping goals in order of\n                    priority.\n                  </li>\n                  <li>\n                    The list of recommended cover crop species will be filtered\n                    based on these goals.\n                  </li>\n                </ul>\n              </ul>\n              <li className=\"font-weight-bold\">\n                Add cover crops to My Cover Crop List\n              </li>\n              <ul className=\"pb-3\">\n                <li>\n                  Filter your results by additional requirements, if desired\n                </li>\n                <li>\n                  Look at the calendar view for details on planting dates on\n                  active growth periods.\n                </li>\n                <li>\n                  Click “View Details” to review all of our data on the cover\n                  crop of interest.\n                </li>\n                <li>\n                  If the cover crop is one you would like to consider, add it to\n                  your cover crop list.\n                </li>\n              </ul>\n              <li className=\"font-weight-bold\">\n                Download spreadsheets or PDFs of your cover crops\n              </li>\n              <ul className=\"pb-3\">\n                <li>\n                  View your cover crop list to remove cover crops or download a\n                  PDF or spreadsheet of the cover crop list you have curated.\n                </li>\n              </ul>\n              <li className=\"font-weight-bold\">Visit the Explorer</li>\n              <ul className=\"pb-3\">\n                <li>\n                  At any point in your experience you can use the Explorer to\n                  filter through and search for any cover crop in our data set.\n                </li>\n                <li>\n                  You need to specify a{\" \"}\n                  <a\n                    href=\"https://planthardiness.ars.usda.gov/PHZMWeb/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    hardiness zone\n                  </a>{\" \"}\n                  to use the Explorer.\n                </li>\n              </ul>\n            </ol>\n          </Typography>\n        </Fragment>\n      );\n\n    case 1:\n      return (\n        <Fragment>\n          <Typography variant=\"h4\" gutterBottom>\n            Frequently Asked Questions\n          </Typography>\n          <Typography component=\"div\" variant=\"body1\" align=\"left\">\n            <ol>\n              <li className=\"font-weight-bold\">\n                What is the difference between dormant and non-dormant alfalfa?\n              </li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  “Dormant” alfalfa varieties are those traditionally grown as\n                  perennials in northern climates; they have varying degrees of\n                  cold hardiness but would generally be expected to survive the\n                  winter. “Non dormant” alfalfa varieties are far less strongly\n                  perennial in cold climates due to lower levels of cold\n                  hardiness. There are some differences in growth pattern and\n                  forage quality between the two groups, as well. Non-dormant\n                  varieties produce more biomass in the first year than dormant\n                  varieties.\n                </li>\n              </ul>\n              <li className=\"font-weight-bold\">What is a “forage brassica”?</li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  Many forage brassicas are hybrids of B. oleracea and B. napus.\n                  (i.e. kale, rapeseed, turnip). Some are bred for their leaf\n                  production, others for their roots. Be aware of what you are\n                  buying depending on your needs.\n                </li>\n              </ul>\n\n              <li className=\"font-weight-bold\">\n                What is the difference between a forage, daikon, tillage, and\n                oilseed radish?\n              </li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  Radishes have been bred for many purposes, including (human)\n                  food, (animal) feed and forage, and ability to improve soil\n                  structure. Confusion as to naming abounds, and is worsened by\n                  the fact that the various types of radish readily interbreed.\n                  Cover crop radishes are generally referred to as daikon-type\n                  radishes (as opposed to the globe-shaped radishes that feature\n                  in salads). According to Extension resources, ‘Tillage’ radish\n                  is actually a specific brand of radish bred to be a cover\n                  crop. Oilseed radishes have smaller, more branching roots than\n                  forage radishes. Be aware of what you are buying depending on\n                  your needs.\n                </li>\n              </ul>\n\n              <li className=\"font-weight-bold\">\n                What is the difference between a forage turnip vs ‘Purple Top’\n                turnip?\n              </li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  Forage turnips have been bred for use as animal feed (i.e.\n                  large tonnage per acre), as opposed to ‘Purple Top’ and\n                  similar cultivars traditionally grown for human food (i.e.\n                  bulb production). Seed costs vary widely. Be aware of what you\n                  are buying depending on your needs.\n                </li>\n              </ul>\n\n              <li className=\"font-weight-bold\">\n                What do you mean by “mustard”?\n              </li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  Our tool groups several species under the term “mustard”,\n                  including Sinapis alba (white mustard) and Brassica juncea\n                  (brown, Oriental, or Indian mustard). We include notes in the\n                  comments/notes sections on the information sheet where there\n                  are differences in characteristics or uses among the species.\n                </li>\n              </ul>\n\n              <li className=\"font-weight-bold\">\n                What’s the difference between canola and rapeseed?\n              </li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  In practice for cover croppers, not much. Some rapeseed was\n                  bred to have lower levels of compounds not good for human\n                  consumption, making it better for the production of cooking\n                  oil. The varieties good for the production of oil for human\n                  consumption are referred to as “canola”. Canola seed is\n                  generally more expensive than rapeseed seed.\n                </li>\n              </ul>\n\n              <li className=\"font-weight-bold\">\n                What is the difference between “winter” and “spring” small\n                grains?\n              </li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  We are referring to germplasm type. For example, “winter”\n                  wheat varieties are those that would be expected to usually\n                  survive winter and require vernalization (i.e. cold) to\n                  trigger flowering. “Spring” wheat varieties are much less cold\n                  hardy and do not require vernalization to flower.\n                </li>\n              </ul>\n\n              <li className=\"font-weight-bold\">\n                Can spring small grains be planted in fall and vice versa? Why\n                would you do so?\n              </li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  Winter small grain cultivars can be planted in spring, but\n                  they won't flower (which may be useful since they don't get as\n                  tall and are good for a low-growing ground cover). Likewise,\n                  spring small grains may be planted in the fall (and will\n                  therefore likely winter-kill, preventing the need for spring\n                  termination).\n                </li>\n              </ul>\n\n              <li className=\"font-weight-bold\">\n                Why do ratings for a given cover crop vary by hardiness zone?\n              </li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  USDA hardiness zones are based on average minimum temperatures\n                  and are a simple proxy for the length of the growing season\n                  across the Northeast US. Ratings differ because these climatic\n                  features affect planting dates, crop management, and plant\n                  growth.\n                </li>\n                <li>\n                  In addition, the experts in each zone sometimes have\n                  differences in experience with the cover crop; a cover crop\n                  may be more commonly used in a vegetable rotation in one zone\n                  and an agronomic rotation in another one, with corresponding\n                  differences in traits due to the way they are used.\n                </li>\n              </ul>\n\n              <li className=\"font-weight-bold\">\n                I’m applying fall manure and want a cover crop to take up the N\n                and prevent P runoff. What should I use?\n              </li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  Choose a cover crop ranked high for the goals of “nitrogen\n                  scavenging”, “prevent fall erosion”, and “prevent spring\n                  erosion”.\n                </li>\n              </ul>\n\n              <li className=\"font-weight-bold\">\n                I want a cover crop that can prevent soil crusting. What should\n                I use?\n              </li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  Pick a cover crop that is either alive during the time period\n                  of concern or has a good rating for “lasting residue” and that\n                  has a good rating for “soil aggregation” and “reduces topsoil\n                  compaction”.\n                </li>\n              </ul>\n\n              <li className=\"font-weight-bold\">\n                I am interested in a recommendation based on a goal you do not\n                have in your tool. What can I do?\n              </li>\n              <ul className=\"list-unstyled pl-4 pb-4\">\n                <li>\n                  Consider what existing goals and rated traits make up the goal\n                  you are interested in.\n                </li>\n                <li>\n                  <Link to=\"/feedback\">Send us feedback!</Link> Let us know.\n                </li>\n              </ul>\n            </ol>\n          </Typography>\n        </Fragment>\n      );\n\n    case 2:\n      return (\n        <div className=\"text-left pl-4\">\n          <Typography variant=\"h4\" gutterBottom align=\"center\">\n            Data Dictionary\n          </Typography>\n          <InformationSheetDictionary zone={6} from=\"help\" />\n        </div>\n      );\n    case 3:\n      return (\n        <Fragment>\n          <Typography variant=\"h4\" gutterBottom align=\"center\">\n            Information Sheets\n          </Typography>\n          <Typography component=\"div\" variant=\"body1\" align=\"left\">\n            <ol>\n              <li className=\"font-weight-bold\">Cover Crops and Pollinators</li>\n              <ul className=\"pb-4\">\n                <li>\n                  Using Flowering Cover Crops for Native Pollinating Bee\n                  Conservation, Penn State Extension,\n                  <br />\n                  <a\n                    href=\"https://extension.psu.edu/using-flowering-cover-crops-for-native-pollinating-bee-conservation\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    https://extension.psu.edu/using-flowering-cover-crops-for-native-pollinating-bee-conservation\n                  </a>\n                </li>\n                <li>\n                  Conservation Cover for Pollinators, Xerces Society for\n                  Invertebrate Conservation,\n                  <br />\n                  <a\n                    href=\"http://northeastcovercrops.com/wp-content/uploads/2018/03/Conservation-Cover-for-Pollinators.pdf\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    http://northeastcovercrops.com/wp-content/uploads/2018/03/Conservation-Cover-for-Pollinators.pdf\n                  </a>\n                </li>\n                <li>\n                  Planting Flowers For Bees in Connecticut, Connecticut\n                  Agricultural Experiment Station,\n                  <br />\n                  <a\n                    href=\"http://northeastcovercrops.com/wp-content/uploads/2018/03/Planting-Flowers-For-Bees-in-Connecticut.pdf\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    http://northeastcovercrops.com/wp-content/uploads/2018/03/Planting-Flowers-For-Bees-in-Connecticut.pdf\n                  </a>\n                </li>\n                <li>\n                  Use of Cover Crops and Green Manures to Attract Beneficial\n                  Insects, University of Connecticut Integrated Pest Management\n                  Program,\n                  <br />\n                  <a\n                    href=\"http://ipm.uconn.edu/documents/raw2/Use%20of%20Cover%20Crops%20and%20Green%20Manures%20to%20Attract%20Beneficial%20Insects/Use%20of%20Cover%20Crops%20and%20Green%20Manures%20to%20Attract%20Beneficial%20Insects.php?display=print\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    http://ipm.uconn.edu/documents/raw2/Use%20of%20Cover%20Crops%20and%20Green%20Manures%20to%20Attract%20Beneficial%20Insects/Use%20of%20Cover%20Crops%20and%20Green%20Manures%20to%20Attract%20Beneficial%20Insects.php?display=print\n                  </a>\n                </li>\n              </ul>\n              <li className=\"font-weight-bold\">\n                Cover Crops for Weed Suppression\n              </li>\n              <ul className=\"pb-4\">\n                <li>\n                  Suppressing Weeds Using Cover Crops in Pennsylvania, Penn\n                  State Extension,\n                  <br />\n                  <a\n                    href=\"http://northeastcovercrops.com/wp-content/uploads/2018/04/Suppressing-Weeds-Using-Cover-Crops-in-Pennsylvania.pdf\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    http://northeastcovercrops.com/wp-content/uploads/2018/04/Suppressing-Weeds-Using-Cover-Crops-in-Pennsylvania.pdf\n                  </a>\n                </li>\n                <li>\n                  Cover Crops as a Weed Management Tool, Getting Rid of Weeds,\n                  <br />\n                  <a\n                    href=\"https://growiwm.org/cover-crops\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    https://growiwm.org/cover-crops\n                  </a>\n                </li>\n              </ul>\n              <li className=\"font-weight-bold\">\n                Cover Cropping in Fruit, Vegetable, or Perennial Systems\n              </li>\n              <ul className=\"pb-4\">\n                <li>\n                  Between Two Rows: Cover Crops for Perennial Plants, NH\n                  Vegetable and Fruit News,\n                  <br />\n                  <a\n                    href=\"https://nhvegfruitnews.wordpress.com/2016/06/27/between-two-rows-cover-crops-for-perennial-plants/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    https://nhvegfruitnews.wordpress.com/2016/06/27/between-two-rows-cover-crops-for-perennial-plants/\n                  </a>\n                </li>\n                <li>\n                  Spring Planted Cover Crops for Vegetable Rotations, University\n                  of Delaware Cooperative Extension,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://extension.udel.edu/weeklycropupdate/?p=9950\"\n                  >\n                    https://extension.udel.edu/weeklycropupdate/?p=9950\n                  </a>\n                </li>\n                <li>\n                  Cover Crops and Green Manures (New England Vegetable\n                  Management Guide), University of Massachusetts Amherst,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://nevegetable.org/cultural-practices/cover-crops-and-green-manures\"\n                  >\n                    https://nevegetable.org/cultural-practices/cover-crops-and-green-manures\n                  </a>\n                </li>\n              </ul>\n              <li className=\"font-weight-bold\">Cover Crop Planting</li>\n              <ul className=\"pb-4\">\n                <li>\n                  NH 340 Cover Crop Planting Specification Guide, USDA NRCS,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"http://northeastcovercrops.com/wp-content/uploads/2018/03/NH-340-Cover-Crop-Planting-Specification-Guide-2.pdf\"\n                  >\n                    http://northeastcovercrops.com/wp-content/uploads/2018/03/NH-340-Cover-Crop-Planting-Specification-Guide-2.pdf\n                  </a>\n                </li>\n                <li>\n                  Tips for Interseeding Cover Crops, University of Vermont\n                  Extension,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"http://northeastcovercrops.com/wp-content/uploads/2018/02/Tips-for-Interseeding-Cover-Crops.pdf\"\n                  >\n                    http://northeastcovercrops.com/wp-content/uploads/2018/02/Tips-for-Interseeding-Cover-Crops.pdf\n                  </a>\n                </li>\n                <li>\n                  Aerial Seeding Helps Farmers Plant Cover Crops in the\n                  Northeast, Lancaster Farming,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"http://www.lancasterfarming.com/news/northern_edition/aerial-seeding-helps-farmers-plant-cover-crops-in-northeast/article_1d4fbe53-e72e-5c37-ae24-98ce2ca8b2bb.html\"\n                  >\n                    http://www.lancasterfarming.com/news/northern_edition/aerial-seeding-helps-farmers-plant-cover-crops-in-northeast/article_1d4fbe53-e72e-5c37-ae24-98ce2ca8b2bb.html\n                  </a>\n                </li>\n              </ul>\n              <li className=\"font-weight-bold\">\n                Cover Crops and Herbicide Carryover\n              </li>\n              <ul className=\"pb-4\">\n                <li>\n                  Cover Crop Interseeder – Potential for Injury from Corn\n                  Herbicides, Penn State Extension,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"http://northeastcovercrops.com/wp-content/uploads/2018/04/Cover-Crop-Interseeder-Potential-for-Injury-from-Corn-Herbicides.pdf\"\n                  >\n                    http://northeastcovercrops.com/wp-content/uploads/2018/04/Cover-Crop-Interseeder-Potential-for-Injury-from-Corn-Herbicides.pdf\n                  </a>\n                </li>\n                <li>\n                  Herbicides Persistence and Rotation to Cover Crops, Penn State\n                  Extension,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://extension.psu.edu/herbicides-persistence-and-rotation-to-cover-crops\"\n                  >\n                    https://extension.psu.edu/herbicides-persistence-and-rotation-to-cover-crops\n                  </a>\n                </li>\n                <li>\n                  Herbicide Considerations for Cover and Forage Crops, Penn\n                  State Extension,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://extension.psu.edu/herbicide-considerations-for-cover-and-forage-crops\"\n                  >\n                    https://extension.psu.edu/herbicide-considerations-for-cover-and-forage-crops\n                  </a>\n                </li>\n              </ul>\n              <li className=\"font-weight-bold\">Cover Crop Termination</li>\n              <ul className=\"pb-4\">\n                <li>\n                  Special Cover Crop Control Considerations, Penn State\n                  Extension,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://extension.psu.edu/special-cover-crop-control-considerations\"\n                  >\n                    https://extension.psu.edu/special-cover-crop-control-considerations\n                  </a>\n                </li>\n                <li>\n                  Cover Crop Rollers for Northeastern Grain Production, Penn\n                  State Extension,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://extension.psu.edu/cover-crop-rollers-for-northeastern-grain-production\"\n                  >\n                    https://extension.psu.edu/cover-crop-rollers-for-northeastern-grain-production\n                  </a>\n                </li>\n                <li>\n                  Cover Crop Termination Options, Getting Rid of Weeds,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://growiwm.org/cover-crop-termination-options/\"\n                  >\n                    https://growiwm.org/cover-crop-termination-options/\n                  </a>\n                </li>\n              </ul>\n              <li className=\"font-weight-bold\">Planting Green</li>\n              <ul className=\"pb-4\">\n                <li>\n                  Planting Green – A New Cover Crop Management Technique, Penn\n                  State Extension,\n                  <br />\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://extension.psu.edu/planting-green-a-new-cover-crop-management-technique\"\n                  >\n                    https://extension.psu.edu/planting-green-a-new-cover-crop-management-technique\n                  </a>\n                </li>\n              </ul>\n            </ol>\n          </Typography>\n        </Fragment>\n      );\n    default: {\n      return <div></div>;\n    }\n  }\n};\n","/*\n  This file contains the FeedbackComponent component, helper functions\n  The FeedbackComponent page is a static page that shows an airtable form\n*/\n\nimport React, { useEffect, useContext } from \"react\";\nimport Header from \"../Header/Header\";\nimport ReactGA from \"react-ga\";\nimport { Context } from \"../../store/Store\";\n\nconst FeedbackComponent = () => {\n  const {state} = useContext(Context);\n\n  useEffect(() => {\n    console.log(\"viewing feedback\");\n    if (state.consent === true) {\n      console.log(\"initializing react-ga\");\n      ReactGA.initialize(\"UA-181903489-1\");\n\n      ReactGA.pageview(\"feedback\");\n    }\n  }, [state.consent]);\n\n  useEffect(() => {\n    document.title = \"Feedback\";\n  }, []);\n  return (\n    <div className=\"contentWrapper\">\n      <Header />\n      <div className=\"container-fluid pt-4\" style={{ minHeight: \"70vh\" }}>\n        <div\n          className=\"mx-auto d-flex justify-content-center align-center\"\n          style={{ width: \"80%\", minHeight: \"600px\", alignItems: \"center\" }}\n        >\n          <iframe\n            className=\"airtable-embed\"\n            src=\"https://airtable.com/embed/shr1UBoR7bqCbNhvW?backgroundColor=yellow\"\n            frameBorder=\"0\"\n            title=\"iframe\"\n            style={{\n              background: \"transparent\",\n              border: \"1px solid #ccc\",\n              width: \"100%\",\n              height: \"733px\",\n            }}\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FeedbackComponent;\n","/* \n  Top level wrapper for the cover crop list\n  Contains the CoverCropList component and the CropSidebar component\n*/\n\nimport { Box } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport CropSidebarComponent from \"../CropSelector/CropSidebar\";\nimport Header from \"../Header/Header\";\nimport MyCoverCropList from \"./MyCoverCropList\";\n\nconst MyCoverCropListWrapper = (props) => {\n  const [comparisonView, setComparisonView] = useState(false);\n  const toggleComparisonView = () => {\n    setComparisonView(!comparisonView);\n  };\n  return (\n    <Box>\n      <Header />\n\n      <div className=\"container-fluid mt-2\">\n        <div className=\"row\">\n          <div className=\"col-sm-12  col-md-2\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <CropSidebarComponent\n                  comparisonView={comparisonView}\n                  toggleComparisonView={toggleComparisonView}\n                  from={\"myCoverCropListStatic\"}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-12 col-md-10\">\n            <MyCoverCropList\n              from={\"myCoverCropListStatic\"}\n              comparisonView={comparisonView}\n            />\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n};\n\nexport default MyCoverCropListWrapper;\n","/*\n  This file contains the AgInformaticsLicenseText component, helper functions, and styles\n  The AgInformaticsLicenseText page contains the Agriculture Informatics license text\n*/\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst AgInformaticsLicenseText = ({\n  styles = true,\n  aboutPage = false,\n  footerPage = false,\n}) => {\n  const currentYear = new Date().getFullYear();\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        {footerPage ? (\n          <Typography variant=\"body2\">\n            Copyright © {currentYear}{\" \"}\n            <a\n              href=\"http://northeastcovercrops.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Northeast Cover Crop Council\n            </a>\n            ,{\" \"}\n            <a\n              href=\"http://aginformaticslab.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Agricultural Informatics Lab\n            </a>\n          </Typography>\n        ) : (\n          <Typography variant={footerPage ? \"body2\" : \"body1\"} gutterBottom>\n            Copyright © {currentYear} Agricultural Informatics Lab, &nbsp;\n            <a\n              href=\"http://aginformaticslab.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              aginformaticslab.org\n            </a>\n          </Typography>\n        )}\n      </Grid>\n      {!footerPage ? (\n        aboutPage ? (\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              This is free software; all of the software, documentation, and\n              data files and their contents, is licensed under the terms of MIT\n              License, with the exception of the copyright protected cover crop\n              images. You may use, copy, modify and redistribute all files\n              included in this distribution, individually or in aggregate,\n              subject to the terms and conditions of the MIT license. See{\" \"}\n              <Link to={\"/ag-informatics-license\"}>License</Link> for details.\n            </Typography>\n          </Grid>\n        ) : (\n          <Grid item xs={styles ? 6 : 12}>\n            <Grid container spacing={2}>\n              <Grid item>\n                <Typography variant=\"body1\">\n                  Permission is hereby granted, free of charge, to any person\n                  obtaining a copy of this software and associated documentation\n                  files (the “Software”), to deal in the Software without\n                  restriction, including without limitation the rights to use,\n                  copy, modify, merge, publish, distribute, sublicense, and/or\n                  sell copies of the Software, and to permit persons to whom the\n                  Software is furnished to do so, subject to the following\n                  conditions: The above copyright notice and this permission\n                  notice shall be included in all copies or substantial portions\n                  of the Software.\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"body1\">\n                  THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY\n                  KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\n                  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\n                  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n                  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n                  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                  OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n                  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        )\n      ) : (\n        \"\"\n      )}\n    </Grid>\n  );\n};\n\nexport default AgInformaticsLicenseText;\n","/*\n  This file contains the License component, helper functions\n  The License page contains the license which is made of the MIT license text and Agriculture Informatics license\n*/\n\nimport { Grid } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport Header from \"../Header/Header\";\nimport AgInformaticsLicenseText from \"./AgInformaticsLicenseText\";\nimport MITLicenseText from \"./MITLicenseText\";\n\nconst License = ({ licenseType = \"MIT\" }) => {\n  useEffect(() => {\n    switch (licenseType) {\n      case \"MIT\":\n        document.title = \"MIT License\";\n        break;\n      case \"AgInformatics\":\n        document.title = \"AgInformatics License\";\n        break;\n      default:\n        document.title = \"MIT License\";\n        break;\n    }\n  }, [licenseType]);\n  return (\n    <div className=\"contentWrapper\" id=\"mainContentWrapper\">\n      <Header logo=\"neccc_wide_logo_color_web.jpg\" />\n      <div className=\"container-fluid mt-5\">\n        <Grid container>\n          <Grid item>\n            {licenseType === \"AgInformatics\" ? (\n              <AgInformaticsLicenseText />\n            ) : (\n              <MITLicenseText />\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default License;\n"],"sourceRoot":""}