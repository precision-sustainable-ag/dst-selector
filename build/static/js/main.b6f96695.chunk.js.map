{"version":3,"sources":["components/Footer/footer.js","components/Header/dateComponent.js","components/Header/header.js","components/Well/wellComponent.js","components/GreenBar/greenBarComponent.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","footer","position","bottom","backgroundColor","width","height","maxHeight","textButton","surface","Footer","classes","className","Container","maxWidth","Grid","container","alignItems","Box","flexGrow","href","style","color","Link","paddingRight","DateComponent","today","Date","month","n","getMonth","state","date","getDate","getFullYear","this","Component","flexContainer","display","flexDirection","padding","Header","logo","backgroundSize","backgroundImage","props","logoPath","id","direction","item","md","paddingLeft","List","component","ListItem","button","ListItemText","disableTypography","primary","Typography","fontWeight","fontSize","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","LightButton","withStyles","root","borderRadius","Button","WellComponent","myMap","React","createRef","queryGEORevAPI","lat","lon","fetch","method","then","ret","ok","json","data","latlng","display_name","setState","address","addressVerified","addMarker","e","markers","pop","push","console","log","lng","handleSnackClose","snackOpen","snackMessage","handleMapClick","event","long","handleAddressChangeByText","target","value","showAddressChangeBtn","updateAddressOnClick","q","length","zoom","renderProgress","progress","align","justify","backgroundRepeat","margin","textAlign","marginTop","onClick","setWellProgress","GridList","children","cols","cellHeight","boxShadow","GridListTile","noValidate","autoComplete","FormControl","variant","InputLabel","disabled","Select","labelId","onChange","MenuItem","TextField","label","marginLeft","Map","center","minZoom","maxZoom","ref","TileLayer","attribution","url","map","idx","Marker","key","Popup","snackVertical","snackHorizontal","index","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","ContentProps","message","GreenBarComponent","xl","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b6f96695.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Grid,\n  Container,\n  // Button,\n  // List,\n  // ListItem,\n  // ListItemText,\n  // Typography,\n  Link,\n  Box\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import { width } from \"@material-ui/system\";\n// import Helper from \"./helper\";\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    position: `absolute`,\n    bottom: 0,\n    backgroundColor: `#598445`,\n    width: `100%`,\n    height: `5%`,\n    maxHeight: \"5%\"\n  },\n  textButton: {},\n\n  surface: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\"\n  }\n}));\n\nfunction Footer() {\n  const classes = useStyles();\n  // const year = new Date().getFullYear();\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"xl\">\n        <Grid container alignItems=\"center\">\n          <Box flexGrow={1}>\n            <p>\n              Disclaimer: Actual cover crop performance may vary. Consult an{\" \"}\n              <a href=\"http://placehold.it/1000x1000\" style={{ color: \"#fff\" }}>\n                NRCS Extension Educator\n              </a>{\" \"}\n              for detailed guidance.\n            </p>\n          </Box>\n\n          <Box>\n            <Link\n              href=\"https://open-source.org/\"\n              style={{ paddingRight: \"50px\", color: \"#000\" }}\n            >\n              OPEN SOURCE\n            </Link>\n            <Link\n              href=\"https://google.com/\"\n              style={{ paddingRight: \"50px\", color: \"#000\" }}\n            >\n              CONTACT US\n            </Link>\n            <Link\n              href=\"https://google.com\"\n              style={{ paddingRight: \"50px\", color: \"#000\" }}\n            >\n              2019\n            </Link>\n          </Box>\n        </Grid>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { Component } from \"react\";\n\nexport class DateComponent extends Component {\n  constructor() {\n    super();\n\n    var today = new Date();\n\n    var month = [];\n    month[0] = \"January\";\n    month[1] = \"February\";\n    month[2] = \"March\";\n    month[3] = \"April\";\n    month[4] = \"May\";\n    month[5] = \"June\";\n    month[6] = \"July\";\n    month[7] = \"August\";\n    month[8] = \"September\";\n    month[9] = \"October\";\n    month[10] = \"November\";\n    month[11] = \"December\";\n    var n = month[today.getMonth()];\n\n    this.state = {\n      date: `${n} ${today.getDate()}, ${today.getFullYear()}`\n    };\n  }\n\n  render() {\n    return this.state.date;\n  }\n}\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"../../styles/header.css\";\nimport {\n  Container,\n  Typography,\n  Link,\n  List,\n  ListItem,\n  ListItemText\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DateComponent } from \"./dateComponent\";\n\nconst flexContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  padding: 0\n};\n\nclass Header extends Component {\n  render() {\n    const logo = {\n      width: \"100%\",\n      height: \"80px\",\n      backgroundSize: \"cover\",\n      backgroundImage: `url(${this.props.logoPath})`\n    };\n    return (\n      <Container maxWidth=\"xl\">\n        {/* This banner is good for desktop sizes, need something different for mobile, or probably ged rid of the borders */}\n        <div id=\"banner\">\n          <ul>\n            <li>\n              <a href=\"\">ABOUT</a>\n            </li>\n            <li>\n              <a href=\"\">NECCC</a>\n            </li>\n            <li>\n              <a href=\"\">USDA NRCS</a>\n            </li>\n            <li>\n              <a href=\"\">NE SARE</a>\n            </li>\n            <li>\n              <a href=\"\">HELP</a>\n            </li>\n            <li>\n              <a href=\"\">FEEDBACK</a>\n            </li>\n          </ul>\n        </div>\n\n        <Grid container direction=\"row\" alignItems=\"center\">\n          <Grid item md={2} className=\"logoGrid\">\n            <Grid item md={12} style={logo}></Grid>\n          </Grid>\n          <Grid item md={3} className=\"dateGrid\" style={{ paddingLeft: \"1em\" }}>\n            <DateComponent />\n          </Grid>\n        </Grid>\n        <div style={{ height: \"15px\" }}></div>\n        <List component=\"nav\" style={flexContainer}>\n          <ListItem button>\n            <ListItemText\n              disableTypography\n              primary={\n                <Typography style={{ fontWeight: \"bold\", fontSize: \"15pt\" }}>\n                  COVER CROP EXPLORER\n                </Typography>\n              }\n            />\n          </ListItem>\n          <ListItem button>\n            <ListItemText\n              disableTypography\n              primary={\n                <Typography style={{ fontWeight: \"bold\", fontSize: \"15pt\" }}>\n                  SPECIES SELECTOR\n                </Typography>\n              }\n            />\n          </ListItem>\n          <ListItem button>\n            <ListItemText\n              disableTypography\n              primary={\n                <Typography style={{ fontWeight: \"bold\", fontSize: \"15pt\" }}>\n                  MIX MAKER\n                </Typography>\n              }\n            />\n          </ListItem>\n          <ListItem button>\n            <ListItemText\n              disableTypography\n              primary={\n                <Typography style={{ fontWeight: \"bold\", fontSize: \"15pt\" }}>\n                  SEED RATE CALCULATOR\n                </Typography>\n              }\n            />\n          </ListItem>\n          <ListItem button>\n            <ListItemText\n              disableTypography\n              primary={\n                <Typography style={{ fontWeight: \"bold\", fontSize: \"15pt\" }}>\n                  MY COVER CROP LIST\n                </Typography>\n              }\n            />\n          </ListItem>\n        </List>\n      </Container>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"../../styles/wellComponent.css\";\n// import LCG from \"leaflet-control-geocoder\";\n// import icon from \"leaflet/dist/images/marker-icon.png\";\nimport {\n  Button,\n  Grid,\n  GridList,\n  GridListTile,\n  TextField,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Snackbar,\n  SnackBarMessage\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\n\n// const useStyles = makeStyles(theme => ({\n//   formControl: {\n//     margin: theme.spacing(1),\n//     minWidth: 120\n//   },\n//   selectEmpty: {\n//     marginTop: theme.spacing(2)\n//   }\n// }));\nconst LightButton = withStyles({\n  root: {\n    backgroundColor: \"#e3f2f4\",\n    borderRadius: \"20px\",\n    color: \"#000\",\n    padding: \"10px 20px 10px 20px\",\n    \"&:hover\": {\n      backgroundColor: \"#48a8ab\",\n      color: \"#fff\"\n    }\n  }\n})(Button);\n\n// const [state, setState] = React.useState({\n//   snackOpen: false,\n//   snackVertical: \"top\",\n//   snackHorizontal: \"center\"\n// });\n\nexport default class WellComponent extends Component {\n  myMap = React.createRef();\n\n  constructor() {\n    super();\n    this.state = {\n      progress: 0,\n      address: \"Enter Address\",\n      markers: [[35.78658905, -78.67144915505475]],\n      showAddressChangeBtn: false,\n      zoom: 13,\n      addressVerified: false,\n      snackOpen: false,\n      snackVertical: \"bottom\",\n      snackHorizontal: \"center\",\n      snackMessage: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  //   fetch(`https://httpbin.org/get`,{\n  //     method: `GET`,\n  //     headers: {\n  //         'authorization': 'BaseAuth W1lcmxsa='\n  //     }\n  // }).then((res)=>{\n  //     if(res.ok) {\n  //         return res.json();\n  //     }\n  // }).then((res)=>{\n  //     console.log(res); // It is like final answer of XHR or jQuery Ajax\n  // })\n\n  queryGEORevAPI = (lat, lon) => {\n    fetch(\n      `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lon}&format=json`,\n      {\n        method: \"GET\"\n      }\n    )\n      .then(ret => {\n        if (ret.ok) {\n          return ret.json();\n        }\n      })\n      .then(data => {\n        let latlng = data.display_name;\n        this.setState({\n          address: latlng,\n          addressVerified: true\n        });\n        // let latlng = data.results.map((latlng) => {\n\n        // })\n      });\n  };\n  addMarker = e => {\n    const { markers } = this.state;\n    markers.pop();\n    markers.push(e.latlng);\n    this.setState({ markers });\n    console.log(markers[0]);\n    let lon = markers[0].lng;\n    let lat = markers[0].lat;\n    this.queryGEORevAPI(lat, lon);\n  };\n  handleSnackClose = () => {\n    this.setState({ snackOpen: false, snackMessage: \"\" });\n  };\n  setWellProgress(index) {\n    if (index === 2) {\n      // validate address before proceeding to step 3\n      if (this.state.addressVerified) {\n        // if address has been verified then go to next step else throw error\n        this.setState({\n          progress: index\n        });\n      } else {\n        this.setState({\n          snackOpen: true,\n          snackMessage: \"Please select a valid address first!\"\n        });\n      }\n    } else {\n      this.setState({\n        progress: index\n      });\n    }\n\n    console.log(index);\n  }\n  isParent() {\n    if (this.state.progress === 0) return true;\n    else return false;\n  }\n  handleMapClick = event => {\n    const { lat, long } = event.latlng;\n    console.log(`Clicked at ${lat}, ${long}`);\n  };\n\n  handleAddressChangeByText = event => {\n    this.setState({\n      address: event.target.value,\n      showAddressChangeBtn: true\n    });\n  };\n\n  updateAddressOnClick = () => {\n    // update the new text address from state to map with a new marker!\n\n    // get currect address from state\n    var q = this.state.address;\n    // https://nominatim.openstreetmap.org/search/?q=1139%20crab%20orchard%20drive&format=json\n    fetch(`https://nominatim.openstreetmap.org/search/?q=${q}&format=json`, {\n      method: \"GET\"\n    })\n      .then(ret => {\n        if (ret.ok) {\n          return ret.json();\n        }\n      })\n      .then(data => {\n        console.log(data);\n        if (data.length === 1) {\n          this.setState({\n            markers: [[data[0].lat, data[0].lon]],\n            zoom: 15,\n            addressVerified: true\n          });\n        } else {\n          this.setState({\n            address: \"Please complete the address\",\n            addressVerified: false\n          });\n        }\n\n        // let latlng = data.display_name;\n        // this.setState({\n        //   address: latlng\n        // });\n        // let latlng = data.results.map((latlng) => {\n\n        // })\n      })\n      .then(() => {\n        this.setState({\n          showAddressChangeBtn: false\n        });\n      });\n  };\n\n  renderProgress = () => {\n    switch (this.state.progress) {\n      case 0:\n        return (\n          <Grid\n            container\n            align=\"center\"\n            justify=\"center\"\n            direction=\"column\"\n            style={{\n              backgroundImage: `url(/images/cover-crop-field.jpg)`,\n              backgroundSize: \"cover\",\n              height: \"75vh\",\n              backgroundRepeat: \"no-repeat\"\n            }}\n          >\n            <Grid\n              item\n              style={{\n                backgroundColor: \"rgba(240,247,235,0.8)\",\n                width: \"90%\",\n                margin: \"0 auto\",\n                textAlign: \"\",\n                padding: \"6%\"\n              }}\n            >\n              <h1>Welcome to the NECCC Cover Crop Decision Support Tool </h1>\n              <p>\n                You are currently interacting with a Beta version of the Cover\n                Crop DSTs. The purpose of this interaction is so that we may\n                gather feedback about the usability and usefulness of these\n                tools.\n              </p>\n              <p>\n                The cover crop data you will see has been created by the NECCC\n                Data Verification Team of cover crop experts, the original MCCC\n                species selector tool, a seeding rate calculator developd by\n                NRCS NY, and several other data sources. Please note: these data\n                are still being finalized by NECCC teams for each of the plant\n                hardiness zones. The data shown are a preview and are yet to be\n                finalized.{\" \"}\n              </p>{\" \"}\n              <p style={{ fontWeight: \"bold\" }}>\n                {\" \"}\n                Thank you for your time and consideration. We look forward to\n                your feedback and hope to build a pleasant cover crop tool\n                experience for you to effectively select and manage your cover\n                crops.\n              </p>\n            </Grid>\n            <Grid container>\n              <Grid item md={4}></Grid>\n              <Grid item style={{ marginTop: \"2%\" }} md={4}>\n                <LightButton\n                  onClick={() => {\n                    this.setWellProgress(1);\n                  }}\n                >\n                  NEXT\n                </LightButton>\n              </Grid>\n              <Grid item md={4}></Grid>\n            </Grid>\n          </Grid>\n        );\n      case 1:\n        return (\n          <Grid\n            container\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ marginTop: \"5%\" }}\n          >\n            <GridList\n              children={2}\n              cols={2}\n              cellHeight={300}\n              style={{\n                backgroundColor: \"rgba(255,255,255,1)\",\n                boxShadow: \"rgb(136, 136, 136) 0px 0px 1px\",\n                width: \"90%\",\n                margin: \"0 auto\",\n                textAlign: \"\",\n                padding: \"20px\"\n              }}\n            >\n              <GridListTile item md={6}>\n                <h1>Where is your field located? </h1>\n                <p>\n                  Select plant hardiness zone for least site specific results.\n                  Enter address or zip code for county-level specificity. For\n                  more specific results, mark out your field boundary in the\n                  map.\n                </p>\n\n                {/* <p style={{ fontWeight: \"bold\" }}>asd</p> */}\n                <form noValidate autoComplete=\"off\">\n                  <FormControl variant=\"outlined\" style={{ width: \"40%\" }}>\n                    <InputLabel id=\"demo-simple-select-outlined-label\" disabled>\n                      Plant Hardiness Zone\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-outlined-label\"\n                      id=\"demo-simple-select-outlined\"\n                      onChange={() => {}}\n                      disabled\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={0}>Zone 2 and 3</MenuItem>\n                      <MenuItem value={1}>Zone 4</MenuItem>\n                      <MenuItem value={2}>Zone 5</MenuItem>\n                      <MenuItem value={3}>Zone 6</MenuItem>\n                      <MenuItem value={4}>Zone 7</MenuItem>\n                    </Select>\n                  </FormControl>\n                  &nbsp;&nbsp;\n                  <TextField\n                    value={this.state.address === \"\" ? \"\" : this.state.address}\n                    id=\"locationAddress\"\n                    label=\"Location\"\n                    variant=\"outlined\"\n                    style={{ width: \"40%\" }}\n                    onChange={this.handleAddressChangeByText}\n                  />\n                  {this.state.showAddressChangeBtn ? (\n                    <LightButton\n                      style={{ marginLeft: \"15px\", marginTop: \"5px\" }}\n                      onClick={this.updateAddressOnClick}\n                    >\n                      Update\n                    </LightButton>\n                  ) : (\n                    \"\"\n                  )}\n                </form>\n              </GridListTile>\n              <GridListTile item md={6}>\n                <Map\n                  style={{ height: \"100%\" }}\n                  center={this.state.markers[0]}\n                  zoom={this.state.zoom}\n                  minZoom={3}\n                  maxZoom={20}\n                  onClick={this.addMarker}\n                  ref={this.myMap}\n                >\n                  <TileLayer\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?\"\n                  />\n                  {this.state.markers.map((position, idx) => (\n                    <Marker key={`marker-${idx}`} position={position}>\n                      <Popup>\n                        <span>{this.state.address}</span>\n                      </Popup>\n                    </Marker>\n                  ))}\n                </Map>\n              </GridListTile>\n            </GridList>\n          </Grid>\n        );\n      case 2:\n        return \"Step 3\";\n      default:\n        return \"non handled case\";\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ width: \"100%\" }}>\n        {this.renderProgress()}\n\n        {this.state.progress !== 0 ? (\n          <Grid container style={{ marginTop: \"2%\", width: \"100%\" }}>\n            <Grid item md={3}></Grid>\n            <Grid item md={6}>\n              <LightButton\n                onClick={() => {\n                  this.setWellProgress(this.state.progress - 1);\n                }}\n              >\n                Back\n              </LightButton>\n              <LightButton\n                onClick={() => {\n                  this.setWellProgress(this.state.progress + 1);\n                }}\n                style={{\n                  marginLeft: \"5px\"\n                }}\n              >\n                NEXT\n              </LightButton>\n            </Grid>\n            <Grid item md={3} style={{ textAlign: \"right\" }}>\n              <div className=\"progress\">\n                <div className=\"progress-track\"></div>\n\n                <div\n                  id=\"step1\"\n                  className=\"progress-step\"\n                  style={\n                    this.state.progress !== 1\n                      ? { backgroundColor: \"gray\", color: \"black\" }\n                      : { backgroundColor: \"green\" }\n                  }\n                >\n                  Step One\n                </div>\n\n                <div\n                  id=\"step2\"\n                  className=\"progress-step\"\n                  style={\n                    this.state.progress !== 2\n                      ? { backgroundColor: \"gray\", color: \"black\" }\n                      : { backgroundColor: \"green\" }\n                  }\n                >\n                  Step Two\n                </div>\n\n                <div\n                  id=\"step3\"\n                  className=\"progress-step\"\n                  style={\n                    this.state.progress !== 3\n                      ? { backgroundColor: \"gray\", color: \"black\" }\n                      : { backgroundColor: \"green\" }\n                  }\n                >\n                  Step Three\n                </div>\n\n                <div\n                  id=\"step4\"\n                  className=\"progress-step\"\n                  style={\n                    this.state.progress !== 4\n                      ? { backgroundColor: \"gray\", color: \"black\" }\n                      : { backgroundColor: \"green\" }\n                  }\n                >\n                  Last Step\n                </div>\n              </div>\n            </Grid>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n        <Snackbar\n          anchorOrigin={{\n            vertical: this.state.snackVertical,\n            horizontal: this.state.snackHorizontal\n          }}\n          key={{\n            vertical: this.state.snackVertical,\n            horizontal: this.state.snackHorizontal\n          }}\n          autoHideDuration={5000}\n          open={this.state.snackOpen}\n          onClose={this.handleSnackClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={this.state.snackMessage}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport class GreenBarComponent extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <Grid container style={{ backgroundColor: \"green\", height: \"40px\" }}>\n        <Grid item xl={12}></Grid>\n      </Grid>\n    );\n  }\n}\n","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\n// import Header from \"./components/Header/header\";\n// import Body from \"./components/body\";\nimport { Grid, Box } from \"@material-ui/core\";\n// import Navigation from \"./components/navigation\";\nimport Footer from \"./components/Footer/footer\";\nimport Header from \"./components/Header/header\";\nimport WellComponent from \"./components/Well/wellComponent\";\nimport { GreenBarComponent } from \"./components/GreenBar/greenBarComponent\";\n// import BodyComponent from \"./components/body\";\n\nconst logoPath = \"/images/neccc_wide_logo_color_web.jpg\";\n\nfunction App() {\n  // const isRootRoute = this.props.path == \"/\" ? true : false;\n  return (\n    <Box component=\"div\">\n      {/* Our header.js file exports the reusable Header component.\n      It is just a simple Grid based header with logo on the left hand side and typography on the right  */}\n\n      <Header logoPath={`${logoPath}`} />\n\n      <GreenBarComponent />\n\n      <WellComponent />\n      {/* <BodyComponent /> */}\n      {/* {isRootRoute ? <Header logoPath={`${logoPath}`} /> : \"\"} */}\n\n      {/*\n      Our Main part of this application would be this Navigation component. It contains code for our main navigation\n      It is using a material-ui tab panel for simplicity and ease of use.\n      Each tab contains/would-contain components individually, as required.\n      */}\n\n      {/* <Navigation /> */}\n\n      {/* body.js is just a temporary code, that would eventually be replaced by footer.js\n      Until production, this can serve as a playground!!\n      */}\n\n      {/* <Body /> */}\n\n      <Footer />\n    </Box>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}